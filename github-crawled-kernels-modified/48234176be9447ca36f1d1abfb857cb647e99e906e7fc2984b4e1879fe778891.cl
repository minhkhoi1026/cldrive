//{"Classifier_Performance":0,"DATA_D":7,"DATA_H":6,"DATA_W":5,"EPOCS":10,"Mask":2,"NUMBER_OF_VOLUMES":8,"Volume":12,"Volumes":1,"a":13,"b":14,"c_Correct_Classes":4,"c_d":3,"gradient":16,"n":9,"validation":11,"weights":15}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
int Calculate2DIndex(int x, int y, int DATA_W) {
  return x + y * DATA_W;
}

int Calculate3DIndex(int x, int y, int z, int DATA_W, int DATA_H) {
  return x + y * DATA_W + z * DATA_W * DATA_H;
}

int Calculate4DIndex(int x, int y, int z, int t, int DATA_W, int DATA_H, int DATA_D) {
  return x + y * DATA_W + z * DATA_W * DATA_H + t * DATA_W * DATA_H * DATA_D;
}

void ReadSphere(local float* Volume, global const float* Volumes, int x, int y, int z, int t, int3 tIdx, int DATA_W, int DATA_H, int DATA_D) {
  Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y, tIdx.z, 16, 16))] = 0.0f;
  Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y, tIdx.z, 16, 16))] = 0.0f;
  Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y + 8, tIdx.z, 16, 16))] = 0.0f;
  Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y + 8, tIdx.z, 16, 16))] = 0.0f;
  Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y, tIdx.z + 8, 16, 16))] = 0.0f;
  Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y, tIdx.z + 8, 16, 16))] = 0.0f;
  Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y + 8, tIdx.z + 8, 16, 16))] = 0.0f;
  Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y + 8, tIdx.z + 8, 16, 16))] = 0.0f;

  if (((x - 4) < DATA_W) && ((x - 4) >= 0) && ((y - 4) < DATA_H) && ((y - 4) >= 0) && ((z - 4) < DATA_D) && ((z - 4) >= 0)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y, tIdx.z, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x - 4, y - 4, z - 4, t, DATA_W, DATA_H, DATA_D))];
  }

  if (((x + 4) < DATA_W) && ((y - 4) < DATA_H) && ((y - 4) >= 0) && ((z - 4) < DATA_D) && ((z - 4) >= 0)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y, tIdx.z, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x + 4, y - 4, z - 4, t, DATA_W, DATA_H, DATA_D))];
  }

  if (((x - 4) < DATA_W) && ((x - 4) >= 0) && ((y + 4) < DATA_H) && ((z - 4) < DATA_D) && ((z - 4) >= 0)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y + 8, tIdx.z, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x - 4, y + 4, z - 4, t, DATA_W, DATA_H, DATA_D))];
  }

  if (((x + 4) < DATA_W) && ((y + 4) < DATA_H) && ((z - 4) < DATA_D) && ((z - 4) >= 0)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y + 8, tIdx.z, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x + 4, y + 4, z - 4, t, DATA_W, DATA_H, DATA_D))];
  }

  if (((x - 4) < DATA_W) && ((x - 4) >= 0) && ((y - 4) < DATA_H) && ((y - 4) >= 0) && ((z + 4) < DATA_D)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y, tIdx.z + 8, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x - 4, y - 4, z + 4, t, DATA_W, DATA_H, DATA_D))];
  }

  if (((x + 4) < DATA_W) && ((y - 4) < DATA_H) && ((y - 4) >= 0) && ((z + 4) < DATA_D)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y, tIdx.z + 8, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x + 4, y - 4, z + 4, t, DATA_W, DATA_H, DATA_D))];
  }

  if (((x - 4) < DATA_W) && ((x - 4) >= 0) && ((y + 4) < DATA_H) && ((z + 4) < DATA_D)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x, tIdx.y + 8, tIdx.z + 8, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x - 4, y + 4, z + 4, t, DATA_W, DATA_H, DATA_D))];
  }

  if (((x + 4) < DATA_W) && ((y + 4) < DATA_H) && ((z + 4) < DATA_D)) {
    Volume[hook(12, Calculate3DIndex(tIdx.x + 8, tIdx.y + 8, tIdx.z + 8, 16, 16))] = Volumes[hook(1, Calculate4DIndex(x + 4, y + 4, z + 4, t, DATA_W, DATA_H, DATA_D))];
  }
}

void normalize_x(global float* x_space, int N, int d);

float doFold(global float* dense_points, global int* trainIndex, global int* testIndex, int d, global float* alpha, constant float* c_Correct_Classes, int trainN, int numExemplos, global const float* kmatrix, int fold, int NperFold);

float dotproduct(global float* a, global float* b, int N) {
  float ret = 0;
  for (int k = 0; k < N; ++k) {
    ret += a[hook(13, k)] * b[hook(14, k)];
  }
  return ret;
}

kernel void CalculateStatisticalMapSearchlight_123(global float* Classifier_Performance, global const float* Volumes, global const float* Mask, constant float* c_d, constant float* c_Correct_Classes, private int DATA_W, private int DATA_H, private int DATA_D, private int NUMBER_OF_VOLUMES, private float n, private int EPOCS, private int validation)

{
  int x = get_global_id(0);
  int y = get_global_id(1);
  int z = get_global_id(2);

  if (x >= DATA_W || y >= DATA_H || z >= DATA_D)
    return;

  if (Mask[hook(2, Calculate3DIndex(x, y, z, DATA_W, DATA_H))] != 1.0f) {
    Classifier_Performance[hook(0, Calculate3DIndex(x, y, z, DATA_W, DATA_H))] = 0.0f;
    return;
  }

  if (((x + 3) >= DATA_W) || ((y + 3) >= DATA_H) || ((z + 3) >= DATA_D)) {
    Classifier_Performance[hook(0, Calculate3DIndex(x, y, z, DATA_W, DATA_H))] = 0.0f;
    return;
  }

  if (((x - 3) < 0) || ((y - 3) < 0) || ((z - 3) < 0)) {
    Classifier_Performance[hook(0, Calculate3DIndex(x, y, z, DATA_W, DATA_H))] = 0.0f;
    return;
  }

  int classification_performance = 0;

  float weights[124];

  int uncensoredVolumes = 0;

  {
    if (c_Correct_Classes[hook(4, validation)] == 9999.0f) {
    }

    uncensoredVolumes++;

    weights[hook(15, 0)] = 0.0f;
    weights[hook(15, 1)] = 0.0f;
    weights[hook(15, 2)] = 0.0f;
    weights[hook(15, 3)] = 0.0f;
    weights[hook(15, 4)] = 0.0f;
    weights[hook(15, 5)] = 0.0f;
    weights[hook(15, 6)] = 0.0f;
    weights[hook(15, 7)] = 0.0f;
    weights[hook(15, 8)] = 0.0f;
    weights[hook(15, 9)] = 0.0f;
    weights[hook(15, 10)] = 0.0f;
    weights[hook(15, 11)] = 0.0f;
    weights[hook(15, 12)] = 0.0f;
    weights[hook(15, 13)] = 0.0f;
    weights[hook(15, 14)] = 0.0f;
    weights[hook(15, 15)] = 0.0f;
    weights[hook(15, 16)] = 0.0f;
    weights[hook(15, 17)] = 0.0f;
    weights[hook(15, 18)] = 0.0f;
    weights[hook(15, 19)] = 0.0f;
    weights[hook(15, 20)] = 0.0f;
    weights[hook(15, 21)] = 0.0f;
    weights[hook(15, 22)] = 0.0f;
    weights[hook(15, 23)] = 0.0f;
    weights[hook(15, 24)] = 0.0f;
    weights[hook(15, 25)] = 0.0f;
    weights[hook(15, 26)] = 0.0f;
    weights[hook(15, 27)] = 0.0f;
    weights[hook(15, 28)] = 0.0f;
    weights[hook(15, 29)] = 0.0f;
    weights[hook(15, 30)] = 0.0f;
    weights[hook(15, 31)] = 0.0f;
    weights[hook(15, 32)] = 0.0f;
    weights[hook(15, 33)] = 0.0f;
    weights[hook(15, 34)] = 0.0f;
    weights[hook(15, 35)] = 0.0f;
    weights[hook(15, 36)] = 0.0f;
    weights[hook(15, 37)] = 0.0f;
    weights[hook(15, 38)] = 0.0f;
    weights[hook(15, 39)] = 0.0f;
    weights[hook(15, 40)] = 0.0f;
    weights[hook(15, 41)] = 0.0f;
    weights[hook(15, 42)] = 0.0f;
    weights[hook(15, 43)] = 0.0f;
    weights[hook(15, 44)] = 0.0f;
    weights[hook(15, 45)] = 0.0f;
    weights[hook(15, 46)] = 0.0f;
    weights[hook(15, 47)] = 0.0f;
    weights[hook(15, 48)] = 0.0f;
    weights[hook(15, 49)] = 0.0f;
    weights[hook(15, 50)] = 0.0f;
    weights[hook(15, 51)] = 0.0f;
    weights[hook(15, 52)] = 0.0f;
    weights[hook(15, 53)] = 0.0f;
    weights[hook(15, 54)] = 0.0f;
    weights[hook(15, 55)] = 0.0f;
    weights[hook(15, 56)] = 0.0f;
    weights[hook(15, 57)] = 0.0f;
    weights[hook(15, 58)] = 0.0f;
    weights[hook(15, 59)] = 0.0f;
    weights[hook(15, 60)] = 0.0f;
    weights[hook(15, 61)] = 0.0f;
    weights[hook(15, 62)] = 0.0f;
    weights[hook(15, 63)] = 0.0f;
    weights[hook(15, 64)] = 0.0f;
    weights[hook(15, 65)] = 0.0f;
    weights[hook(15, 66)] = 0.0f;
    weights[hook(15, 67)] = 0.0f;
    weights[hook(15, 68)] = 0.0f;
    weights[hook(15, 69)] = 0.0f;
    weights[hook(15, 70)] = 0.0f;
    weights[hook(15, 71)] = 0.0f;
    weights[hook(15, 72)] = 0.0f;
    weights[hook(15, 73)] = 0.0f;
    weights[hook(15, 74)] = 0.0f;
    weights[hook(15, 75)] = 0.0f;
    weights[hook(15, 76)] = 0.0f;
    weights[hook(15, 77)] = 0.0f;
    weights[hook(15, 78)] = 0.0f;
    weights[hook(15, 79)] = 0.0f;
    weights[hook(15, 80)] = 0.0f;
    weights[hook(15, 81)] = 0.0f;
    weights[hook(15, 82)] = 0.0f;
    weights[hook(15, 83)] = 0.0f;
    weights[hook(15, 84)] = 0.0f;
    weights[hook(15, 85)] = 0.0f;
    weights[hook(15, 86)] = 0.0f;
    weights[hook(15, 87)] = 0.0f;
    weights[hook(15, 88)] = 0.0f;
    weights[hook(15, 89)] = 0.0f;
    weights[hook(15, 90)] = 0.0f;
    weights[hook(15, 91)] = 0.0f;
    weights[hook(15, 92)] = 0.0f;
    weights[hook(15, 93)] = 0.0f;
    weights[hook(15, 94)] = 0.0f;
    weights[hook(15, 95)] = 0.0f;
    weights[hook(15, 96)] = 0.0f;
    weights[hook(15, 97)] = 0.0f;
    weights[hook(15, 98)] = 0.0f;
    weights[hook(15, 99)] = 0.0f;
    weights[hook(15, 100)] = 0.0f;
    weights[hook(15, 101)] = 0.0f;
    weights[hook(15, 102)] = 0.0f;
    weights[hook(15, 103)] = 0.0f;
    weights[hook(15, 104)] = 0.0f;
    weights[hook(15, 105)] = 0.0f;
    weights[hook(15, 106)] = 0.0f;
    weights[hook(15, 107)] = 0.0f;
    weights[hook(15, 108)] = 0.0f;
    weights[hook(15, 109)] = 0.0f;
    weights[hook(15, 110)] = 0.0f;
    weights[hook(15, 111)] = 0.0f;
    weights[hook(15, 112)] = 0.0f;
    weights[hook(15, 113)] = 0.0f;
    weights[hook(15, 114)] = 0.0f;
    weights[hook(15, 115)] = 0.0f;
    weights[hook(15, 116)] = 0.0f;
    weights[hook(15, 117)] = 0.0f;
    weights[hook(15, 118)] = 0.0f;
    weights[hook(15, 119)] = 0.0f;
    weights[hook(15, 120)] = 0.0f;
    weights[hook(15, 121)] = 0.0f;
    weights[hook(15, 122)] = 0.0f;
    weights[hook(15, 123)] = 0.0f;

    for (int epoc = 0; epoc < EPOCS; epoc++) {
      float gradient[124];

      gradient[hook(16, 0)] = 0.0f;
      gradient[hook(16, 1)] = 0.0f;
      gradient[hook(16, 2)] = 0.0f;
      gradient[hook(16, 3)] = 0.0f;
      gradient[hook(16, 4)] = 0.0f;
      gradient[hook(16, 5)] = 0.0f;
      gradient[hook(16, 6)] = 0.0f;
      gradient[hook(16, 7)] = 0.0f;
      gradient[hook(16, 8)] = 0.0f;
      gradient[hook(16, 9)] = 0.0f;
      gradient[hook(16, 10)] = 0.0f;
      gradient[hook(16, 11)] = 0.0f;
      gradient[hook(16, 12)] = 0.0f;
      gradient[hook(16, 13)] = 0.0f;
      gradient[hook(16, 14)] = 0.0f;
      gradient[hook(16, 15)] = 0.0f;
      gradient[hook(16, 16)] = 0.0f;
      gradient[hook(16, 17)] = 0.0f;
      gradient[hook(16, 18)] = 0.0f;
      gradient[hook(16, 19)] = 0.0f;
      gradient[hook(16, 20)] = 0.0f;
      gradient[hook(16, 21)] = 0.0f;
      gradient[hook(16, 22)] = 0.0f;
      gradient[hook(16, 23)] = 0.0f;
      gradient[hook(16, 24)] = 0.0f;
      gradient[hook(16, 25)] = 0.0f;
      gradient[hook(16, 26)] = 0.0f;
      gradient[hook(16, 27)] = 0.0f;
      gradient[hook(16, 28)] = 0.0f;
      gradient[hook(16, 29)] = 0.0f;
      gradient[hook(16, 30)] = 0.0f;
      gradient[hook(16, 31)] = 0.0f;
      gradient[hook(16, 32)] = 0.0f;
      gradient[hook(16, 33)] = 0.0f;
      gradient[hook(16, 34)] = 0.0f;
      gradient[hook(16, 35)] = 0.0f;
      gradient[hook(16, 36)] = 0.0f;
      gradient[hook(16, 37)] = 0.0f;
      gradient[hook(16, 38)] = 0.0f;
      gradient[hook(16, 39)] = 0.0f;
      gradient[hook(16, 40)] = 0.0f;
      gradient[hook(16, 41)] = 0.0f;
      gradient[hook(16, 42)] = 0.0f;
      gradient[hook(16, 43)] = 0.0f;
      gradient[hook(16, 44)] = 0.0f;
      gradient[hook(16, 45)] = 0.0f;
      gradient[hook(16, 46)] = 0.0f;
      gradient[hook(16, 47)] = 0.0f;
      gradient[hook(16, 48)] = 0.0f;
      gradient[hook(16, 49)] = 0.0f;
      gradient[hook(16, 50)] = 0.0f;
      gradient[hook(16, 51)] = 0.0f;
      gradient[hook(16, 52)] = 0.0f;
      gradient[hook(16, 53)] = 0.0f;
      gradient[hook(16, 54)] = 0.0f;
      gradient[hook(16, 55)] = 0.0f;
      gradient[hook(16, 56)] = 0.0f;
      gradient[hook(16, 57)] = 0.0f;
      gradient[hook(16, 58)] = 0.0f;
      gradient[hook(16, 59)] = 0.0f;
      gradient[hook(16, 60)] = 0.0f;
      gradient[hook(16, 61)] = 0.0f;
      gradient[hook(16, 62)] = 0.0f;
      gradient[hook(16, 63)] = 0.0f;
      gradient[hook(16, 64)] = 0.0f;
      gradient[hook(16, 65)] = 0.0f;
      gradient[hook(16, 66)] = 0.0f;
      gradient[hook(16, 67)] = 0.0f;
      gradient[hook(16, 68)] = 0.0f;
      gradient[hook(16, 69)] = 0.0f;
      gradient[hook(16, 70)] = 0.0f;
      gradient[hook(16, 71)] = 0.0f;
      gradient[hook(16, 72)] = 0.0f;
      gradient[hook(16, 73)] = 0.0f;
      gradient[hook(16, 74)] = 0.0f;
      gradient[hook(16, 75)] = 0.0f;
      gradient[hook(16, 76)] = 0.0f;
      gradient[hook(16, 77)] = 0.0f;
      gradient[hook(16, 78)] = 0.0f;
      gradient[hook(16, 79)] = 0.0f;
      gradient[hook(16, 80)] = 0.0f;
      gradient[hook(16, 81)] = 0.0f;
      gradient[hook(16, 82)] = 0.0f;
      gradient[hook(16, 83)] = 0.0f;
      gradient[hook(16, 84)] = 0.0f;
      gradient[hook(16, 85)] = 0.0f;
      gradient[hook(16, 86)] = 0.0f;
      gradient[hook(16, 87)] = 0.0f;
      gradient[hook(16, 88)] = 0.0f;
      gradient[hook(16, 89)] = 0.0f;
      gradient[hook(16, 90)] = 0.0f;
      gradient[hook(16, 91)] = 0.0f;
      gradient[hook(16, 92)] = 0.0f;
      gradient[hook(16, 93)] = 0.0f;
      gradient[hook(16, 94)] = 0.0f;
      gradient[hook(16, 95)] = 0.0f;
      gradient[hook(16, 96)] = 0.0f;
      gradient[hook(16, 97)] = 0.0f;
      gradient[hook(16, 98)] = 0.0f;
      gradient[hook(16, 99)] = 0.0f;
      gradient[hook(16, 100)] = 0.0f;
      gradient[hook(16, 101)] = 0.0f;
      gradient[hook(16, 102)] = 0.0f;
      gradient[hook(16, 103)] = 0.0f;
      gradient[hook(16, 104)] = 0.0f;
      gradient[hook(16, 105)] = 0.0f;
      gradient[hook(16, 106)] = 0.0f;
      gradient[hook(16, 107)] = 0.0f;
      gradient[hook(16, 108)] = 0.0f;
      gradient[hook(16, 109)] = 0.0f;
      gradient[hook(16, 110)] = 0.0f;
      gradient[hook(16, 111)] = 0.0f;
      gradient[hook(16, 112)] = 0.0f;
      gradient[hook(16, 113)] = 0.0f;
      gradient[hook(16, 114)] = 0.0f;
      gradient[hook(16, 115)] = 0.0f;
      gradient[hook(16, 116)] = 0.0f;
      gradient[hook(16, 117)] = 0.0f;
      gradient[hook(16, 118)] = 0.0f;
      gradient[hook(16, 119)] = 0.0f;
      gradient[hook(16, 120)] = 0.0f;
      gradient[hook(16, 121)] = 0.0f;
      gradient[hook(16, 122)] = 0.0f;
      gradient[hook(16, 123)] = 0.0f;

      for (int t = 0; t < NUMBER_OF_VOLUMES; t++) {
        if ((t == validation) || (c_Correct_Classes[hook(4, t)] == 9999.0f)) {
          continue;
        }

        float s;
        s = weights[hook(15, 0)] * 1.0f;

        float x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123;

        x1 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z - 3, t, DATA_W, DATA_H, DATA_D))];
        x2 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x3 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x4 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x5 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x6 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x7 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x8 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x9 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x10 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x11 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x12 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x13 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x14 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x15 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x16 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x17 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x18 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x19 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x20 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x21 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x22 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z - 2, t, DATA_W, DATA_H, DATA_D))];
        x23 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x24 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x25 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x26 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x27 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x28 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x29 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x30 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x31 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x32 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x33 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x34 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x35 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x36 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x37 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x38 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x39 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x40 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x41 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x42 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x43 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x44 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x45 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x46 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x47 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 2, z - 1, t, DATA_W, DATA_H, DATA_D))];
        x48 = Volumes[hook(1, Calculate4DIndex(x - 3, y + 0, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x49 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x50 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x51 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x52 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x53 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x54 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x55 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x56 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x57 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x58 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x59 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 3, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x60 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x61 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x62 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x63 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x64 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x65 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 3, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x66 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x67 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x68 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x69 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x70 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x71 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x72 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x73 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x74 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x75 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 2, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x76 = Volumes[hook(1, Calculate4DIndex(x + 3, y + 0, z + 0, t, DATA_W, DATA_H, DATA_D))];
        x77 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x78 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x79 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x80 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x81 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x82 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x83 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x84 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x85 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x86 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x87 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x88 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x89 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x90 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x91 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x92 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x93 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x94 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x95 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x96 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x97 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x98 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x99 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x100 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x101 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 2, z + 1, t, DATA_W, DATA_H, DATA_D))];
        x102 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x103 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x104 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x105 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x106 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x107 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x108 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x109 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x110 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x111 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x112 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x113 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x114 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x115 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x116 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x117 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x118 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x119 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x120 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x121 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x122 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z + 2, t, DATA_W, DATA_H, DATA_D))];
        x123 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 3, t, DATA_W, DATA_H, DATA_D))];

        s += weights[hook(15, 1)] * x1;
        s += weights[hook(15, 2)] * x2;
        s += weights[hook(15, 3)] * x3;
        s += weights[hook(15, 4)] * x4;
        s += weights[hook(15, 5)] * x5;
        s += weights[hook(15, 6)] * x6;
        s += weights[hook(15, 7)] * x7;
        s += weights[hook(15, 8)] * x8;
        s += weights[hook(15, 9)] * x9;
        s += weights[hook(15, 10)] * x10;
        s += weights[hook(15, 11)] * x11;
        s += weights[hook(15, 12)] * x12;
        s += weights[hook(15, 13)] * x13;
        s += weights[hook(15, 14)] * x14;
        s += weights[hook(15, 15)] * x15;
        s += weights[hook(15, 16)] * x16;
        s += weights[hook(15, 17)] * x17;
        s += weights[hook(15, 18)] * x18;
        s += weights[hook(15, 19)] * x19;
        s += weights[hook(15, 20)] * x20;
        s += weights[hook(15, 21)] * x21;
        s += weights[hook(15, 22)] * x22;
        s += weights[hook(15, 23)] * x23;
        s += weights[hook(15, 24)] * x24;
        s += weights[hook(15, 25)] * x25;
        s += weights[hook(15, 26)] * x26;
        s += weights[hook(15, 27)] * x27;
        s += weights[hook(15, 28)] * x28;
        s += weights[hook(15, 29)] * x29;
        s += weights[hook(15, 30)] * x30;
        s += weights[hook(15, 31)] * x31;
        s += weights[hook(15, 32)] * x32;
        s += weights[hook(15, 33)] * x33;
        s += weights[hook(15, 34)] * x34;
        s += weights[hook(15, 35)] * x35;
        s += weights[hook(15, 36)] * x36;
        s += weights[hook(15, 37)] * x37;
        s += weights[hook(15, 38)] * x38;
        s += weights[hook(15, 39)] * x39;
        s += weights[hook(15, 40)] * x40;
        s += weights[hook(15, 41)] * x41;
        s += weights[hook(15, 42)] * x42;
        s += weights[hook(15, 43)] * x43;
        s += weights[hook(15, 44)] * x44;
        s += weights[hook(15, 45)] * x45;
        s += weights[hook(15, 46)] * x46;
        s += weights[hook(15, 47)] * x47;
        s += weights[hook(15, 48)] * x48;
        s += weights[hook(15, 49)] * x49;
        s += weights[hook(15, 50)] * x50;
        s += weights[hook(15, 51)] * x51;
        s += weights[hook(15, 52)] * x52;
        s += weights[hook(15, 53)] * x53;
        s += weights[hook(15, 54)] * x54;
        s += weights[hook(15, 55)] * x55;
        s += weights[hook(15, 56)] * x56;
        s += weights[hook(15, 57)] * x57;
        s += weights[hook(15, 58)] * x58;
        s += weights[hook(15, 59)] * x59;
        s += weights[hook(15, 60)] * x60;
        s += weights[hook(15, 61)] * x61;
        s += weights[hook(15, 62)] * x62;
        s += weights[hook(15, 63)] * x63;
        s += weights[hook(15, 64)] * x64;
        s += weights[hook(15, 65)] * x65;
        s += weights[hook(15, 66)] * x66;
        s += weights[hook(15, 67)] * x67;
        s += weights[hook(15, 68)] * x68;
        s += weights[hook(15, 69)] * x69;
        s += weights[hook(15, 70)] * x70;
        s += weights[hook(15, 71)] * x71;
        s += weights[hook(15, 72)] * x72;
        s += weights[hook(15, 73)] * x73;
        s += weights[hook(15, 74)] * x74;
        s += weights[hook(15, 75)] * x75;
        s += weights[hook(15, 76)] * x76;
        s += weights[hook(15, 77)] * x77;
        s += weights[hook(15, 78)] * x78;
        s += weights[hook(15, 79)] * x79;
        s += weights[hook(15, 80)] * x80;
        s += weights[hook(15, 81)] * x81;
        s += weights[hook(15, 82)] * x82;
        s += weights[hook(15, 83)] * x83;
        s += weights[hook(15, 84)] * x84;
        s += weights[hook(15, 85)] * x85;
        s += weights[hook(15, 86)] * x86;
        s += weights[hook(15, 87)] * x87;
        s += weights[hook(15, 88)] * x88;
        s += weights[hook(15, 89)] * x89;
        s += weights[hook(15, 90)] * x90;
        s += weights[hook(15, 91)] * x91;
        s += weights[hook(15, 92)] * x92;
        s += weights[hook(15, 93)] * x93;
        s += weights[hook(15, 94)] * x94;
        s += weights[hook(15, 95)] * x95;
        s += weights[hook(15, 96)] * x96;
        s += weights[hook(15, 97)] * x97;
        s += weights[hook(15, 98)] * x98;
        s += weights[hook(15, 99)] * x99;
        s += weights[hook(15, 100)] * x100;
        s += weights[hook(15, 101)] * x101;
        s += weights[hook(15, 102)] * x102;
        s += weights[hook(15, 103)] * x103;
        s += weights[hook(15, 104)] * x104;
        s += weights[hook(15, 105)] * x105;
        s += weights[hook(15, 106)] * x106;
        s += weights[hook(15, 107)] * x107;
        s += weights[hook(15, 108)] * x108;
        s += weights[hook(15, 109)] * x109;
        s += weights[hook(15, 110)] * x110;
        s += weights[hook(15, 111)] * x111;
        s += weights[hook(15, 112)] * x112;
        s += weights[hook(15, 113)] * x113;
        s += weights[hook(15, 114)] * x114;
        s += weights[hook(15, 115)] * x115;
        s += weights[hook(15, 116)] * x116;
        s += weights[hook(15, 117)] * x117;
        s += weights[hook(15, 118)] * x118;
        s += weights[hook(15, 119)] * x119;
        s += weights[hook(15, 120)] * x120;
        s += weights[hook(15, 121)] * x121;
        s += weights[hook(15, 122)] * x122;
        s += weights[hook(15, 123)] * x123;

        gradient[hook(16, 0)] += (s - c_d[hook(3, t)]) * 1.0f;

        gradient[hook(16, 1)] += (s - c_d[hook(3, t)]) * x1;
        gradient[hook(16, 2)] += (s - c_d[hook(3, t)]) * x2;
        gradient[hook(16, 3)] += (s - c_d[hook(3, t)]) * x3;
        gradient[hook(16, 4)] += (s - c_d[hook(3, t)]) * x4;
        gradient[hook(16, 5)] += (s - c_d[hook(3, t)]) * x5;
        gradient[hook(16, 6)] += (s - c_d[hook(3, t)]) * x6;
        gradient[hook(16, 7)] += (s - c_d[hook(3, t)]) * x7;
        gradient[hook(16, 8)] += (s - c_d[hook(3, t)]) * x8;
        gradient[hook(16, 9)] += (s - c_d[hook(3, t)]) * x9;
        gradient[hook(16, 10)] += (s - c_d[hook(3, t)]) * x10;
        gradient[hook(16, 11)] += (s - c_d[hook(3, t)]) * x11;
        gradient[hook(16, 12)] += (s - c_d[hook(3, t)]) * x12;
        gradient[hook(16, 13)] += (s - c_d[hook(3, t)]) * x13;
        gradient[hook(16, 14)] += (s - c_d[hook(3, t)]) * x14;
        gradient[hook(16, 15)] += (s - c_d[hook(3, t)]) * x15;
        gradient[hook(16, 16)] += (s - c_d[hook(3, t)]) * x16;
        gradient[hook(16, 17)] += (s - c_d[hook(3, t)]) * x17;
        gradient[hook(16, 18)] += (s - c_d[hook(3, t)]) * x18;
        gradient[hook(16, 19)] += (s - c_d[hook(3, t)]) * x19;
        gradient[hook(16, 20)] += (s - c_d[hook(3, t)]) * x20;
        gradient[hook(16, 21)] += (s - c_d[hook(3, t)]) * x21;
        gradient[hook(16, 22)] += (s - c_d[hook(3, t)]) * x22;
        gradient[hook(16, 23)] += (s - c_d[hook(3, t)]) * x23;
        gradient[hook(16, 24)] += (s - c_d[hook(3, t)]) * x24;
        gradient[hook(16, 25)] += (s - c_d[hook(3, t)]) * x25;
        gradient[hook(16, 26)] += (s - c_d[hook(3, t)]) * x26;
        gradient[hook(16, 27)] += (s - c_d[hook(3, t)]) * x27;
        gradient[hook(16, 28)] += (s - c_d[hook(3, t)]) * x28;
        gradient[hook(16, 29)] += (s - c_d[hook(3, t)]) * x29;
        gradient[hook(16, 30)] += (s - c_d[hook(3, t)]) * x30;
        gradient[hook(16, 31)] += (s - c_d[hook(3, t)]) * x31;
        gradient[hook(16, 32)] += (s - c_d[hook(3, t)]) * x32;
        gradient[hook(16, 33)] += (s - c_d[hook(3, t)]) * x33;
        gradient[hook(16, 34)] += (s - c_d[hook(3, t)]) * x34;
        gradient[hook(16, 35)] += (s - c_d[hook(3, t)]) * x35;
        gradient[hook(16, 36)] += (s - c_d[hook(3, t)]) * x36;
        gradient[hook(16, 37)] += (s - c_d[hook(3, t)]) * x37;
        gradient[hook(16, 38)] += (s - c_d[hook(3, t)]) * x38;
        gradient[hook(16, 39)] += (s - c_d[hook(3, t)]) * x39;
        gradient[hook(16, 40)] += (s - c_d[hook(3, t)]) * x40;
        gradient[hook(16, 41)] += (s - c_d[hook(3, t)]) * x41;
        gradient[hook(16, 42)] += (s - c_d[hook(3, t)]) * x42;
        gradient[hook(16, 43)] += (s - c_d[hook(3, t)]) * x43;
        gradient[hook(16, 44)] += (s - c_d[hook(3, t)]) * x44;
        gradient[hook(16, 45)] += (s - c_d[hook(3, t)]) * x45;
        gradient[hook(16, 46)] += (s - c_d[hook(3, t)]) * x46;
        gradient[hook(16, 47)] += (s - c_d[hook(3, t)]) * x47;
        gradient[hook(16, 48)] += (s - c_d[hook(3, t)]) * x48;
        gradient[hook(16, 49)] += (s - c_d[hook(3, t)]) * x49;
        gradient[hook(16, 50)] += (s - c_d[hook(3, t)]) * x50;
        gradient[hook(16, 51)] += (s - c_d[hook(3, t)]) * x51;
        gradient[hook(16, 52)] += (s - c_d[hook(3, t)]) * x52;
        gradient[hook(16, 53)] += (s - c_d[hook(3, t)]) * x53;
        gradient[hook(16, 54)] += (s - c_d[hook(3, t)]) * x54;
        gradient[hook(16, 55)] += (s - c_d[hook(3, t)]) * x55;
        gradient[hook(16, 56)] += (s - c_d[hook(3, t)]) * x56;
        gradient[hook(16, 57)] += (s - c_d[hook(3, t)]) * x57;
        gradient[hook(16, 58)] += (s - c_d[hook(3, t)]) * x58;
        gradient[hook(16, 59)] += (s - c_d[hook(3, t)]) * x59;
        gradient[hook(16, 60)] += (s - c_d[hook(3, t)]) * x60;
        gradient[hook(16, 61)] += (s - c_d[hook(3, t)]) * x61;
        gradient[hook(16, 62)] += (s - c_d[hook(3, t)]) * x62;
        gradient[hook(16, 63)] += (s - c_d[hook(3, t)]) * x63;
        gradient[hook(16, 64)] += (s - c_d[hook(3, t)]) * x64;
        gradient[hook(16, 65)] += (s - c_d[hook(3, t)]) * x65;
        gradient[hook(16, 66)] += (s - c_d[hook(3, t)]) * x66;
        gradient[hook(16, 67)] += (s - c_d[hook(3, t)]) * x67;
        gradient[hook(16, 68)] += (s - c_d[hook(3, t)]) * x68;
        gradient[hook(16, 69)] += (s - c_d[hook(3, t)]) * x69;
        gradient[hook(16, 70)] += (s - c_d[hook(3, t)]) * x70;
        gradient[hook(16, 71)] += (s - c_d[hook(3, t)]) * x71;
        gradient[hook(16, 72)] += (s - c_d[hook(3, t)]) * x72;
        gradient[hook(16, 73)] += (s - c_d[hook(3, t)]) * x73;
        gradient[hook(16, 74)] += (s - c_d[hook(3, t)]) * x74;
        gradient[hook(16, 75)] += (s - c_d[hook(3, t)]) * x75;
        gradient[hook(16, 76)] += (s - c_d[hook(3, t)]) * x76;
        gradient[hook(16, 77)] += (s - c_d[hook(3, t)]) * x77;
        gradient[hook(16, 78)] += (s - c_d[hook(3, t)]) * x78;
        gradient[hook(16, 79)] += (s - c_d[hook(3, t)]) * x79;
        gradient[hook(16, 80)] += (s - c_d[hook(3, t)]) * x80;
        gradient[hook(16, 81)] += (s - c_d[hook(3, t)]) * x81;
        gradient[hook(16, 82)] += (s - c_d[hook(3, t)]) * x82;
        gradient[hook(16, 83)] += (s - c_d[hook(3, t)]) * x83;
        gradient[hook(16, 84)] += (s - c_d[hook(3, t)]) * x84;
        gradient[hook(16, 85)] += (s - c_d[hook(3, t)]) * x85;
        gradient[hook(16, 86)] += (s - c_d[hook(3, t)]) * x86;
        gradient[hook(16, 87)] += (s - c_d[hook(3, t)]) * x87;
        gradient[hook(16, 88)] += (s - c_d[hook(3, t)]) * x88;
        gradient[hook(16, 89)] += (s - c_d[hook(3, t)]) * x89;
        gradient[hook(16, 90)] += (s - c_d[hook(3, t)]) * x90;
        gradient[hook(16, 91)] += (s - c_d[hook(3, t)]) * x91;
        gradient[hook(16, 92)] += (s - c_d[hook(3, t)]) * x92;
        gradient[hook(16, 93)] += (s - c_d[hook(3, t)]) * x93;
        gradient[hook(16, 94)] += (s - c_d[hook(3, t)]) * x94;
        gradient[hook(16, 95)] += (s - c_d[hook(3, t)]) * x95;
        gradient[hook(16, 96)] += (s - c_d[hook(3, t)]) * x96;
        gradient[hook(16, 97)] += (s - c_d[hook(3, t)]) * x97;
        gradient[hook(16, 98)] += (s - c_d[hook(3, t)]) * x98;
        gradient[hook(16, 99)] += (s - c_d[hook(3, t)]) * x99;
        gradient[hook(16, 100)] += (s - c_d[hook(3, t)]) * x100;
        gradient[hook(16, 101)] += (s - c_d[hook(3, t)]) * x101;
        gradient[hook(16, 102)] += (s - c_d[hook(3, t)]) * x102;
        gradient[hook(16, 103)] += (s - c_d[hook(3, t)]) * x103;
        gradient[hook(16, 104)] += (s - c_d[hook(3, t)]) * x104;
        gradient[hook(16, 105)] += (s - c_d[hook(3, t)]) * x105;
        gradient[hook(16, 106)] += (s - c_d[hook(3, t)]) * x106;
        gradient[hook(16, 107)] += (s - c_d[hook(3, t)]) * x107;
        gradient[hook(16, 108)] += (s - c_d[hook(3, t)]) * x108;
        gradient[hook(16, 109)] += (s - c_d[hook(3, t)]) * x109;
        gradient[hook(16, 110)] += (s - c_d[hook(3, t)]) * x110;
        gradient[hook(16, 111)] += (s - c_d[hook(3, t)]) * x111;
        gradient[hook(16, 112)] += (s - c_d[hook(3, t)]) * x112;
        gradient[hook(16, 113)] += (s - c_d[hook(3, t)]) * x113;
        gradient[hook(16, 114)] += (s - c_d[hook(3, t)]) * x114;
        gradient[hook(16, 115)] += (s - c_d[hook(3, t)]) * x115;
        gradient[hook(16, 116)] += (s - c_d[hook(3, t)]) * x116;
        gradient[hook(16, 117)] += (s - c_d[hook(3, t)]) * x117;
        gradient[hook(16, 118)] += (s - c_d[hook(3, t)]) * x118;
        gradient[hook(16, 119)] += (s - c_d[hook(3, t)]) * x119;
        gradient[hook(16, 120)] += (s - c_d[hook(3, t)]) * x120;
        gradient[hook(16, 121)] += (s - c_d[hook(3, t)]) * x121;
        gradient[hook(16, 122)] += (s - c_d[hook(3, t)]) * x122;
        gradient[hook(16, 123)] += (s - c_d[hook(3, t)]) * x123;
      }

      weights[hook(15, 0)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 0)];
      weights[hook(15, 1)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 1)];
      weights[hook(15, 2)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 2)];
      weights[hook(15, 3)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 3)];
      weights[hook(15, 4)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 4)];
      weights[hook(15, 5)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 5)];
      weights[hook(15, 6)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 6)];
      weights[hook(15, 7)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 7)];
      weights[hook(15, 8)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 8)];
      weights[hook(15, 9)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 9)];
      weights[hook(15, 10)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 10)];
      weights[hook(15, 11)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 11)];
      weights[hook(15, 12)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 12)];
      weights[hook(15, 13)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 13)];
      weights[hook(15, 14)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 14)];
      weights[hook(15, 15)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 15)];
      weights[hook(15, 16)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 16)];
      weights[hook(15, 17)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 17)];
      weights[hook(15, 18)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 18)];
      weights[hook(15, 19)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 19)];
      weights[hook(15, 20)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 20)];
      weights[hook(15, 21)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 21)];
      weights[hook(15, 22)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 22)];
      weights[hook(15, 23)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 23)];
      weights[hook(15, 24)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 24)];
      weights[hook(15, 25)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 25)];
      weights[hook(15, 26)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 26)];
      weights[hook(15, 27)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 27)];
      weights[hook(15, 28)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 28)];
      weights[hook(15, 29)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 29)];
      weights[hook(15, 30)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 30)];
      weights[hook(15, 31)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 31)];
      weights[hook(15, 32)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 32)];
      weights[hook(15, 33)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 33)];
      weights[hook(15, 34)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 34)];
      weights[hook(15, 35)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 35)];
      weights[hook(15, 36)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 36)];
      weights[hook(15, 37)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 37)];
      weights[hook(15, 38)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 38)];
      weights[hook(15, 39)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 39)];
      weights[hook(15, 40)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 40)];
      weights[hook(15, 41)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 41)];
      weights[hook(15, 42)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 42)];
      weights[hook(15, 43)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 43)];
      weights[hook(15, 44)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 44)];
      weights[hook(15, 45)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 45)];
      weights[hook(15, 46)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 46)];
      weights[hook(15, 47)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 47)];
      weights[hook(15, 48)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 48)];
      weights[hook(15, 49)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 49)];
      weights[hook(15, 50)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 50)];
      weights[hook(15, 51)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 51)];
      weights[hook(15, 52)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 52)];
      weights[hook(15, 53)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 53)];
      weights[hook(15, 54)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 54)];
      weights[hook(15, 55)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 55)];
      weights[hook(15, 56)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 56)];
      weights[hook(15, 57)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 57)];
      weights[hook(15, 58)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 58)];
      weights[hook(15, 59)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 59)];
      weights[hook(15, 60)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 60)];
      weights[hook(15, 61)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 61)];
      weights[hook(15, 62)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 62)];
      weights[hook(15, 63)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 63)];
      weights[hook(15, 64)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 64)];
      weights[hook(15, 65)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 65)];
      weights[hook(15, 66)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 66)];
      weights[hook(15, 67)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 67)];
      weights[hook(15, 68)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 68)];
      weights[hook(15, 69)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 69)];
      weights[hook(15, 70)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 70)];
      weights[hook(15, 71)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 71)];
      weights[hook(15, 72)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 72)];
      weights[hook(15, 73)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 73)];
      weights[hook(15, 74)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 74)];
      weights[hook(15, 75)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 75)];
      weights[hook(15, 76)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 76)];
      weights[hook(15, 77)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 77)];
      weights[hook(15, 78)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 78)];
      weights[hook(15, 79)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 79)];
      weights[hook(15, 80)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 80)];
      weights[hook(15, 81)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 81)];
      weights[hook(15, 82)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 82)];
      weights[hook(15, 83)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 83)];
      weights[hook(15, 84)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 84)];
      weights[hook(15, 85)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 85)];
      weights[hook(15, 86)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 86)];
      weights[hook(15, 87)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 87)];
      weights[hook(15, 88)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 88)];
      weights[hook(15, 89)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 89)];
      weights[hook(15, 90)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 90)];
      weights[hook(15, 91)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 91)];
      weights[hook(15, 92)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 92)];
      weights[hook(15, 93)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 93)];
      weights[hook(15, 94)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 94)];
      weights[hook(15, 95)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 95)];
      weights[hook(15, 96)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 96)];
      weights[hook(15, 97)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 97)];
      weights[hook(15, 98)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 98)];
      weights[hook(15, 99)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 99)];
      weights[hook(15, 100)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 100)];
      weights[hook(15, 101)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 101)];
      weights[hook(15, 102)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 102)];
      weights[hook(15, 103)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 103)];
      weights[hook(15, 104)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 104)];
      weights[hook(15, 105)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 105)];
      weights[hook(15, 106)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 106)];
      weights[hook(15, 107)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 107)];
      weights[hook(15, 108)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 108)];
      weights[hook(15, 109)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 109)];
      weights[hook(15, 110)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 110)];
      weights[hook(15, 111)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 111)];
      weights[hook(15, 112)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 112)];
      weights[hook(15, 113)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 113)];
      weights[hook(15, 114)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 114)];
      weights[hook(15, 115)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 115)];
      weights[hook(15, 116)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 116)];
      weights[hook(15, 117)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 117)];
      weights[hook(15, 118)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 118)];
      weights[hook(15, 119)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 119)];
      weights[hook(15, 120)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 120)];
      weights[hook(15, 121)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 121)];
      weights[hook(15, 122)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 122)];
      weights[hook(15, 123)] -= n / (float)NUMBER_OF_VOLUMES * gradient[hook(16, 123)];
    }

    float s;
    s = weights[hook(15, 0)] * 1.0f;

    float x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20;
    float x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40;
    float x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60;
    float x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80;
    float x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100;
    float x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123;

    x1 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z - 3, validation, DATA_W, DATA_H, DATA_D))];
    x2 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x3 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x4 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x5 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x6 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x7 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x8 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x9 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x10 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x11 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x12 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x13 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x14 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x15 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x16 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x17 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x18 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x19 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x20 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x21 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x22 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z - 2, validation, DATA_W, DATA_H, DATA_D))];
    x23 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x24 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x25 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x26 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x27 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x28 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x29 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x30 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x31 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x32 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x33 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x34 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x35 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x36 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x37 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x38 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x39 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x40 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x41 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x42 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x43 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x44 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x45 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x46 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x47 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 2, z - 1, validation, DATA_W, DATA_H, DATA_D))];
    x48 = Volumes[hook(1, Calculate4DIndex(x - 3, y + 0, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x49 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x50 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x51 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x52 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x53 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x54 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x55 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x56 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x57 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x58 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x59 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 3, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x60 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x61 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x62 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x63 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x64 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x65 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 3, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x66 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x67 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x68 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x69 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x70 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x71 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x72 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x73 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x74 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x75 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 2, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x76 = Volumes[hook(1, Calculate4DIndex(x + 3, y + 0, z + 0, validation, DATA_W, DATA_H, DATA_D))];
    x77 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x78 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x79 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x80 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x81 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x82 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x83 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x84 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x85 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x86 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x87 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x88 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x89 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x90 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x91 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x92 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x93 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x94 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x95 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x96 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x97 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x98 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x99 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x100 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x101 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 2, z + 1, validation, DATA_W, DATA_H, DATA_D))];
    x102 = Volumes[hook(1, Calculate4DIndex(x - 2, y - 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x103 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 0, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x104 = Volumes[hook(1, Calculate4DIndex(x - 2, y + 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x105 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 2, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x106 = Volumes[hook(1, Calculate4DIndex(x - 1, y - 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x107 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 0, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x108 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x109 = Volumes[hook(1, Calculate4DIndex(x - 1, y + 2, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x110 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 2, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x111 = Volumes[hook(1, Calculate4DIndex(x + 0, y - 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x112 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x113 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x114 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 2, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x115 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 2, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x116 = Volumes[hook(1, Calculate4DIndex(x + 1, y - 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x117 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 0, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x118 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x119 = Volumes[hook(1, Calculate4DIndex(x + 1, y + 2, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x120 = Volumes[hook(1, Calculate4DIndex(x + 2, y - 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x121 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 0, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x122 = Volumes[hook(1, Calculate4DIndex(x + 2, y + 1, z + 2, validation, DATA_W, DATA_H, DATA_D))];
    x123 = Volumes[hook(1, Calculate4DIndex(x + 0, y + 0, z + 3, validation, DATA_W, DATA_H, DATA_D))];
    s += weights[hook(15, 1)] * x1;
    s += weights[hook(15, 2)] * x2;
    s += weights[hook(15, 3)] * x3;
    s += weights[hook(15, 4)] * x4;
    s += weights[hook(15, 5)] * x5;
    s += weights[hook(15, 6)] * x6;
    s += weights[hook(15, 7)] * x7;
    s += weights[hook(15, 8)] * x8;
    s += weights[hook(15, 9)] * x9;
    s += weights[hook(15, 10)] * x10;
    s += weights[hook(15, 11)] * x11;
    s += weights[hook(15, 12)] * x12;
    s += weights[hook(15, 13)] * x13;
    s += weights[hook(15, 14)] * x14;
    s += weights[hook(15, 15)] * x15;
    s += weights[hook(15, 16)] * x16;
    s += weights[hook(15, 17)] * x17;
    s += weights[hook(15, 18)] * x18;
    s += weights[hook(15, 19)] * x19;
    s += weights[hook(15, 20)] * x20;
    s += weights[hook(15, 21)] * x21;
    s += weights[hook(15, 22)] * x22;
    s += weights[hook(15, 23)] * x23;
    s += weights[hook(15, 24)] * x24;
    s += weights[hook(15, 25)] * x25;
    s += weights[hook(15, 26)] * x26;
    s += weights[hook(15, 27)] * x27;
    s += weights[hook(15, 28)] * x28;
    s += weights[hook(15, 29)] * x29;
    s += weights[hook(15, 30)] * x30;
    s += weights[hook(15, 31)] * x31;
    s += weights[hook(15, 32)] * x32;
    s += weights[hook(15, 33)] * x33;
    s += weights[hook(15, 34)] * x34;
    s += weights[hook(15, 35)] * x35;
    s += weights[hook(15, 36)] * x36;
    s += weights[hook(15, 37)] * x37;
    s += weights[hook(15, 38)] * x38;
    s += weights[hook(15, 39)] * x39;
    s += weights[hook(15, 40)] * x40;
    s += weights[hook(15, 41)] * x41;
    s += weights[hook(15, 42)] * x42;
    s += weights[hook(15, 43)] * x43;
    s += weights[hook(15, 44)] * x44;
    s += weights[hook(15, 45)] * x45;
    s += weights[hook(15, 46)] * x46;
    s += weights[hook(15, 47)] * x47;
    s += weights[hook(15, 48)] * x48;
    s += weights[hook(15, 49)] * x49;
    s += weights[hook(15, 50)] * x50;
    s += weights[hook(15, 51)] * x51;
    s += weights[hook(15, 52)] * x52;
    s += weights[hook(15, 53)] * x53;
    s += weights[hook(15, 54)] * x54;
    s += weights[hook(15, 55)] * x55;
    s += weights[hook(15, 56)] * x56;
    s += weights[hook(15, 57)] * x57;
    s += weights[hook(15, 58)] * x58;
    s += weights[hook(15, 59)] * x59;
    s += weights[hook(15, 60)] * x60;
    s += weights[hook(15, 61)] * x61;
    s += weights[hook(15, 62)] * x62;
    s += weights[hook(15, 63)] * x63;
    s += weights[hook(15, 64)] * x64;
    s += weights[hook(15, 65)] * x65;
    s += weights[hook(15, 66)] * x66;
    s += weights[hook(15, 67)] * x67;
    s += weights[hook(15, 68)] * x68;
    s += weights[hook(15, 69)] * x69;
    s += weights[hook(15, 70)] * x70;
    s += weights[hook(15, 71)] * x71;
    s += weights[hook(15, 72)] * x72;
    s += weights[hook(15, 73)] * x73;
    s += weights[hook(15, 74)] * x74;
    s += weights[hook(15, 75)] * x75;
    s += weights[hook(15, 76)] * x76;
    s += weights[hook(15, 77)] * x77;
    s += weights[hook(15, 78)] * x78;
    s += weights[hook(15, 79)] * x79;
    s += weights[hook(15, 80)] * x80;
    s += weights[hook(15, 81)] * x81;
    s += weights[hook(15, 82)] * x82;
    s += weights[hook(15, 83)] * x83;
    s += weights[hook(15, 84)] * x84;
    s += weights[hook(15, 85)] * x85;
    s += weights[hook(15, 86)] * x86;
    s += weights[hook(15, 87)] * x87;
    s += weights[hook(15, 88)] * x88;
    s += weights[hook(15, 89)] * x89;
    s += weights[hook(15, 90)] * x90;
    s += weights[hook(15, 91)] * x91;
    s += weights[hook(15, 92)] * x92;
    s += weights[hook(15, 93)] * x93;
    s += weights[hook(15, 94)] * x94;
    s += weights[hook(15, 95)] * x95;
    s += weights[hook(15, 96)] * x96;
    s += weights[hook(15, 97)] * x97;
    s += weights[hook(15, 98)] * x98;
    s += weights[hook(15, 99)] * x99;
    s += weights[hook(15, 100)] * x100;
    s += weights[hook(15, 101)] * x101;
    s += weights[hook(15, 102)] * x102;
    s += weights[hook(15, 103)] * x103;
    s += weights[hook(15, 104)] * x104;
    s += weights[hook(15, 105)] * x105;
    s += weights[hook(15, 106)] * x106;
    s += weights[hook(15, 107)] * x107;
    s += weights[hook(15, 108)] * x108;
    s += weights[hook(15, 109)] * x109;
    s += weights[hook(15, 110)] * x110;
    s += weights[hook(15, 111)] * x111;
    s += weights[hook(15, 112)] * x112;
    s += weights[hook(15, 113)] * x113;
    s += weights[hook(15, 114)] * x114;
    s += weights[hook(15, 115)] * x115;
    s += weights[hook(15, 116)] * x116;
    s += weights[hook(15, 117)] * x117;
    s += weights[hook(15, 118)] * x118;
    s += weights[hook(15, 119)] * x119;
    s += weights[hook(15, 120)] * x120;
    s += weights[hook(15, 121)] * x121;
    s += weights[hook(15, 122)] * x122;
    s += weights[hook(15, 123)] * x123;

    float classification;
    if (s > 0.0f) {
      classification = 0.0f;
    } else {
      classification = 1.0f;
    }

    if (classification == c_Correct_Classes[hook(4, validation)]) {
      classification_performance++;
    }
  }

  Classifier_Performance[hook(0, Calculate3DIndex(x, y, z, DATA_W, DATA_H))] = Classifier_Performance[hook(0, Calculate3DIndex(x, y, z, DATA_W, DATA_H))] + (float)classification_performance / (float)NUMBER_OF_VOLUMES;
}
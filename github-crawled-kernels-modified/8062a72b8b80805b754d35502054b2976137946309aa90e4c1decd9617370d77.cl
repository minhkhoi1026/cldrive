//{"curFloatArray":6,"curIntArray":5,"doubleArray":2,"floatArray":1,"intArray":0,"interval":4,"iteration":3}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
kernel void IA4_15_FA4_5(global int4* intArray, global float4* floatArray, global double* doubleArray, long iteration, int interval) {
  int offset = get_global_id(0) * interval;
  global int4* curIntArray = intArray + offset;
  global float4* curFloatArray = floatArray + offset;

  int4 i0, i1, i2, i3, i4;
  float4 f0, f1, f2, f3, f4;
  int4 iAddend;
  float4 fAddend;
  i0 = curIntArray[hook(5, 0)];
  i1 = curIntArray[hook(5, 1)];
  i2 = curIntArray[hook(5, 2)];
  i3 = curIntArray[hook(5, 3)];
  i4 = curIntArray[hook(5, 4)];
  f0 = curFloatArray[hook(6, 0)];
  f1 = curFloatArray[hook(6, 1)];
  f2 = curFloatArray[hook(6, 2)];
  f3 = curFloatArray[hook(6, 3)];
  f4 = curFloatArray[hook(6, 4)];
  fAddend = f0;
  iAddend = i0;
  while (iteration-- > 1) {
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i0;
    f1 = f0 + fAddend;
    f2 = f1 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i1;
    f3 = f2 + fAddend;
    f4 = f3 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i2;
    f0 = f4 + fAddend;
    fAddend = fAddend * -0.9999F;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i3;
    f1 = f0 + fAddend;
    f2 = f1 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i4;
    f3 = f2 + fAddend;
    f4 = f3 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i0;
    f0 = f4 + fAddend;
    fAddend = fAddend * -0.9999F;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i1;
    f1 = f0 + fAddend;
    f2 = f1 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i2;
    f3 = f2 + fAddend;
    f4 = f3 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i3;
    f0 = f4 + fAddend;
    fAddend = fAddend * -0.9999F;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i4;
    f1 = f0 + fAddend;
    f2 = f1 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i0;
    f3 = f2 + fAddend;
    f4 = f3 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i1;
    f0 = f4 + fAddend;
    fAddend = fAddend * -0.9999F;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i2;
    f1 = f0 + fAddend;
    f2 = f1 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i3;
    f3 = f2 + fAddend;
    f4 = f3 + fAddend;
    i0 = i0 + iAddend;
    i1 = i1 + iAddend;
    i2 = i2 + iAddend;
    i3 = i3 + iAddend;
    i4 = i4 + iAddend;
    iAddend = iAddend + i4;
    f0 = f4 + fAddend;
    fAddend = fAddend * -0.9999F;
  }
  curIntArray[hook(5, 0)] = i0;
  curIntArray[hook(5, 1)] = i1;
  curIntArray[hook(5, 2)] = i2;
  curIntArray[hook(5, 3)] = i3;
  curIntArray[hook(5, 4)] = i4;
  curFloatArray[hook(6, 0)] = f0;
  curFloatArray[hook(6, 1)] = f1;
  curFloatArray[hook(6, 2)] = f2;
  curFloatArray[hook(6, 3)] = f3;
  curFloatArray[hook(6, 4)] = f4;
}
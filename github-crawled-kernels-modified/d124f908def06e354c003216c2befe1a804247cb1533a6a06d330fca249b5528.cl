//{"foundIndices":4,"foundIndicesNumBuf":3,"inputSums":2,"n":0,"sumChanges":1}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
kernel void subsetSumNaiveKernel(unsigned int n, const constant long* sumChanges, const global long* inputSums, global unsigned int* foundIndicesNumBuf, global unsigned int* foundIndices) {
  unsigned int gi = get_global_id(0);
  unsigned int li = get_local_id(0);

  if (gi >= n)
    return;

  const long inputSum = inputSums[hook(2, gi)];

  const long v0 = sumChanges[hook(1, 32 + 0)];
  const long v1 = sumChanges[hook(1, 32 + 1)] - v0;
  const long s1 = v0 + sumChanges[hook(1, 32 + 1)];
  const long v2 = sumChanges[hook(1, 32 + 2)] - s1;
  const long s2 = s1 + sumChanges[hook(1, 32 + 2)];
  const long v3 = sumChanges[hook(1, 32 + 3)] - s2;
  const long s3 = s2 + sumChanges[hook(1, 32 + 3)];
  const long v4 = sumChanges[hook(1, 32 + 4)] - s3;
  const long s4 = s3 + sumChanges[hook(1, 32 + 4)];
  const long v5 = sumChanges[hook(1, 32 + 5)] - s4;
  const long s5 = s4 + sumChanges[hook(1, 32 + 5)];
  const long v6 = sumChanges[hook(1, 32 + 6)] - s5;
  const long s6 = s5 + sumChanges[hook(1, 32 + 6)];
  const long v7 = sumChanges[hook(1, 32 + 7)] - s6;
  const long s7 = s6 + sumChanges[hook(1, 32 + 7)];
  const long v8 = sumChanges[hook(1, 32 + 8)] - s7;

  const unsigned int v0l = v0 & 0xffffffffU;
  const unsigned int v0h = v0 >> 32;
  const unsigned int v1l = v1 & 0xffffffffU;
  const unsigned int v1h = v1 >> 32;
  const unsigned int v2l = v2 & 0xffffffffU;
  const unsigned int v2h = v2 >> 32;
  const unsigned int v3l = v3 & 0xffffffffU;
  const unsigned int v3h = v3 >> 32;
  const unsigned int v4l = v4 & 0xffffffffU;
  const unsigned int v4h = v4 >> 32;
  const unsigned int v5l = v5 & 0xffffffffU;
  const unsigned int v5h = v5 >> 32;
  const unsigned int v6l = v6 & 0xffffffffU;
  const unsigned int v6h = v6 >> 32;
  const unsigned int v7l = v7 & 0xffffffffU;
  const unsigned int v7h = v7 >> 32;
  const unsigned int v8l = v8 & 0xffffffffU;
  const unsigned int v8h = v8 >> 32;

  unsigned int curFoundIdx = 0xffffffffU;

  for (unsigned int current = 0; current < 32; current++) {
    unsigned int find = 0;
    unsigned int suml = (inputSum + sumChanges[hook(1, current)]) & 0xffffffffU;
    unsigned int sumh = (inputSum + sumChanges[hook(1, current)]) >> 32;

    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v6l;
    sumh += v6h + (suml < v6l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v7l;
    sumh += v7h + (suml < v7l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v6l;
    sumh += v6h + (suml < v6l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v8l;
    sumh += v8h + (suml < v8l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v6l;
    sumh += v6h + (suml < v6l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v7l;
    sumh += v7h + (suml < v7l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v6l;
    sumh += v6h + (suml < v6l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v5l;
    sumh += v5h + (suml < v5l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v4l;
    sumh += v4h + (suml < v4l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v3l;
    sumh += v3h + (suml < v3l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v2l;
    sumh += v2h + (suml < v2l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v1l;
    sumh += v1h + (suml < v1l);
    ;
    find |= (suml == 0) & (sumh == 0);
    suml += v0l;
    sumh += v0h + (suml < v0l);
    ;
    find |= (suml == 0) & (sumh == 0);

    if (find) {
      if (curFoundIdx == 0xffffffffU) {
        curFoundIdx = atomic_inc(foundIndicesNumBuf);
        foundIndices[hook(4, curFoundIdx * 2 + 1)] = 0;
        foundIndices[hook(4, curFoundIdx * 2)] = gi;
      }
      foundIndices[hook(4, curFoundIdx * 2 + 1)] |= 1U << current;
    }
  }
}
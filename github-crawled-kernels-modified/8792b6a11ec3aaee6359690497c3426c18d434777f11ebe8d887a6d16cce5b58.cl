//{"M0":9,"M1":10,"M2":11,"M4":12,"M5":13,"M6":14,"M7":15,"M8":16,"M9":17,"MA":18,"MB":19,"MC":20,"h0":1,"h1":2,"h2":3,"h3":4,"h4":5,"h5":6,"h6":7,"h7":8,"output":0}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
__attribute__((reqd_work_group_size(128, 1, 1))) kernel void search(volatile global unsigned int* restrict output, const unsigned int h0, const unsigned int h1, const unsigned int h2, const unsigned int h3, const unsigned int h4, const unsigned int h5, const unsigned int h6, const unsigned int h7, const unsigned int M0, const unsigned int M1, const unsigned int M2, const unsigned int M4, const unsigned int M5, const unsigned int M6, const unsigned int M7, const unsigned int M8, const unsigned int M9, const unsigned int MA, const unsigned int MB, const unsigned int MC) {
  const unsigned int M3 = get_global_id(0);
  const unsigned int MD = 0x80000001UL;
  const unsigned int ME = 0x00000000UL;
  const unsigned int MF = 0x000005a0UL;

  const unsigned int cst0 = 0x243F6A88UL;
  const unsigned int cst1 = 0x85A308D3UL;
  const unsigned int cst2 = 0x13198A2EUL;
  const unsigned int cst3 = 0x03707344UL;
  const unsigned int cst4 = 0xA4093822UL;
  const unsigned int cst5 = 0x299F31D0UL;
  const unsigned int cst6 = 0x082EFA98UL;
  const unsigned int cst7 = 0xEC4E6C89UL;
  const unsigned int cst8 = 0x452821E6UL;
  const unsigned int cst9 = 0x38D01377UL;
  const unsigned int cstA = 0xBE5466CFUL;
  const unsigned int cstB = 0x34E90C6CUL;
  const unsigned int cstC = 0xC0AC29B7UL;
  const unsigned int cstD = 0xC97C50DDUL;
  const unsigned int cstE = 0x3F84D5B5UL;
  const unsigned int cstF = 0xB5470917UL;

  unsigned int V0, V1, V2, V3, V4, V5, V6, V7;
  unsigned int V8, V9, VA, VB, VC, VD, VE, VF;
  unsigned int pre7;

  V0 = h0;
  V1 = h1;
  V2 = h2;
  V3 = h3;
  V4 = h4;
  V5 = h5;
  V6 = h6;
  pre7 = V7 = h7;

  V8 = cst0;
  V9 = cst1;
  VA = cst2;
  VB = cst3;
  VC = 0xA4093D82UL;
  VD = 0x299F3470UL;
  VE = cst6;
  VF = cst7;

  V0 = V0 + (M0 ^ cst1);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M2 ^ cst3);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M4 ^ cst5);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (M6 ^ cst7);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M5 ^ cst4);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M7 ^ cst6);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M3 ^ cst2);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M1 ^ cst0);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M8 ^ cst9);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (MA ^ cstB);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (MC ^ cstD);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (ME ^ cstF);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (MD ^ cstC);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (MF ^ cstE);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (MB ^ cstA);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M9 ^ cst8);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (ME ^ cstA);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M4 ^ cst8);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M9 ^ cstF);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (MD ^ cst6);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (MF ^ cst9);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M6 ^ cstD);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M8 ^ cst4);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MA ^ cstE);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M1 ^ cstC);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M0 ^ cst2);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (MB ^ cst7);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M5 ^ cst3);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M7 ^ cstB);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M3 ^ cst5);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M2 ^ cst0);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (MC ^ cst1);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MB ^ cst8);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (MC ^ cst0);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M5 ^ cst2);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (MF ^ cstD);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M2 ^ cst5);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (MD ^ cstF);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M0 ^ cstC);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M8 ^ cstB);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (MA ^ cstE);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M3 ^ cst6);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M7 ^ cst1);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M9 ^ cst4);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M1 ^ cst7);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M4 ^ cst9);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M6 ^ cst3);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (ME ^ cstA);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M7 ^ cst9);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M3 ^ cst1);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (MD ^ cstC);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (MB ^ cstE);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (MC ^ cstD);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (ME ^ cstB);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M1 ^ cst3);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M9 ^ cst7);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M2 ^ cst6);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M5 ^ cstA);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M4 ^ cst0);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (MF ^ cst8);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M0 ^ cst4);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M8 ^ cstF);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (MA ^ cst5);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M6 ^ cst2);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M9 ^ cst0);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M5 ^ cst7);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M2 ^ cst4);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (MA ^ cstF);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M4 ^ cst2);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (MF ^ cstA);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M7 ^ cst5);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M0 ^ cst9);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (ME ^ cst1);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (MB ^ cstC);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M6 ^ cst8);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M3 ^ cstD);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M8 ^ cst6);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (MD ^ cst3);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (MC ^ cstB);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M1 ^ cstE);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M2 ^ cstC);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M6 ^ cstA);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M0 ^ cstB);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (M8 ^ cst3);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (MB ^ cst0);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M3 ^ cst8);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (MA ^ cst6);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MC ^ cst2);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M4 ^ cstD);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M7 ^ cst5);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (MF ^ cstE);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M1 ^ cst9);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (ME ^ cstF);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M9 ^ cst1);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M5 ^ cst7);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (MD ^ cst4);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MC ^ cst5);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M1 ^ cstF);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (ME ^ cstD);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (M4 ^ cstA);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (MD ^ cstE);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (MA ^ cst4);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (MF ^ cst1);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M5 ^ cstC);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M0 ^ cst7);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M6 ^ cst3);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M9 ^ cst2);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M8 ^ cstB);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M2 ^ cst9);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (MB ^ cst8);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M3 ^ cst6);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M7 ^ cst0);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MD ^ cstB);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M7 ^ cstE);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (MC ^ cst1);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (M3 ^ cst9);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M1 ^ cstC);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M9 ^ cst3);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (ME ^ cst7);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MB ^ cstD);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M5 ^ cst0);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (MF ^ cst4);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M8 ^ cst6);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M2 ^ cstA);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M6 ^ cst8);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (MA ^ cst2);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M4 ^ cstF);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M0 ^ cst5);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M6 ^ cstF);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (ME ^ cst9);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (MB ^ cst3);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (M0 ^ cst8);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M3 ^ cstB);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M8 ^ cst0);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M9 ^ cstE);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MF ^ cst6);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (MC ^ cst2);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (MD ^ cst7);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M1 ^ cst4);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (MA ^ cst5);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M4 ^ cst1);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M5 ^ cstA);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M7 ^ cstD);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M2 ^ cstC);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MA ^ cst2);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M8 ^ cst4);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M7 ^ cst6);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (M1 ^ cst5);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M6 ^ cst7);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M5 ^ cst1);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M4 ^ cst8);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M2 ^ cstA);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (MF ^ cstB);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M9 ^ cstE);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M3 ^ cstC);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (MD ^ cst0);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (MC ^ cst3);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M0 ^ cstD);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (ME ^ cst9);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (MB ^ cstF);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M0 ^ cst1);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M2 ^ cst3);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M4 ^ cst5);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (M6 ^ cst7);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M5 ^ cst4);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M7 ^ cst6);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M3 ^ cst2);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M1 ^ cst0);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M8 ^ cst9);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (MA ^ cstB);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (MC ^ cstD);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (ME ^ cstF);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (MD ^ cstC);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (MF ^ cstE);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (MB ^ cstA);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M9 ^ cst8);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (ME ^ cstA);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M4 ^ cst8);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M9 ^ cstF);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (MD ^ cst6);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (MF ^ cst9);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (M6 ^ cstD);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M8 ^ cst4);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MA ^ cstE);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M1 ^ cstC);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M0 ^ cst2);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (MB ^ cst7);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M5 ^ cst3);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M7 ^ cstB);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M3 ^ cst5);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M2 ^ cst0);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (MC ^ cst1);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (MB ^ cst8);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (MC ^ cst0);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (M5 ^ cst2);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (MF ^ cstD);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (M2 ^ cst5);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (MD ^ cstF);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M0 ^ cstC);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M8 ^ cstB);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (MA ^ cstE);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M3 ^ cst6);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M7 ^ cst1);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (M9 ^ cst4);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M1 ^ cst7);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M4 ^ cst9);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (M6 ^ cst3);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (ME ^ cstA);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M7 ^ cst9);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V1 = V1 + (M3 ^ cst1);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V2 = V2 + (MD ^ cstC);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V3 = V3 + (MB ^ cstE);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V2 = V2 + (MC ^ cstD);
  V2 = V2 + V6;
  VE = VE ^ V2;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  VA = VA + VE;
  V6 = V6 ^ VA;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V3 = V3 + (ME ^ cstB);
  V3 = V3 + V7;
  VF = VF ^ V3;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  VB = VB + VF;
  V7 = V7 ^ VB;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V1 = V1 + (M1 ^ cst3);
  V1 = V1 + V5;
  VD = VD ^ V1;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V9 = V9 + VD;
  V5 = V5 ^ V9;
  V5 = rotate(V5, (unsigned int)(32U - 7U));
  V0 = V0 + (M9 ^ cst7);
  V0 = V0 + V4;
  VC = VC ^ V0;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  V8 = V8 + VC;
  V4 = V4 ^ V8;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V0 = V0 + (M2 ^ cst6);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).zwxy), unsigned int);
  VA = VA + VF;
  V5 = V5 ^ VA;
  V5 = rotate(V5, (unsigned int)(32U - 12U));
  V1 = V1 + (M5 ^ cstA);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).zwxy), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 12U));
  V2 = V2 + (M4 ^ cst0);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).zwxy), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 12U));
  V3 = V3 + (MF ^ cst8);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).zwxy), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 12U));
  V2 = V2 + (M0 ^ cst4);
  V2 = V2 + V7;
  VD = VD ^ V2;
  VD = __builtin_astype((__builtin_astype((VD), uchar4).yzwx), unsigned int);
  V8 = V8 + VD;
  V7 = V7 ^ V8;
  V7 = rotate(V7, (unsigned int)(32U - 7U));
  V3 = V3 + (M8 ^ cstF);
  V3 = V3 + V4;
  VE = VE ^ V3;
  VE = __builtin_astype((__builtin_astype((VE), uchar4).yzwx), unsigned int);
  V9 = V9 + VE;
  V4 = V4 ^ V9;
  V4 = rotate(V4, (unsigned int)(32U - 7U));
  V1 = V1 + (MA ^ cst5);
  V1 = V1 + V6;
  VC = VC ^ V1;
  VC = __builtin_astype((__builtin_astype((VC), uchar4).yzwx), unsigned int);
  VB = VB + VC;
  V6 = V6 ^ VB;
  V6 = rotate(V6, (unsigned int)(32U - 7U));
  V0 = V0 + (M6 ^ cst2);
  V0 = V0 + V5;
  VF = VF ^ V0;
  VF = __builtin_astype((__builtin_astype((VF), uchar4).yzwx), unsigned int);
  if (pre7 ^ V7 ^ VF)
    return;

  output[hook(0, output[hook(0, 255)++)] = M3;
}
//{"(input)":4,"(output)":13,"IV":3,"SB1":12,"SB2":8,"SB3":11,"SB4":7,"SB5":10,"SB6":6,"SB7":9,"SB8":5,"SK":0,"counter":14,"input":1,"outCipher":15,"output":2}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
constant unsigned int SB1[64] = {0x01010400, 0x00000000, 0x00010000, 0x01010404, 0x01010004, 0x00010404, 0x00000004, 0x00010000, 0x00000400, 0x01010400, 0x01010404, 0x00000400, 0x01000404, 0x01010004, 0x01000000, 0x00000004, 0x00000404, 0x01000400, 0x01000400, 0x00010400, 0x00010400, 0x01010000, 0x01010000, 0x01000404, 0x00010004, 0x01000004, 0x01000004, 0x00010004, 0x00000000, 0x00000404, 0x00010404, 0x01000000, 0x00010000, 0x01010404, 0x00000004, 0x01010000, 0x01010400, 0x01000000, 0x01000000, 0x00000400, 0x01010004, 0x00010000, 0x00010400, 0x01000004, 0x00000400, 0x00000004, 0x01000404, 0x00010404, 0x01010404, 0x00010004, 0x01010000, 0x01000404, 0x01000004, 0x00000404, 0x00010404, 0x01010400, 0x00000404, 0x01000400, 0x01000400, 0x00000000, 0x00010004, 0x00010400, 0x00000000, 0x01010004};

constant unsigned int SB2[64] = {0x80108020, 0x80008000, 0x00008000, 0x00108020, 0x00100000, 0x00000020, 0x80100020, 0x80008020, 0x80000020, 0x80108020, 0x80108000, 0x80000000, 0x80008000, 0x00100000, 0x00000020, 0x80100020, 0x00108000, 0x00100020, 0x80008020, 0x00000000, 0x80000000, 0x00008000, 0x00108020, 0x80100000, 0x00100020, 0x80000020, 0x00000000, 0x00108000, 0x00008020, 0x80108000, 0x80100000, 0x00008020, 0x00000000, 0x00108020, 0x80100020, 0x00100000, 0x80008020, 0x80100000, 0x80108000, 0x00008000, 0x80100000, 0x80008000, 0x00000020, 0x80108020, 0x00108020, 0x00000020, 0x00008000, 0x80000000, 0x00008020, 0x80108000, 0x00100000, 0x80000020, 0x00100020, 0x80008020, 0x80000020, 0x00100020, 0x00108000, 0x00000000, 0x80008000, 0x00008020, 0x80000000, 0x80100020, 0x80108020, 0x00108000};

constant unsigned int SB3[64] = {0x00000208, 0x08020200, 0x00000000, 0x08020008, 0x08000200, 0x00000000, 0x00020208, 0x08000200, 0x00020008, 0x08000008, 0x08000008, 0x00020000, 0x08020208, 0x00020008, 0x08020000, 0x00000208, 0x08000000, 0x00000008, 0x08020200, 0x00000200, 0x00020200, 0x08020000, 0x08020008, 0x00020208, 0x08000208, 0x00020200, 0x00020000, 0x08000208, 0x00000008, 0x08020208, 0x00000200, 0x08000000, 0x08020200, 0x08000000, 0x00020008, 0x00000208, 0x00020000, 0x08020200, 0x08000200, 0x00000000, 0x00000200, 0x00020008, 0x08020208, 0x08000200, 0x08000008, 0x00000200, 0x00000000, 0x08020008, 0x08000208, 0x00020000, 0x08000000, 0x08020208, 0x00000008, 0x00020208, 0x00020200, 0x08000008, 0x08020000, 0x08000208, 0x00000208, 0x08020000, 0x00020208, 0x00000008, 0x08020008, 0x00020200};

constant unsigned int SB4[64] = {0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802080, 0x00800081, 0x00800001, 0x00002001, 0x00000000, 0x00802000, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00800080, 0x00800001, 0x00000001, 0x00002000, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002001, 0x00002080, 0x00800081, 0x00000001, 0x00002080, 0x00800080, 0x00002000, 0x00802080, 0x00802081, 0x00000081, 0x00800080, 0x00800001, 0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00000000, 0x00802000, 0x00002080, 0x00800080, 0x00800081, 0x00000001, 0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802081, 0x00000081, 0x00000001, 0x00002000, 0x00800001, 0x00002001, 0x00802080, 0x00800081, 0x00002001, 0x00002080, 0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002000, 0x00802080};

constant unsigned int SB5[64] = {0x00000100, 0x02080100, 0x02080000, 0x42000100, 0x00080000, 0x00000100, 0x40000000, 0x02080000, 0x40080100, 0x00080000, 0x02000100, 0x40080100, 0x42000100, 0x42080000, 0x00080100, 0x40000000, 0x02000000, 0x40080000, 0x40080000, 0x00000000, 0x40000100, 0x42080100, 0x42080100, 0x02000100, 0x42080000, 0x40000100, 0x00000000, 0x42000000, 0x02080100, 0x02000000, 0x42000000, 0x00080100, 0x00080000, 0x42000100, 0x00000100, 0x02000000, 0x40000000, 0x02080000, 0x42000100, 0x40080100, 0x02000100, 0x40000000, 0x42080000, 0x02080100, 0x40080100, 0x00000100, 0x02000000, 0x42080000, 0x42080100, 0x00080100, 0x42000000, 0x42080100, 0x02080000, 0x00000000, 0x40080000, 0x42000000, 0x00080100, 0x02000100, 0x40000100, 0x00080000, 0x00000000, 0x40080000, 0x02080100, 0x40000100};

constant unsigned int SB6[64] = {0x20000010, 0x20400000, 0x00004000, 0x20404010, 0x20400000, 0x00000010, 0x20404010, 0x00400000, 0x20004000, 0x00404010, 0x00400000, 0x20000010, 0x00400010, 0x20004000, 0x20000000, 0x00004010, 0x00000000, 0x00400010, 0x20004010, 0x00004000, 0x00404000, 0x20004010, 0x00000010, 0x20400010, 0x20400010, 0x00000000, 0x00404010, 0x20404000, 0x00004010, 0x00404000, 0x20404000, 0x20000000, 0x20004000, 0x00000010, 0x20400010, 0x00404000, 0x20404010, 0x00400000, 0x00004010, 0x20000010, 0x00400000, 0x20004000, 0x20000000, 0x00004010, 0x20000010, 0x20404010, 0x00404000, 0x20400000, 0x00404010, 0x20404000, 0x00000000, 0x20400010, 0x00000010, 0x00004000, 0x20400000, 0x00404010, 0x00004000, 0x00400010, 0x20004010, 0x00000000, 0x20404000, 0x20000000, 0x00400010, 0x20004010};

constant unsigned int SB7[64] = {0x00200000, 0x04200002, 0x04000802, 0x00000000, 0x00000800, 0x04000802, 0x00200802, 0x04200800, 0x04200802, 0x00200000, 0x00000000, 0x04000002, 0x00000002, 0x04000000, 0x04200002, 0x00000802, 0x04000800, 0x00200802, 0x00200002, 0x04000800, 0x04000002, 0x04200000, 0x04200800, 0x00200002, 0x04200000, 0x00000800, 0x00000802, 0x04200802, 0x00200800, 0x00000002, 0x04000000, 0x00200800, 0x04000000, 0x00200800, 0x00200000, 0x04000802, 0x04000802, 0x04200002, 0x04200002, 0x00000002, 0x00200002, 0x04000000, 0x04000800, 0x00200000, 0x04200800, 0x00000802, 0x00200802, 0x04200800, 0x00000802, 0x04000002, 0x04200802, 0x04200000, 0x00200800, 0x00000000, 0x00000002, 0x04200802, 0x00000000, 0x00200802, 0x04200000, 0x00000800, 0x04000002, 0x04000800, 0x00000800, 0x00200002};

constant unsigned int SB8[64] = {0x10001040, 0x00001000, 0x00040000, 0x10041040, 0x10000000, 0x10001040, 0x00000040, 0x10000000, 0x00040040, 0x10040000, 0x10041040, 0x00041000, 0x10041000, 0x00041040, 0x00001000, 0x00000040, 0x10040000, 0x10000040, 0x10001000, 0x00001040, 0x00041000, 0x00040040, 0x10040040, 0x10041000, 0x00001040, 0x00000000, 0x00000000, 0x10040040, 0x10000040, 0x10001000, 0x00041040, 0x00040000, 0x00041040, 0x00040000, 0x10041000, 0x00001000, 0x00000040, 0x10040040, 0x00001000, 0x00041040, 0x10001000, 0x00000040, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x00040000, 0x10001040, 0x00000000, 0x10041040, 0x00040040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0x00000000, 0x10041040, 0x00041000, 0x00041000, 0x00001040, 0x00001040, 0x00040040, 0x10000000, 0x10041000};
void des_crypt(global unsigned int* SK, private uchar input[8], private uchar output[8]) {
 private
  unsigned int X, Y, T;

  { (X) = ((unsigned int)(input)[hook(4, (0))] << 24) | ((unsigned int)(input)[hook(4, (0) + 1)] << 16) | ((unsigned int)(input)[hook(4, (0) + 2)] << 8) | ((unsigned int)(input)[hook(4, (0) + 3)]); };
  { (Y) = ((unsigned int)(input)[hook(4, (4))] << 24) | ((unsigned int)(input)[hook(4, (4) + 1)] << 16) | ((unsigned int)(input)[hook(4, (4) + 2)] << 8) | ((unsigned int)(input)[hook(4, (4) + 3)]); };

  {
    T = ((X >> 4) ^ Y) & 0x0F0F0F0F;
    Y ^= T;
    X ^= (T << 4);
    T = ((X >> 16) ^ Y) & 0x0000FFFF;
    Y ^= T;
    X ^= (T << 16);
    T = ((Y >> 2) ^ X) & 0x33333333;
    X ^= T;
    Y ^= (T << 2);
    T = ((Y >> 8) ^ X) & 0x00FF00FF;
    X ^= T;
    Y ^= (T << 8);
    Y = ((Y << 1) | (Y >> 31)) & 0xFFFFFFFF;
    T = (X ^ Y) & 0xAAAAAAAA;
    Y ^= T;
    X ^= T;
    X = ((X << 1) | (X >> 31)) & 0xFFFFFFFF;
  };

  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };

  {
    Y = ((Y << 31) | (Y >> 1)) & 0xFFFFFFFF;
    T = (Y ^ X) & 0xAAAAAAAA;
    Y ^= T;
    X ^= T;
    X = ((X << 31) | (X >> 1)) & 0xFFFFFFFF;
    T = ((X >> 8) ^ Y) & 0x00FF00FF;
    Y ^= T;
    X ^= (T << 8);
    T = ((X >> 2) ^ Y) & 0x33333333;
    Y ^= T;
    X ^= (T << 2);
    T = ((Y >> 16) ^ X) & 0x0000FFFF;
    X ^= T;
    Y ^= (T << 16);
    T = ((Y >> 4) ^ X) & 0x0F0F0F0F;
    X ^= T;
    Y ^= (T << 4);
  };

  {
    (output)[hook(13, (0))] = (uchar)((Y) >> 24);
    (output)[hook(13, (0) + 1)] = (uchar)((Y) >> 16);
    (output)[hook(13, (0) + 2)] = (uchar)((Y) >> 8);
    (output)[hook(13, (0) + 3)] = (uchar)((Y));
  };
  {
    (output)[hook(13, (4))] = (uchar)((X) >> 24);
    (output)[hook(13, (4) + 1)] = (uchar)((X) >> 16);
    (output)[hook(13, (4) + 2)] = (uchar)((X) >> 8);
    (output)[hook(13, (4) + 3)] = (uchar)((X));
  };
}

void des3_crypt(global unsigned int* SK, private uchar input[8], private uchar output[8]) {
 private
  unsigned int X, Y, T;

  { (X) = ((unsigned int)(input)[hook(4, (0))] << 24) | ((unsigned int)(input)[hook(4, (0) + 1)] << 16) | ((unsigned int)(input)[hook(4, (0) + 2)] << 8) | ((unsigned int)(input)[hook(4, (0) + 3)]); };
  { (Y) = ((unsigned int)(input)[hook(4, (4))] << 24) | ((unsigned int)(input)[hook(4, (4) + 1)] << 16) | ((unsigned int)(input)[hook(4, (4) + 2)] << 8) | ((unsigned int)(input)[hook(4, (4) + 3)]); };

  {
    T = ((X >> 4) ^ Y) & 0x0F0F0F0F;
    Y ^= T;
    X ^= (T << 4);
    T = ((X >> 16) ^ Y) & 0x0000FFFF;
    Y ^= T;
    X ^= (T << 16);
    T = ((Y >> 2) ^ X) & 0x33333333;
    X ^= T;
    Y ^= (T << 2);
    T = ((Y >> 8) ^ X) & 0x00FF00FF;
    X ^= T;
    Y ^= (T << 8);
    Y = ((Y << 1) | (Y >> 31)) & 0xFFFFFFFF;
    T = (X ^ Y) & 0xAAAAAAAA;
    Y ^= T;
    X ^= T;
    X = ((X << 1) | (X >> 31)) & 0xFFFFFFFF;
  };

  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };

  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };

  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ Y;
    X ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((Y << 28) | (Y >> 4));
    X ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };
  {
    T = *SK++ ^ X;
    Y ^= SB8[hook(5, (T) & 63)] ^ SB6[hook(6, (T >> 8) & 63)] ^ SB4[hook(7, (T >> 16) & 63)] ^ SB2[hook(8, (T >> 24) & 63)];
    T = *SK++ ^ ((X << 28) | (X >> 4));
    Y ^= SB7[hook(9, (T) & 63)] ^ SB5[hook(10, (T >> 8) & 63)] ^ SB3[hook(11, (T >> 16) & 63)] ^ SB1[hook(12, (T >> 24) & 63)];
  };

  {
    Y = ((Y << 31) | (Y >> 1)) & 0xFFFFFFFF;
    T = (Y ^ X) & 0xAAAAAAAA;
    Y ^= T;
    X ^= T;
    X = ((X << 31) | (X >> 1)) & 0xFFFFFFFF;
    T = ((X >> 8) ^ Y) & 0x00FF00FF;
    Y ^= T;
    X ^= (T << 8);
    T = ((X >> 2) ^ Y) & 0x33333333;
    Y ^= T;
    X ^= (T << 2);
    T = ((Y >> 16) ^ X) & 0x0000FFFF;
    X ^= T;
    Y ^= (T << 16);
    T = ((Y >> 4) ^ X) & 0x0F0F0F0F;
    X ^= T;
    Y ^= (T << 4);
  };

  {
    (output)[hook(13, (0))] = (uchar)((Y) >> 24);
    (output)[hook(13, (0) + 1)] = (uchar)((Y) >> 16);
    (output)[hook(13, (0) + 2)] = (uchar)((Y) >> 8);
    (output)[hook(13, (0) + 3)] = (uchar)((Y));
  };
  {
    (output)[hook(13, (4))] = (uchar)((X) >> 24);
    (output)[hook(13, (4) + 1)] = (uchar)((X) >> 16);
    (output)[hook(13, (4) + 2)] = (uchar)((X) >> 8);
    (output)[hook(13, (4) + 3)] = (uchar)((X));
  };
}

kernel void desCtrCipher(global unsigned int* SK, global uchar* input, global uchar* output, global uchar* IV) {
 private
  size_t gid;
  gid = get_global_id(0);

 private
  uchar counter[8];
  for (size_t i = 0; i < 8; i++) {
    counter[hook(14, i)] = IV[hook(3, i)];
  }

  size_t n = 8, c = gid;

  do {
    --n;
    c += counter[hook(14, n)];
    counter[hook(14, n)] = (uchar)c;
    c >>= 8;
  } while (n);

 private
  uchar outCipher[8];

  des_crypt(SK, counter, outCipher);

  for (size_t i = 0; i < 8; i++) {
    size_t offset = gid * 8 + i;
    output[hook(2, offset)] = outCipher[hook(15, i)] ^ input[hook(1, offset)];
  }
}
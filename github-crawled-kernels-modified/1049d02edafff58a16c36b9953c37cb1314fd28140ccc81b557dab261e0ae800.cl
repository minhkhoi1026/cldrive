//{"B1":8,"C1":9,"D1":10,"F1":11,"G1":12,"H":24,"H1":13,"K":23,"L":25,"PreVal4":18,"T1":19,"Vals":21,"W":22,"W16":16,"W17":17,"W2":15,"base":14,"output":20,"state0":0,"state1":1,"state2":2,"state3":3,"state4":4,"state5":5,"state6":6,"state7":7}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
typedef unsigned int u;
constant unsigned int K[64] = {0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2};

constant unsigned int H[8] = {0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0xfc08884d, 0xec9fcd13};

constant unsigned int L[1] = {0x98c7e2a2};
kernel void search(const unsigned int state0, const unsigned int state1, const unsigned int state2, const unsigned int state3, const unsigned int state4, const unsigned int state5, const unsigned int state6, const unsigned int state7, const unsigned int B1, const unsigned int C1, const unsigned int D1, const unsigned int F1, const unsigned int G1, const unsigned int H1, const unsigned int base, const unsigned int W2, const unsigned int W16, const unsigned int W17, const unsigned int PreVal4, const unsigned int T1, global unsigned int* output) {
  u W[124];
  u Vals[8];

  Vals[hook(21, 1)] = B1;
  Vals[hook(21, 2)] = C1;
  Vals[hook(21, 5)] = F1;
  Vals[hook(21, 6)] = G1;

  W[hook(22, 2)] = W2;

  Vals[hook(21, 4)] = (W[hook(22, 3)] = base + get_global_id(0)) + PreVal4;

  W[hook(22, 4)] = 0x80000000U;

  W[hook(22, 14)] = W[hook(22, 13)] = W[hook(22, 12)] = W[hook(22, 11)] = W[hook(22, 10)] = W[hook(22, 9)] = W[hook(22, 8)] = W[hook(22, 7)] = W[hook(22, 6)] = W[hook(22, 5)] = 0x00000000U;

  W[hook(22, 15)] = 0x00000280U;

  W[hook(22, 16)] = W16;
  W[hook(22, 17)] = W17;

  W[hook(22, 18)] = (rotate(W[hook(22, 18 - 2)], (u)15) ^ rotate(W[hook(22, 18 - 2)], (u)13) ^ (W[hook(22, 18 - 2)] >> 10U)) + W[hook(22, 18 - 16)] + (rotate(W[hook(22, 18 - 15)], (u)25) ^ rotate(W[hook(22, 18 - 15)], (u)14) ^ (W[hook(22, 18 - 15)] >> 3U));

  W[hook(22, 19)] = (u)0x11002000 + (rotate(W[hook(22, 19 - 2)], (u)15) ^ rotate(W[hook(22, 19 - 2)], (u)13) ^ (W[hook(22, 19 - 2)] >> 10U)) + W[hook(22, 19 - 16)];

  W[hook(22, 20)] = (rotate(W[hook(22, 20 - 2)], (u)15) ^ rotate(W[hook(22, 20 - 2)], (u)13) ^ (W[hook(22, 20 - 2)] >> 10U)) + W[hook(22, 20 - 16)];
  W[hook(22, 21)] = (rotate(W[hook(22, 21 - 2)], (u)15) ^ rotate(W[hook(22, 21 - 2)], (u)13) ^ (W[hook(22, 21 - 2)] >> 10U));
  W[hook(22, 22)] = (rotate(W[hook(22, 22 - 2)], (u)15) ^ rotate(W[hook(22, 22 - 2)], (u)13) ^ (W[hook(22, 22 - 2)] >> 10U)) + W[hook(22, 22 - 7)];
  W[hook(22, 23)] = (rotate(W[hook(22, 23 - 2)], (u)15) ^ rotate(W[hook(22, 23 - 2)], (u)13) ^ (W[hook(22, 23 - 2)] >> 10U)) + W[hook(22, 23 - 7)];
  W[hook(22, 24)] = (rotate(W[hook(22, 24 - 2)], (u)15) ^ rotate(W[hook(22, 24 - 2)], (u)13) ^ (W[hook(22, 24 - 2)] >> 10U)) + W[hook(22, 24 - 7)];
  W[hook(22, 25)] = (rotate(W[hook(22, 25 - 2)], (u)15) ^ rotate(W[hook(22, 25 - 2)], (u)13) ^ (W[hook(22, 25 - 2)] >> 10U)) + W[hook(22, 25 - 7)];
  W[hook(22, 26)] = (rotate(W[hook(22, 26 - 2)], (u)15) ^ rotate(W[hook(22, 26 - 2)], (u)13) ^ (W[hook(22, 26 - 2)] >> 10U)) + W[hook(22, 26 - 7)];
  W[hook(22, 27)] = (rotate(W[hook(22, 27 - 2)], (u)15) ^ rotate(W[hook(22, 27 - 2)], (u)13) ^ (W[hook(22, 27 - 2)] >> 10U)) + W[hook(22, 27 - 7)];
  W[hook(22, 28)] = (rotate(W[hook(22, 28 - 2)], (u)15) ^ rotate(W[hook(22, 28 - 2)], (u)13) ^ (W[hook(22, 28 - 2)] >> 10U)) + W[hook(22, 28 - 7)];
  W[hook(22, 29)] = (rotate(W[hook(22, 29 - 2)], (u)15) ^ rotate(W[hook(22, 29 - 2)], (u)13) ^ (W[hook(22, 29 - 2)] >> 10U)) + W[hook(22, 29 - 7)];
  W[hook(22, 30)] = (u)0xA00055 + (rotate(W[hook(22, 30 - 2)], (u)15) ^ rotate(W[hook(22, 30 - 2)], (u)13) ^ (W[hook(22, 30 - 2)] >> 10U)) + W[hook(22, 30 - 7)];

  Vals[hook(21, 0)] = state0 + Vals[hook(21, 4)];
  Vals[hook(21, 4)] += T1;

  Vals[hook(21, 7)] = (Vals[hook(21, 3)] = (u)0xb956c25b + D1 + (rotate(Vals[hook(21, (132 - 4) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 4) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 4) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 4) % 8)], Vals[hook(21, (133 - 4) % 8)], Vals[hook(21, (132 - 4) % 8)]))) + H1;
  Vals[hook(21, 3)] += (rotate(Vals[hook(21, (128 - 4) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 4) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 4) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 4) % 8)], Vals[hook(21, (130 - 4) % 8)], (Vals[hook(21, (128 - 4) % 8)] ^ Vals[hook(21, (129 - 4) % 8)])));

  Vals[hook(21, 2)] = K[hook(23, 5)] + C1 + (rotate(Vals[hook(21, (132 - 5) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 5) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 5) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 5) % 8)], Vals[hook(21, (133 - 5) % 8)], Vals[hook(21, (132 - 5) % 8)])) + (rotate(Vals[hook(21, (128 - 5) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 5) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 5) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 5) % 8)], Vals[hook(21, (130 - 5) % 8)], (Vals[hook(21, (128 - 5) % 8)] ^ Vals[hook(21, (129 - 5) % 8)])));
  Vals[hook(21, 6)] = K[hook(23, 5)] + C1 + G1 + (rotate(Vals[hook(21, (132 - 5) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 5) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 5) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 5) % 8)], Vals[hook(21, (133 - 5) % 8)], Vals[hook(21, (132 - 5) % 8)]));

  {
    Vals[hook(21, (131 - 6) % 8)] += (K[hook(23, 6 % 64)] + Vals[hook(21, (135 - 6) % 8)] + W[hook(22, 6)] + (rotate(Vals[hook(21, (132 - 6) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 6) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 6) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 6) % 8)], Vals[hook(21, (133 - 6) % 8)], Vals[hook(21, (132 - 6) % 8)])));
    Vals[hook(21, (135 - 6) % 8)] = (K[hook(23, 6 % 64)] + Vals[hook(21, (135 - 6) % 8)] + W[hook(22, 6)] + (rotate(Vals[hook(21, (132 - 6) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 6) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 6) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 6) % 8)], Vals[hook(21, (133 - 6) % 8)], Vals[hook(21, (132 - 6) % 8)]))) + (rotate(Vals[hook(21, (128 - 6) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 6) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 6) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 6) % 8)], Vals[hook(21, (130 - 6) % 8)], (Vals[hook(21, (128 - 6) % 8)] ^ Vals[hook(21, (129 - 6) % 8)])));
  };
  {
    Vals[hook(21, (131 - 7) % 8)] += (K[hook(23, 7 % 64)] + Vals[hook(21, (135 - 7) % 8)] + W[hook(22, 7)] + (rotate(Vals[hook(21, (132 - 7) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 7) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 7) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 7) % 8)], Vals[hook(21, (133 - 7) % 8)], Vals[hook(21, (132 - 7) % 8)])));
    Vals[hook(21, (135 - 7) % 8)] = (K[hook(23, 7 % 64)] + Vals[hook(21, (135 - 7) % 8)] + W[hook(22, 7)] + (rotate(Vals[hook(21, (132 - 7) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 7) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 7) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 7) % 8)], Vals[hook(21, (133 - 7) % 8)], Vals[hook(21, (132 - 7) % 8)]))) + (rotate(Vals[hook(21, (128 - 7) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 7) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 7) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 7) % 8)], Vals[hook(21, (130 - 7) % 8)], (Vals[hook(21, (128 - 7) % 8)] ^ Vals[hook(21, (129 - 7) % 8)])));
  };
  {
    Vals[hook(21, (131 - 8) % 8)] += (K[hook(23, 8 % 64)] + Vals[hook(21, (135 - 8) % 8)] + W[hook(22, 8)] + (rotate(Vals[hook(21, (132 - 8) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 8) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 8) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 8) % 8)], Vals[hook(21, (133 - 8) % 8)], Vals[hook(21, (132 - 8) % 8)])));
    Vals[hook(21, (135 - 8) % 8)] = (K[hook(23, 8 % 64)] + Vals[hook(21, (135 - 8) % 8)] + W[hook(22, 8)] + (rotate(Vals[hook(21, (132 - 8) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 8) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 8) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 8) % 8)], Vals[hook(21, (133 - 8) % 8)], Vals[hook(21, (132 - 8) % 8)]))) + (rotate(Vals[hook(21, (128 - 8) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 8) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 8) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 8) % 8)], Vals[hook(21, (130 - 8) % 8)], (Vals[hook(21, (128 - 8) % 8)] ^ Vals[hook(21, (129 - 8) % 8)])));
  };
  {
    Vals[hook(21, (131 - 9) % 8)] += (K[hook(23, 9 % 64)] + Vals[hook(21, (135 - 9) % 8)] + W[hook(22, 9)] + (rotate(Vals[hook(21, (132 - 9) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 9) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 9) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 9) % 8)], Vals[hook(21, (133 - 9) % 8)], Vals[hook(21, (132 - 9) % 8)])));
    Vals[hook(21, (135 - 9) % 8)] = (K[hook(23, 9 % 64)] + Vals[hook(21, (135 - 9) % 8)] + W[hook(22, 9)] + (rotate(Vals[hook(21, (132 - 9) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 9) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 9) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 9) % 8)], Vals[hook(21, (133 - 9) % 8)], Vals[hook(21, (132 - 9) % 8)]))) + (rotate(Vals[hook(21, (128 - 9) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 9) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 9) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 9) % 8)], Vals[hook(21, (130 - 9) % 8)], (Vals[hook(21, (128 - 9) % 8)] ^ Vals[hook(21, (129 - 9) % 8)])));
  };
  {
    Vals[hook(21, (131 - 10) % 8)] += (K[hook(23, 10 % 64)] + Vals[hook(21, (135 - 10) % 8)] + W[hook(22, 10)] + (rotate(Vals[hook(21, (132 - 10) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 10) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 10) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 10) % 8)], Vals[hook(21, (133 - 10) % 8)], Vals[hook(21, (132 - 10) % 8)])));
    Vals[hook(21, (135 - 10) % 8)] = (K[hook(23, 10 % 64)] + Vals[hook(21, (135 - 10) % 8)] + W[hook(22, 10)] + (rotate(Vals[hook(21, (132 - 10) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 10) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 10) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 10) % 8)], Vals[hook(21, (133 - 10) % 8)], Vals[hook(21, (132 - 10) % 8)]))) + (rotate(Vals[hook(21, (128 - 10) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 10) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 10) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 10) % 8)], Vals[hook(21, (130 - 10) % 8)], (Vals[hook(21, (128 - 10) % 8)] ^ Vals[hook(21, (129 - 10) % 8)])));
  };
  {
    Vals[hook(21, (131 - 11) % 8)] += (K[hook(23, 11 % 64)] + Vals[hook(21, (135 - 11) % 8)] + W[hook(22, 11)] + (rotate(Vals[hook(21, (132 - 11) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 11) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 11) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 11) % 8)], Vals[hook(21, (133 - 11) % 8)], Vals[hook(21, (132 - 11) % 8)])));
    Vals[hook(21, (135 - 11) % 8)] = (K[hook(23, 11 % 64)] + Vals[hook(21, (135 - 11) % 8)] + W[hook(22, 11)] + (rotate(Vals[hook(21, (132 - 11) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 11) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 11) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 11) % 8)], Vals[hook(21, (133 - 11) % 8)], Vals[hook(21, (132 - 11) % 8)]))) + (rotate(Vals[hook(21, (128 - 11) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 11) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 11) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 11) % 8)], Vals[hook(21, (130 - 11) % 8)], (Vals[hook(21, (128 - 11) % 8)] ^ Vals[hook(21, (129 - 11) % 8)])));
  };
  {
    Vals[hook(21, (131 - 12) % 8)] += (K[hook(23, 12 % 64)] + Vals[hook(21, (135 - 12) % 8)] + W[hook(22, 12)] + (rotate(Vals[hook(21, (132 - 12) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 12) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 12) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 12) % 8)], Vals[hook(21, (133 - 12) % 8)], Vals[hook(21, (132 - 12) % 8)])));
    Vals[hook(21, (135 - 12) % 8)] = (K[hook(23, 12 % 64)] + Vals[hook(21, (135 - 12) % 8)] + W[hook(22, 12)] + (rotate(Vals[hook(21, (132 - 12) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 12) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 12) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 12) % 8)], Vals[hook(21, (133 - 12) % 8)], Vals[hook(21, (132 - 12) % 8)]))) + (rotate(Vals[hook(21, (128 - 12) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 12) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 12) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 12) % 8)], Vals[hook(21, (130 - 12) % 8)], (Vals[hook(21, (128 - 12) % 8)] ^ Vals[hook(21, (129 - 12) % 8)])));
  };
  {
    Vals[hook(21, (131 - 13) % 8)] += (K[hook(23, 13 % 64)] + Vals[hook(21, (135 - 13) % 8)] + W[hook(22, 13)] + (rotate(Vals[hook(21, (132 - 13) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 13) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 13) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 13) % 8)], Vals[hook(21, (133 - 13) % 8)], Vals[hook(21, (132 - 13) % 8)])));
    Vals[hook(21, (135 - 13) % 8)] = (K[hook(23, 13 % 64)] + Vals[hook(21, (135 - 13) % 8)] + W[hook(22, 13)] + (rotate(Vals[hook(21, (132 - 13) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 13) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 13) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 13) % 8)], Vals[hook(21, (133 - 13) % 8)], Vals[hook(21, (132 - 13) % 8)]))) + (rotate(Vals[hook(21, (128 - 13) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 13) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 13) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 13) % 8)], Vals[hook(21, (130 - 13) % 8)], (Vals[hook(21, (128 - 13) % 8)] ^ Vals[hook(21, (129 - 13) % 8)])));
  };
  {
    Vals[hook(21, (131 - 14) % 8)] += (K[hook(23, 14 % 64)] + Vals[hook(21, (135 - 14) % 8)] + W[hook(22, 14)] + (rotate(Vals[hook(21, (132 - 14) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 14) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 14) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 14) % 8)], Vals[hook(21, (133 - 14) % 8)], Vals[hook(21, (132 - 14) % 8)])));
    Vals[hook(21, (135 - 14) % 8)] = (K[hook(23, 14 % 64)] + Vals[hook(21, (135 - 14) % 8)] + W[hook(22, 14)] + (rotate(Vals[hook(21, (132 - 14) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 14) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 14) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 14) % 8)], Vals[hook(21, (133 - 14) % 8)], Vals[hook(21, (132 - 14) % 8)]))) + (rotate(Vals[hook(21, (128 - 14) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 14) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 14) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 14) % 8)], Vals[hook(21, (130 - 14) % 8)], (Vals[hook(21, (128 - 14) % 8)] ^ Vals[hook(21, (129 - 14) % 8)])));
  };
  {
    Vals[hook(21, (131 - 15) % 8)] += (K[hook(23, 15 % 64)] + Vals[hook(21, (135 - 15) % 8)] + W[hook(22, 15)] + (rotate(Vals[hook(21, (132 - 15) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 15) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 15) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 15) % 8)], Vals[hook(21, (133 - 15) % 8)], Vals[hook(21, (132 - 15) % 8)])));
    Vals[hook(21, (135 - 15) % 8)] = (K[hook(23, 15 % 64)] + Vals[hook(21, (135 - 15) % 8)] + W[hook(22, 15)] + (rotate(Vals[hook(21, (132 - 15) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 15) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 15) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 15) % 8)], Vals[hook(21, (133 - 15) % 8)], Vals[hook(21, (132 - 15) % 8)]))) + (rotate(Vals[hook(21, (128 - 15) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 15) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 15) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 15) % 8)], Vals[hook(21, (130 - 15) % 8)], (Vals[hook(21, (128 - 15) % 8)] ^ Vals[hook(21, (129 - 15) % 8)])));
  };
  {
    Vals[hook(21, (131 - 16) % 8)] += (K[hook(23, 16 % 64)] + Vals[hook(21, (135 - 16) % 8)] + W[hook(22, 16)] + (rotate(Vals[hook(21, (132 - 16) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 16) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 16) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 16) % 8)], Vals[hook(21, (133 - 16) % 8)], Vals[hook(21, (132 - 16) % 8)])));
    Vals[hook(21, (135 - 16) % 8)] = (K[hook(23, 16 % 64)] + Vals[hook(21, (135 - 16) % 8)] + W[hook(22, 16)] + (rotate(Vals[hook(21, (132 - 16) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 16) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 16) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 16) % 8)], Vals[hook(21, (133 - 16) % 8)], Vals[hook(21, (132 - 16) % 8)]))) + (rotate(Vals[hook(21, (128 - 16) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 16) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 16) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 16) % 8)], Vals[hook(21, (130 - 16) % 8)], (Vals[hook(21, (128 - 16) % 8)] ^ Vals[hook(21, (129 - 16) % 8)])));
  };
  {
    Vals[hook(21, (131 - 17) % 8)] += (K[hook(23, 17 % 64)] + Vals[hook(21, (135 - 17) % 8)] + W[hook(22, 17)] + (rotate(Vals[hook(21, (132 - 17) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 17) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 17) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 17) % 8)], Vals[hook(21, (133 - 17) % 8)], Vals[hook(21, (132 - 17) % 8)])));
    Vals[hook(21, (135 - 17) % 8)] = (K[hook(23, 17 % 64)] + Vals[hook(21, (135 - 17) % 8)] + W[hook(22, 17)] + (rotate(Vals[hook(21, (132 - 17) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 17) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 17) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 17) % 8)], Vals[hook(21, (133 - 17) % 8)], Vals[hook(21, (132 - 17) % 8)]))) + (rotate(Vals[hook(21, (128 - 17) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 17) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 17) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 17) % 8)], Vals[hook(21, (130 - 17) % 8)], (Vals[hook(21, (128 - 17) % 8)] ^ Vals[hook(21, (129 - 17) % 8)])));
  };
  {
    Vals[hook(21, (131 - 18) % 8)] += (K[hook(23, 18 % 64)] + Vals[hook(21, (135 - 18) % 8)] + W[hook(22, 18)] + (rotate(Vals[hook(21, (132 - 18) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 18) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 18) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 18) % 8)], Vals[hook(21, (133 - 18) % 8)], Vals[hook(21, (132 - 18) % 8)])));
    Vals[hook(21, (135 - 18) % 8)] = (K[hook(23, 18 % 64)] + Vals[hook(21, (135 - 18) % 8)] + W[hook(22, 18)] + (rotate(Vals[hook(21, (132 - 18) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 18) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 18) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 18) % 8)], Vals[hook(21, (133 - 18) % 8)], Vals[hook(21, (132 - 18) % 8)]))) + (rotate(Vals[hook(21, (128 - 18) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 18) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 18) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 18) % 8)], Vals[hook(21, (130 - 18) % 8)], (Vals[hook(21, (128 - 18) % 8)] ^ Vals[hook(21, (129 - 18) % 8)])));
  };
  {
    Vals[hook(21, (131 - 19) % 8)] += (K[hook(23, 19 % 64)] + Vals[hook(21, (135 - 19) % 8)] + W[hook(22, 19)] + (rotate(Vals[hook(21, (132 - 19) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 19) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 19) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 19) % 8)], Vals[hook(21, (133 - 19) % 8)], Vals[hook(21, (132 - 19) % 8)])));
    Vals[hook(21, (135 - 19) % 8)] = (K[hook(23, 19 % 64)] + Vals[hook(21, (135 - 19) % 8)] + W[hook(22, 19)] + (rotate(Vals[hook(21, (132 - 19) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 19) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 19) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 19) % 8)], Vals[hook(21, (133 - 19) % 8)], Vals[hook(21, (132 - 19) % 8)]))) + (rotate(Vals[hook(21, (128 - 19) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 19) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 19) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 19) % 8)], Vals[hook(21, (130 - 19) % 8)], (Vals[hook(21, (128 - 19) % 8)] ^ Vals[hook(21, (129 - 19) % 8)])));
  };
  {
    Vals[hook(21, (131 - 20) % 8)] += (K[hook(23, 20 % 64)] + Vals[hook(21, (135 - 20) % 8)] + W[hook(22, 20)] + (rotate(Vals[hook(21, (132 - 20) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 20) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 20) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 20) % 8)], Vals[hook(21, (133 - 20) % 8)], Vals[hook(21, (132 - 20) % 8)])));
    Vals[hook(21, (135 - 20) % 8)] = (K[hook(23, 20 % 64)] + Vals[hook(21, (135 - 20) % 8)] + W[hook(22, 20)] + (rotate(Vals[hook(21, (132 - 20) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 20) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 20) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 20) % 8)], Vals[hook(21, (133 - 20) % 8)], Vals[hook(21, (132 - 20) % 8)]))) + (rotate(Vals[hook(21, (128 - 20) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 20) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 20) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 20) % 8)], Vals[hook(21, (130 - 20) % 8)], (Vals[hook(21, (128 - 20) % 8)] ^ Vals[hook(21, (129 - 20) % 8)])));
  };
  {
    Vals[hook(21, (131 - 21) % 8)] += (K[hook(23, 21 % 64)] + Vals[hook(21, (135 - 21) % 8)] + W[hook(22, 21)] + (rotate(Vals[hook(21, (132 - 21) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 21) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 21) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 21) % 8)], Vals[hook(21, (133 - 21) % 8)], Vals[hook(21, (132 - 21) % 8)])));
    Vals[hook(21, (135 - 21) % 8)] = (K[hook(23, 21 % 64)] + Vals[hook(21, (135 - 21) % 8)] + W[hook(22, 21)] + (rotate(Vals[hook(21, (132 - 21) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 21) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 21) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 21) % 8)], Vals[hook(21, (133 - 21) % 8)], Vals[hook(21, (132 - 21) % 8)]))) + (rotate(Vals[hook(21, (128 - 21) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 21) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 21) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 21) % 8)], Vals[hook(21, (130 - 21) % 8)], (Vals[hook(21, (128 - 21) % 8)] ^ Vals[hook(21, (129 - 21) % 8)])));
  };
  {
    Vals[hook(21, (131 - 22) % 8)] += (K[hook(23, 22 % 64)] + Vals[hook(21, (135 - 22) % 8)] + W[hook(22, 22)] + (rotate(Vals[hook(21, (132 - 22) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 22) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 22) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 22) % 8)], Vals[hook(21, (133 - 22) % 8)], Vals[hook(21, (132 - 22) % 8)])));
    Vals[hook(21, (135 - 22) % 8)] = (K[hook(23, 22 % 64)] + Vals[hook(21, (135 - 22) % 8)] + W[hook(22, 22)] + (rotate(Vals[hook(21, (132 - 22) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 22) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 22) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 22) % 8)], Vals[hook(21, (133 - 22) % 8)], Vals[hook(21, (132 - 22) % 8)]))) + (rotate(Vals[hook(21, (128 - 22) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 22) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 22) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 22) % 8)], Vals[hook(21, (130 - 22) % 8)], (Vals[hook(21, (128 - 22) % 8)] ^ Vals[hook(21, (129 - 22) % 8)])));
  };
  {
    Vals[hook(21, (131 - 23) % 8)] += (K[hook(23, 23 % 64)] + Vals[hook(21, (135 - 23) % 8)] + W[hook(22, 23)] + (rotate(Vals[hook(21, (132 - 23) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 23) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 23) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 23) % 8)], Vals[hook(21, (133 - 23) % 8)], Vals[hook(21, (132 - 23) % 8)])));
    Vals[hook(21, (135 - 23) % 8)] = (K[hook(23, 23 % 64)] + Vals[hook(21, (135 - 23) % 8)] + W[hook(22, 23)] + (rotate(Vals[hook(21, (132 - 23) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 23) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 23) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 23) % 8)], Vals[hook(21, (133 - 23) % 8)], Vals[hook(21, (132 - 23) % 8)]))) + (rotate(Vals[hook(21, (128 - 23) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 23) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 23) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 23) % 8)], Vals[hook(21, (130 - 23) % 8)], (Vals[hook(21, (128 - 23) % 8)] ^ Vals[hook(21, (129 - 23) % 8)])));
  };
  {
    Vals[hook(21, (131 - 24) % 8)] += (K[hook(23, 24 % 64)] + Vals[hook(21, (135 - 24) % 8)] + W[hook(22, 24)] + (rotate(Vals[hook(21, (132 - 24) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 24) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 24) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 24) % 8)], Vals[hook(21, (133 - 24) % 8)], Vals[hook(21, (132 - 24) % 8)])));
    Vals[hook(21, (135 - 24) % 8)] = (K[hook(23, 24 % 64)] + Vals[hook(21, (135 - 24) % 8)] + W[hook(22, 24)] + (rotate(Vals[hook(21, (132 - 24) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 24) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 24) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 24) % 8)], Vals[hook(21, (133 - 24) % 8)], Vals[hook(21, (132 - 24) % 8)]))) + (rotate(Vals[hook(21, (128 - 24) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 24) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 24) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 24) % 8)], Vals[hook(21, (130 - 24) % 8)], (Vals[hook(21, (128 - 24) % 8)] ^ Vals[hook(21, (129 - 24) % 8)])));
  };
  {
    Vals[hook(21, (131 - 25) % 8)] += (K[hook(23, 25 % 64)] + Vals[hook(21, (135 - 25) % 8)] + W[hook(22, 25)] + (rotate(Vals[hook(21, (132 - 25) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 25) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 25) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 25) % 8)], Vals[hook(21, (133 - 25) % 8)], Vals[hook(21, (132 - 25) % 8)])));
    Vals[hook(21, (135 - 25) % 8)] = (K[hook(23, 25 % 64)] + Vals[hook(21, (135 - 25) % 8)] + W[hook(22, 25)] + (rotate(Vals[hook(21, (132 - 25) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 25) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 25) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 25) % 8)], Vals[hook(21, (133 - 25) % 8)], Vals[hook(21, (132 - 25) % 8)]))) + (rotate(Vals[hook(21, (128 - 25) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 25) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 25) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 25) % 8)], Vals[hook(21, (130 - 25) % 8)], (Vals[hook(21, (128 - 25) % 8)] ^ Vals[hook(21, (129 - 25) % 8)])));
  };
  {
    Vals[hook(21, (131 - 26) % 8)] += (K[hook(23, 26 % 64)] + Vals[hook(21, (135 - 26) % 8)] + W[hook(22, 26)] + (rotate(Vals[hook(21, (132 - 26) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 26) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 26) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 26) % 8)], Vals[hook(21, (133 - 26) % 8)], Vals[hook(21, (132 - 26) % 8)])));
    Vals[hook(21, (135 - 26) % 8)] = (K[hook(23, 26 % 64)] + Vals[hook(21, (135 - 26) % 8)] + W[hook(22, 26)] + (rotate(Vals[hook(21, (132 - 26) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 26) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 26) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 26) % 8)], Vals[hook(21, (133 - 26) % 8)], Vals[hook(21, (132 - 26) % 8)]))) + (rotate(Vals[hook(21, (128 - 26) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 26) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 26) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 26) % 8)], Vals[hook(21, (130 - 26) % 8)], (Vals[hook(21, (128 - 26) % 8)] ^ Vals[hook(21, (129 - 26) % 8)])));
  };
  {
    Vals[hook(21, (131 - 27) % 8)] += (K[hook(23, 27 % 64)] + Vals[hook(21, (135 - 27) % 8)] + W[hook(22, 27)] + (rotate(Vals[hook(21, (132 - 27) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 27) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 27) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 27) % 8)], Vals[hook(21, (133 - 27) % 8)], Vals[hook(21, (132 - 27) % 8)])));
    Vals[hook(21, (135 - 27) % 8)] = (K[hook(23, 27 % 64)] + Vals[hook(21, (135 - 27) % 8)] + W[hook(22, 27)] + (rotate(Vals[hook(21, (132 - 27) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 27) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 27) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 27) % 8)], Vals[hook(21, (133 - 27) % 8)], Vals[hook(21, (132 - 27) % 8)]))) + (rotate(Vals[hook(21, (128 - 27) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 27) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 27) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 27) % 8)], Vals[hook(21, (130 - 27) % 8)], (Vals[hook(21, (128 - 27) % 8)] ^ Vals[hook(21, (129 - 27) % 8)])));
  };
  {
    Vals[hook(21, (131 - 28) % 8)] += (K[hook(23, 28 % 64)] + Vals[hook(21, (135 - 28) % 8)] + W[hook(22, 28)] + (rotate(Vals[hook(21, (132 - 28) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 28) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 28) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 28) % 8)], Vals[hook(21, (133 - 28) % 8)], Vals[hook(21, (132 - 28) % 8)])));
    Vals[hook(21, (135 - 28) % 8)] = (K[hook(23, 28 % 64)] + Vals[hook(21, (135 - 28) % 8)] + W[hook(22, 28)] + (rotate(Vals[hook(21, (132 - 28) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 28) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 28) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 28) % 8)], Vals[hook(21, (133 - 28) % 8)], Vals[hook(21, (132 - 28) % 8)]))) + (rotate(Vals[hook(21, (128 - 28) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 28) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 28) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 28) % 8)], Vals[hook(21, (130 - 28) % 8)], (Vals[hook(21, (128 - 28) % 8)] ^ Vals[hook(21, (129 - 28) % 8)])));
  };
  {
    Vals[hook(21, (131 - 29) % 8)] += (K[hook(23, 29 % 64)] + Vals[hook(21, (135 - 29) % 8)] + W[hook(22, 29)] + (rotate(Vals[hook(21, (132 - 29) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 29) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 29) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 29) % 8)], Vals[hook(21, (133 - 29) % 8)], Vals[hook(21, (132 - 29) % 8)])));
    Vals[hook(21, (135 - 29) % 8)] = (K[hook(23, 29 % 64)] + Vals[hook(21, (135 - 29) % 8)] + W[hook(22, 29)] + (rotate(Vals[hook(21, (132 - 29) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 29) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 29) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 29) % 8)], Vals[hook(21, (133 - 29) % 8)], Vals[hook(21, (132 - 29) % 8)]))) + (rotate(Vals[hook(21, (128 - 29) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 29) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 29) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 29) % 8)], Vals[hook(21, (130 - 29) % 8)], (Vals[hook(21, (128 - 29) % 8)] ^ Vals[hook(21, (129 - 29) % 8)])));
  };
  {
    Vals[hook(21, (131 - 30) % 8)] += (K[hook(23, 30 % 64)] + Vals[hook(21, (135 - 30) % 8)] + W[hook(22, 30)] + (rotate(Vals[hook(21, (132 - 30) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 30) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 30) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 30) % 8)], Vals[hook(21, (133 - 30) % 8)], Vals[hook(21, (132 - 30) % 8)])));
    Vals[hook(21, (135 - 30) % 8)] = (K[hook(23, 30 % 64)] + Vals[hook(21, (135 - 30) % 8)] + W[hook(22, 30)] + (rotate(Vals[hook(21, (132 - 30) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 30) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 30) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 30) % 8)], Vals[hook(21, (133 - 30) % 8)], Vals[hook(21, (132 - 30) % 8)]))) + (rotate(Vals[hook(21, (128 - 30) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 30) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 30) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 30) % 8)], Vals[hook(21, (130 - 30) % 8)], (Vals[hook(21, (128 - 30) % 8)] ^ Vals[hook(21, (129 - 30) % 8)])));
  };

  (W[hook(22, 31)] = W[hook(22, 31 - 16)] + W[hook(22, 31 - 7)] + (rotate(W[hook(22, 31 - 15)], (u)25) ^ rotate(W[hook(22, 31 - 15)], (u)14) ^ (W[hook(22, 31 - 15)] >> 3U)) + (rotate(W[hook(22, 31 - 2)], (u)15) ^ rotate(W[hook(22, 31 - 2)], (u)13) ^ (W[hook(22, 31 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 31) % 8)] += (K[hook(23, 31 % 64)] + Vals[hook(21, (135 - 31) % 8)] + W[hook(22, 31)] + (rotate(Vals[hook(21, (132 - 31) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 31) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 31) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 31) % 8)], Vals[hook(21, (133 - 31) % 8)], Vals[hook(21, (132 - 31) % 8)])));
    Vals[hook(21, (135 - 31) % 8)] = (K[hook(23, 31 % 64)] + Vals[hook(21, (135 - 31) % 8)] + W[hook(22, 31)] + (rotate(Vals[hook(21, (132 - 31) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 31) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 31) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 31) % 8)], Vals[hook(21, (133 - 31) % 8)], Vals[hook(21, (132 - 31) % 8)]))) + (rotate(Vals[hook(21, (128 - 31) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 31) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 31) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 31) % 8)], Vals[hook(21, (130 - 31) % 8)], (Vals[hook(21, (128 - 31) % 8)] ^ Vals[hook(21, (129 - 31) % 8)])));
  };
  (W[hook(22, 32)] = W[hook(22, 32 - 16)] + W[hook(22, 32 - 7)] + (rotate(W[hook(22, 32 - 15)], (u)25) ^ rotate(W[hook(22, 32 - 15)], (u)14) ^ (W[hook(22, 32 - 15)] >> 3U)) + (rotate(W[hook(22, 32 - 2)], (u)15) ^ rotate(W[hook(22, 32 - 2)], (u)13) ^ (W[hook(22, 32 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 32) % 8)] += (K[hook(23, 32 % 64)] + Vals[hook(21, (135 - 32) % 8)] + W[hook(22, 32)] + (rotate(Vals[hook(21, (132 - 32) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 32) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 32) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 32) % 8)], Vals[hook(21, (133 - 32) % 8)], Vals[hook(21, (132 - 32) % 8)])));
    Vals[hook(21, (135 - 32) % 8)] = (K[hook(23, 32 % 64)] + Vals[hook(21, (135 - 32) % 8)] + W[hook(22, 32)] + (rotate(Vals[hook(21, (132 - 32) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 32) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 32) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 32) % 8)], Vals[hook(21, (133 - 32) % 8)], Vals[hook(21, (132 - 32) % 8)]))) + (rotate(Vals[hook(21, (128 - 32) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 32) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 32) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 32) % 8)], Vals[hook(21, (130 - 32) % 8)], (Vals[hook(21, (128 - 32) % 8)] ^ Vals[hook(21, (129 - 32) % 8)])));
  };
  (W[hook(22, 33)] = W[hook(22, 33 - 16)] + W[hook(22, 33 - 7)] + (rotate(W[hook(22, 33 - 15)], (u)25) ^ rotate(W[hook(22, 33 - 15)], (u)14) ^ (W[hook(22, 33 - 15)] >> 3U)) + (rotate(W[hook(22, 33 - 2)], (u)15) ^ rotate(W[hook(22, 33 - 2)], (u)13) ^ (W[hook(22, 33 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 33) % 8)] += (K[hook(23, 33 % 64)] + Vals[hook(21, (135 - 33) % 8)] + W[hook(22, 33)] + (rotate(Vals[hook(21, (132 - 33) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 33) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 33) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 33) % 8)], Vals[hook(21, (133 - 33) % 8)], Vals[hook(21, (132 - 33) % 8)])));
    Vals[hook(21, (135 - 33) % 8)] = (K[hook(23, 33 % 64)] + Vals[hook(21, (135 - 33) % 8)] + W[hook(22, 33)] + (rotate(Vals[hook(21, (132 - 33) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 33) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 33) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 33) % 8)], Vals[hook(21, (133 - 33) % 8)], Vals[hook(21, (132 - 33) % 8)]))) + (rotate(Vals[hook(21, (128 - 33) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 33) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 33) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 33) % 8)], Vals[hook(21, (130 - 33) % 8)], (Vals[hook(21, (128 - 33) % 8)] ^ Vals[hook(21, (129 - 33) % 8)])));
  };
  (W[hook(22, 34)] = W[hook(22, 34 - 16)] + W[hook(22, 34 - 7)] + (rotate(W[hook(22, 34 - 15)], (u)25) ^ rotate(W[hook(22, 34 - 15)], (u)14) ^ (W[hook(22, 34 - 15)] >> 3U)) + (rotate(W[hook(22, 34 - 2)], (u)15) ^ rotate(W[hook(22, 34 - 2)], (u)13) ^ (W[hook(22, 34 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 34) % 8)] += (K[hook(23, 34 % 64)] + Vals[hook(21, (135 - 34) % 8)] + W[hook(22, 34)] + (rotate(Vals[hook(21, (132 - 34) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 34) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 34) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 34) % 8)], Vals[hook(21, (133 - 34) % 8)], Vals[hook(21, (132 - 34) % 8)])));
    Vals[hook(21, (135 - 34) % 8)] = (K[hook(23, 34 % 64)] + Vals[hook(21, (135 - 34) % 8)] + W[hook(22, 34)] + (rotate(Vals[hook(21, (132 - 34) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 34) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 34) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 34) % 8)], Vals[hook(21, (133 - 34) % 8)], Vals[hook(21, (132 - 34) % 8)]))) + (rotate(Vals[hook(21, (128 - 34) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 34) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 34) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 34) % 8)], Vals[hook(21, (130 - 34) % 8)], (Vals[hook(21, (128 - 34) % 8)] ^ Vals[hook(21, (129 - 34) % 8)])));
  };
  (W[hook(22, 35)] = W[hook(22, 35 - 16)] + W[hook(22, 35 - 7)] + (rotate(W[hook(22, 35 - 15)], (u)25) ^ rotate(W[hook(22, 35 - 15)], (u)14) ^ (W[hook(22, 35 - 15)] >> 3U)) + (rotate(W[hook(22, 35 - 2)], (u)15) ^ rotate(W[hook(22, 35 - 2)], (u)13) ^ (W[hook(22, 35 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 35) % 8)] += (K[hook(23, 35 % 64)] + Vals[hook(21, (135 - 35) % 8)] + W[hook(22, 35)] + (rotate(Vals[hook(21, (132 - 35) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 35) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 35) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 35) % 8)], Vals[hook(21, (133 - 35) % 8)], Vals[hook(21, (132 - 35) % 8)])));
    Vals[hook(21, (135 - 35) % 8)] = (K[hook(23, 35 % 64)] + Vals[hook(21, (135 - 35) % 8)] + W[hook(22, 35)] + (rotate(Vals[hook(21, (132 - 35) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 35) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 35) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 35) % 8)], Vals[hook(21, (133 - 35) % 8)], Vals[hook(21, (132 - 35) % 8)]))) + (rotate(Vals[hook(21, (128 - 35) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 35) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 35) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 35) % 8)], Vals[hook(21, (130 - 35) % 8)], (Vals[hook(21, (128 - 35) % 8)] ^ Vals[hook(21, (129 - 35) % 8)])));
  };
  (W[hook(22, 36)] = W[hook(22, 36 - 16)] + W[hook(22, 36 - 7)] + (rotate(W[hook(22, 36 - 15)], (u)25) ^ rotate(W[hook(22, 36 - 15)], (u)14) ^ (W[hook(22, 36 - 15)] >> 3U)) + (rotate(W[hook(22, 36 - 2)], (u)15) ^ rotate(W[hook(22, 36 - 2)], (u)13) ^ (W[hook(22, 36 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 36) % 8)] += (K[hook(23, 36 % 64)] + Vals[hook(21, (135 - 36) % 8)] + W[hook(22, 36)] + (rotate(Vals[hook(21, (132 - 36) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 36) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 36) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 36) % 8)], Vals[hook(21, (133 - 36) % 8)], Vals[hook(21, (132 - 36) % 8)])));
    Vals[hook(21, (135 - 36) % 8)] = (K[hook(23, 36 % 64)] + Vals[hook(21, (135 - 36) % 8)] + W[hook(22, 36)] + (rotate(Vals[hook(21, (132 - 36) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 36) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 36) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 36) % 8)], Vals[hook(21, (133 - 36) % 8)], Vals[hook(21, (132 - 36) % 8)]))) + (rotate(Vals[hook(21, (128 - 36) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 36) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 36) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 36) % 8)], Vals[hook(21, (130 - 36) % 8)], (Vals[hook(21, (128 - 36) % 8)] ^ Vals[hook(21, (129 - 36) % 8)])));
  };
  (W[hook(22, 37)] = W[hook(22, 37 - 16)] + W[hook(22, 37 - 7)] + (rotate(W[hook(22, 37 - 15)], (u)25) ^ rotate(W[hook(22, 37 - 15)], (u)14) ^ (W[hook(22, 37 - 15)] >> 3U)) + (rotate(W[hook(22, 37 - 2)], (u)15) ^ rotate(W[hook(22, 37 - 2)], (u)13) ^ (W[hook(22, 37 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 37) % 8)] += (K[hook(23, 37 % 64)] + Vals[hook(21, (135 - 37) % 8)] + W[hook(22, 37)] + (rotate(Vals[hook(21, (132 - 37) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 37) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 37) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 37) % 8)], Vals[hook(21, (133 - 37) % 8)], Vals[hook(21, (132 - 37) % 8)])));
    Vals[hook(21, (135 - 37) % 8)] = (K[hook(23, 37 % 64)] + Vals[hook(21, (135 - 37) % 8)] + W[hook(22, 37)] + (rotate(Vals[hook(21, (132 - 37) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 37) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 37) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 37) % 8)], Vals[hook(21, (133 - 37) % 8)], Vals[hook(21, (132 - 37) % 8)]))) + (rotate(Vals[hook(21, (128 - 37) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 37) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 37) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 37) % 8)], Vals[hook(21, (130 - 37) % 8)], (Vals[hook(21, (128 - 37) % 8)] ^ Vals[hook(21, (129 - 37) % 8)])));
  };
  (W[hook(22, 38)] = W[hook(22, 38 - 16)] + W[hook(22, 38 - 7)] + (rotate(W[hook(22, 38 - 15)], (u)25) ^ rotate(W[hook(22, 38 - 15)], (u)14) ^ (W[hook(22, 38 - 15)] >> 3U)) + (rotate(W[hook(22, 38 - 2)], (u)15) ^ rotate(W[hook(22, 38 - 2)], (u)13) ^ (W[hook(22, 38 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 38) % 8)] += (K[hook(23, 38 % 64)] + Vals[hook(21, (135 - 38) % 8)] + W[hook(22, 38)] + (rotate(Vals[hook(21, (132 - 38) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 38) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 38) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 38) % 8)], Vals[hook(21, (133 - 38) % 8)], Vals[hook(21, (132 - 38) % 8)])));
    Vals[hook(21, (135 - 38) % 8)] = (K[hook(23, 38 % 64)] + Vals[hook(21, (135 - 38) % 8)] + W[hook(22, 38)] + (rotate(Vals[hook(21, (132 - 38) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 38) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 38) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 38) % 8)], Vals[hook(21, (133 - 38) % 8)], Vals[hook(21, (132 - 38) % 8)]))) + (rotate(Vals[hook(21, (128 - 38) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 38) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 38) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 38) % 8)], Vals[hook(21, (130 - 38) % 8)], (Vals[hook(21, (128 - 38) % 8)] ^ Vals[hook(21, (129 - 38) % 8)])));
  };
  (W[hook(22, 39)] = W[hook(22, 39 - 16)] + W[hook(22, 39 - 7)] + (rotate(W[hook(22, 39 - 15)], (u)25) ^ rotate(W[hook(22, 39 - 15)], (u)14) ^ (W[hook(22, 39 - 15)] >> 3U)) + (rotate(W[hook(22, 39 - 2)], (u)15) ^ rotate(W[hook(22, 39 - 2)], (u)13) ^ (W[hook(22, 39 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 39) % 8)] += (K[hook(23, 39 % 64)] + Vals[hook(21, (135 - 39) % 8)] + W[hook(22, 39)] + (rotate(Vals[hook(21, (132 - 39) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 39) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 39) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 39) % 8)], Vals[hook(21, (133 - 39) % 8)], Vals[hook(21, (132 - 39) % 8)])));
    Vals[hook(21, (135 - 39) % 8)] = (K[hook(23, 39 % 64)] + Vals[hook(21, (135 - 39) % 8)] + W[hook(22, 39)] + (rotate(Vals[hook(21, (132 - 39) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 39) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 39) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 39) % 8)], Vals[hook(21, (133 - 39) % 8)], Vals[hook(21, (132 - 39) % 8)]))) + (rotate(Vals[hook(21, (128 - 39) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 39) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 39) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 39) % 8)], Vals[hook(21, (130 - 39) % 8)], (Vals[hook(21, (128 - 39) % 8)] ^ Vals[hook(21, (129 - 39) % 8)])));
  };
  (W[hook(22, 40)] = W[hook(22, 40 - 16)] + W[hook(22, 40 - 7)] + (rotate(W[hook(22, 40 - 15)], (u)25) ^ rotate(W[hook(22, 40 - 15)], (u)14) ^ (W[hook(22, 40 - 15)] >> 3U)) + (rotate(W[hook(22, 40 - 2)], (u)15) ^ rotate(W[hook(22, 40 - 2)], (u)13) ^ (W[hook(22, 40 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 40) % 8)] += (K[hook(23, 40 % 64)] + Vals[hook(21, (135 - 40) % 8)] + W[hook(22, 40)] + (rotate(Vals[hook(21, (132 - 40) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 40) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 40) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 40) % 8)], Vals[hook(21, (133 - 40) % 8)], Vals[hook(21, (132 - 40) % 8)])));
    Vals[hook(21, (135 - 40) % 8)] = (K[hook(23, 40 % 64)] + Vals[hook(21, (135 - 40) % 8)] + W[hook(22, 40)] + (rotate(Vals[hook(21, (132 - 40) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 40) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 40) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 40) % 8)], Vals[hook(21, (133 - 40) % 8)], Vals[hook(21, (132 - 40) % 8)]))) + (rotate(Vals[hook(21, (128 - 40) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 40) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 40) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 40) % 8)], Vals[hook(21, (130 - 40) % 8)], (Vals[hook(21, (128 - 40) % 8)] ^ Vals[hook(21, (129 - 40) % 8)])));
  };
  (W[hook(22, 41)] = W[hook(22, 41 - 16)] + W[hook(22, 41 - 7)] + (rotate(W[hook(22, 41 - 15)], (u)25) ^ rotate(W[hook(22, 41 - 15)], (u)14) ^ (W[hook(22, 41 - 15)] >> 3U)) + (rotate(W[hook(22, 41 - 2)], (u)15) ^ rotate(W[hook(22, 41 - 2)], (u)13) ^ (W[hook(22, 41 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 41) % 8)] += (K[hook(23, 41 % 64)] + Vals[hook(21, (135 - 41) % 8)] + W[hook(22, 41)] + (rotate(Vals[hook(21, (132 - 41) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 41) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 41) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 41) % 8)], Vals[hook(21, (133 - 41) % 8)], Vals[hook(21, (132 - 41) % 8)])));
    Vals[hook(21, (135 - 41) % 8)] = (K[hook(23, 41 % 64)] + Vals[hook(21, (135 - 41) % 8)] + W[hook(22, 41)] + (rotate(Vals[hook(21, (132 - 41) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 41) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 41) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 41) % 8)], Vals[hook(21, (133 - 41) % 8)], Vals[hook(21, (132 - 41) % 8)]))) + (rotate(Vals[hook(21, (128 - 41) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 41) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 41) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 41) % 8)], Vals[hook(21, (130 - 41) % 8)], (Vals[hook(21, (128 - 41) % 8)] ^ Vals[hook(21, (129 - 41) % 8)])));
  };
  (W[hook(22, 42)] = W[hook(22, 42 - 16)] + W[hook(22, 42 - 7)] + (rotate(W[hook(22, 42 - 15)], (u)25) ^ rotate(W[hook(22, 42 - 15)], (u)14) ^ (W[hook(22, 42 - 15)] >> 3U)) + (rotate(W[hook(22, 42 - 2)], (u)15) ^ rotate(W[hook(22, 42 - 2)], (u)13) ^ (W[hook(22, 42 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 42) % 8)] += (K[hook(23, 42 % 64)] + Vals[hook(21, (135 - 42) % 8)] + W[hook(22, 42)] + (rotate(Vals[hook(21, (132 - 42) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 42) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 42) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 42) % 8)], Vals[hook(21, (133 - 42) % 8)], Vals[hook(21, (132 - 42) % 8)])));
    Vals[hook(21, (135 - 42) % 8)] = (K[hook(23, 42 % 64)] + Vals[hook(21, (135 - 42) % 8)] + W[hook(22, 42)] + (rotate(Vals[hook(21, (132 - 42) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 42) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 42) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 42) % 8)], Vals[hook(21, (133 - 42) % 8)], Vals[hook(21, (132 - 42) % 8)]))) + (rotate(Vals[hook(21, (128 - 42) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 42) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 42) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 42) % 8)], Vals[hook(21, (130 - 42) % 8)], (Vals[hook(21, (128 - 42) % 8)] ^ Vals[hook(21, (129 - 42) % 8)])));
  };
  (W[hook(22, 43)] = W[hook(22, 43 - 16)] + W[hook(22, 43 - 7)] + (rotate(W[hook(22, 43 - 15)], (u)25) ^ rotate(W[hook(22, 43 - 15)], (u)14) ^ (W[hook(22, 43 - 15)] >> 3U)) + (rotate(W[hook(22, 43 - 2)], (u)15) ^ rotate(W[hook(22, 43 - 2)], (u)13) ^ (W[hook(22, 43 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 43) % 8)] += (K[hook(23, 43 % 64)] + Vals[hook(21, (135 - 43) % 8)] + W[hook(22, 43)] + (rotate(Vals[hook(21, (132 - 43) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 43) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 43) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 43) % 8)], Vals[hook(21, (133 - 43) % 8)], Vals[hook(21, (132 - 43) % 8)])));
    Vals[hook(21, (135 - 43) % 8)] = (K[hook(23, 43 % 64)] + Vals[hook(21, (135 - 43) % 8)] + W[hook(22, 43)] + (rotate(Vals[hook(21, (132 - 43) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 43) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 43) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 43) % 8)], Vals[hook(21, (133 - 43) % 8)], Vals[hook(21, (132 - 43) % 8)]))) + (rotate(Vals[hook(21, (128 - 43) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 43) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 43) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 43) % 8)], Vals[hook(21, (130 - 43) % 8)], (Vals[hook(21, (128 - 43) % 8)] ^ Vals[hook(21, (129 - 43) % 8)])));
  };
  (W[hook(22, 44)] = W[hook(22, 44 - 16)] + W[hook(22, 44 - 7)] + (rotate(W[hook(22, 44 - 15)], (u)25) ^ rotate(W[hook(22, 44 - 15)], (u)14) ^ (W[hook(22, 44 - 15)] >> 3U)) + (rotate(W[hook(22, 44 - 2)], (u)15) ^ rotate(W[hook(22, 44 - 2)], (u)13) ^ (W[hook(22, 44 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 44) % 8)] += (K[hook(23, 44 % 64)] + Vals[hook(21, (135 - 44) % 8)] + W[hook(22, 44)] + (rotate(Vals[hook(21, (132 - 44) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 44) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 44) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 44) % 8)], Vals[hook(21, (133 - 44) % 8)], Vals[hook(21, (132 - 44) % 8)])));
    Vals[hook(21, (135 - 44) % 8)] = (K[hook(23, 44 % 64)] + Vals[hook(21, (135 - 44) % 8)] + W[hook(22, 44)] + (rotate(Vals[hook(21, (132 - 44) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 44) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 44) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 44) % 8)], Vals[hook(21, (133 - 44) % 8)], Vals[hook(21, (132 - 44) % 8)]))) + (rotate(Vals[hook(21, (128 - 44) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 44) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 44) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 44) % 8)], Vals[hook(21, (130 - 44) % 8)], (Vals[hook(21, (128 - 44) % 8)] ^ Vals[hook(21, (129 - 44) % 8)])));
  };
  (W[hook(22, 45)] = W[hook(22, 45 - 16)] + W[hook(22, 45 - 7)] + (rotate(W[hook(22, 45 - 15)], (u)25) ^ rotate(W[hook(22, 45 - 15)], (u)14) ^ (W[hook(22, 45 - 15)] >> 3U)) + (rotate(W[hook(22, 45 - 2)], (u)15) ^ rotate(W[hook(22, 45 - 2)], (u)13) ^ (W[hook(22, 45 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 45) % 8)] += (K[hook(23, 45 % 64)] + Vals[hook(21, (135 - 45) % 8)] + W[hook(22, 45)] + (rotate(Vals[hook(21, (132 - 45) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 45) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 45) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 45) % 8)], Vals[hook(21, (133 - 45) % 8)], Vals[hook(21, (132 - 45) % 8)])));
    Vals[hook(21, (135 - 45) % 8)] = (K[hook(23, 45 % 64)] + Vals[hook(21, (135 - 45) % 8)] + W[hook(22, 45)] + (rotate(Vals[hook(21, (132 - 45) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 45) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 45) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 45) % 8)], Vals[hook(21, (133 - 45) % 8)], Vals[hook(21, (132 - 45) % 8)]))) + (rotate(Vals[hook(21, (128 - 45) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 45) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 45) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 45) % 8)], Vals[hook(21, (130 - 45) % 8)], (Vals[hook(21, (128 - 45) % 8)] ^ Vals[hook(21, (129 - 45) % 8)])));
  };
  (W[hook(22, 46)] = W[hook(22, 46 - 16)] + W[hook(22, 46 - 7)] + (rotate(W[hook(22, 46 - 15)], (u)25) ^ rotate(W[hook(22, 46 - 15)], (u)14) ^ (W[hook(22, 46 - 15)] >> 3U)) + (rotate(W[hook(22, 46 - 2)], (u)15) ^ rotate(W[hook(22, 46 - 2)], (u)13) ^ (W[hook(22, 46 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 46) % 8)] += (K[hook(23, 46 % 64)] + Vals[hook(21, (135 - 46) % 8)] + W[hook(22, 46)] + (rotate(Vals[hook(21, (132 - 46) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 46) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 46) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 46) % 8)], Vals[hook(21, (133 - 46) % 8)], Vals[hook(21, (132 - 46) % 8)])));
    Vals[hook(21, (135 - 46) % 8)] = (K[hook(23, 46 % 64)] + Vals[hook(21, (135 - 46) % 8)] + W[hook(22, 46)] + (rotate(Vals[hook(21, (132 - 46) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 46) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 46) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 46) % 8)], Vals[hook(21, (133 - 46) % 8)], Vals[hook(21, (132 - 46) % 8)]))) + (rotate(Vals[hook(21, (128 - 46) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 46) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 46) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 46) % 8)], Vals[hook(21, (130 - 46) % 8)], (Vals[hook(21, (128 - 46) % 8)] ^ Vals[hook(21, (129 - 46) % 8)])));
  };
  (W[hook(22, 47)] = W[hook(22, 47 - 16)] + W[hook(22, 47 - 7)] + (rotate(W[hook(22, 47 - 15)], (u)25) ^ rotate(W[hook(22, 47 - 15)], (u)14) ^ (W[hook(22, 47 - 15)] >> 3U)) + (rotate(W[hook(22, 47 - 2)], (u)15) ^ rotate(W[hook(22, 47 - 2)], (u)13) ^ (W[hook(22, 47 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 47) % 8)] += (K[hook(23, 47 % 64)] + Vals[hook(21, (135 - 47) % 8)] + W[hook(22, 47)] + (rotate(Vals[hook(21, (132 - 47) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 47) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 47) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 47) % 8)], Vals[hook(21, (133 - 47) % 8)], Vals[hook(21, (132 - 47) % 8)])));
    Vals[hook(21, (135 - 47) % 8)] = (K[hook(23, 47 % 64)] + Vals[hook(21, (135 - 47) % 8)] + W[hook(22, 47)] + (rotate(Vals[hook(21, (132 - 47) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 47) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 47) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 47) % 8)], Vals[hook(21, (133 - 47) % 8)], Vals[hook(21, (132 - 47) % 8)]))) + (rotate(Vals[hook(21, (128 - 47) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 47) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 47) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 47) % 8)], Vals[hook(21, (130 - 47) % 8)], (Vals[hook(21, (128 - 47) % 8)] ^ Vals[hook(21, (129 - 47) % 8)])));
  };
  (W[hook(22, 48)] = W[hook(22, 48 - 16)] + W[hook(22, 48 - 7)] + (rotate(W[hook(22, 48 - 15)], (u)25) ^ rotate(W[hook(22, 48 - 15)], (u)14) ^ (W[hook(22, 48 - 15)] >> 3U)) + (rotate(W[hook(22, 48 - 2)], (u)15) ^ rotate(W[hook(22, 48 - 2)], (u)13) ^ (W[hook(22, 48 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 48) % 8)] += (K[hook(23, 48 % 64)] + Vals[hook(21, (135 - 48) % 8)] + W[hook(22, 48)] + (rotate(Vals[hook(21, (132 - 48) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 48) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 48) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 48) % 8)], Vals[hook(21, (133 - 48) % 8)], Vals[hook(21, (132 - 48) % 8)])));
    Vals[hook(21, (135 - 48) % 8)] = (K[hook(23, 48 % 64)] + Vals[hook(21, (135 - 48) % 8)] + W[hook(22, 48)] + (rotate(Vals[hook(21, (132 - 48) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 48) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 48) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 48) % 8)], Vals[hook(21, (133 - 48) % 8)], Vals[hook(21, (132 - 48) % 8)]))) + (rotate(Vals[hook(21, (128 - 48) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 48) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 48) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 48) % 8)], Vals[hook(21, (130 - 48) % 8)], (Vals[hook(21, (128 - 48) % 8)] ^ Vals[hook(21, (129 - 48) % 8)])));
  };
  (W[hook(22, 49)] = W[hook(22, 49 - 16)] + W[hook(22, 49 - 7)] + (rotate(W[hook(22, 49 - 15)], (u)25) ^ rotate(W[hook(22, 49 - 15)], (u)14) ^ (W[hook(22, 49 - 15)] >> 3U)) + (rotate(W[hook(22, 49 - 2)], (u)15) ^ rotate(W[hook(22, 49 - 2)], (u)13) ^ (W[hook(22, 49 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 49) % 8)] += (K[hook(23, 49 % 64)] + Vals[hook(21, (135 - 49) % 8)] + W[hook(22, 49)] + (rotate(Vals[hook(21, (132 - 49) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 49) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 49) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 49) % 8)], Vals[hook(21, (133 - 49) % 8)], Vals[hook(21, (132 - 49) % 8)])));
    Vals[hook(21, (135 - 49) % 8)] = (K[hook(23, 49 % 64)] + Vals[hook(21, (135 - 49) % 8)] + W[hook(22, 49)] + (rotate(Vals[hook(21, (132 - 49) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 49) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 49) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 49) % 8)], Vals[hook(21, (133 - 49) % 8)], Vals[hook(21, (132 - 49) % 8)]))) + (rotate(Vals[hook(21, (128 - 49) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 49) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 49) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 49) % 8)], Vals[hook(21, (130 - 49) % 8)], (Vals[hook(21, (128 - 49) % 8)] ^ Vals[hook(21, (129 - 49) % 8)])));
  };
  (W[hook(22, 50)] = W[hook(22, 50 - 16)] + W[hook(22, 50 - 7)] + (rotate(W[hook(22, 50 - 15)], (u)25) ^ rotate(W[hook(22, 50 - 15)], (u)14) ^ (W[hook(22, 50 - 15)] >> 3U)) + (rotate(W[hook(22, 50 - 2)], (u)15) ^ rotate(W[hook(22, 50 - 2)], (u)13) ^ (W[hook(22, 50 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 50) % 8)] += (K[hook(23, 50 % 64)] + Vals[hook(21, (135 - 50) % 8)] + W[hook(22, 50)] + (rotate(Vals[hook(21, (132 - 50) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 50) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 50) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 50) % 8)], Vals[hook(21, (133 - 50) % 8)], Vals[hook(21, (132 - 50) % 8)])));
    Vals[hook(21, (135 - 50) % 8)] = (K[hook(23, 50 % 64)] + Vals[hook(21, (135 - 50) % 8)] + W[hook(22, 50)] + (rotate(Vals[hook(21, (132 - 50) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 50) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 50) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 50) % 8)], Vals[hook(21, (133 - 50) % 8)], Vals[hook(21, (132 - 50) % 8)]))) + (rotate(Vals[hook(21, (128 - 50) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 50) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 50) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 50) % 8)], Vals[hook(21, (130 - 50) % 8)], (Vals[hook(21, (128 - 50) % 8)] ^ Vals[hook(21, (129 - 50) % 8)])));
  };
  (W[hook(22, 51)] = W[hook(22, 51 - 16)] + W[hook(22, 51 - 7)] + (rotate(W[hook(22, 51 - 15)], (u)25) ^ rotate(W[hook(22, 51 - 15)], (u)14) ^ (W[hook(22, 51 - 15)] >> 3U)) + (rotate(W[hook(22, 51 - 2)], (u)15) ^ rotate(W[hook(22, 51 - 2)], (u)13) ^ (W[hook(22, 51 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 51) % 8)] += (K[hook(23, 51 % 64)] + Vals[hook(21, (135 - 51) % 8)] + W[hook(22, 51)] + (rotate(Vals[hook(21, (132 - 51) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 51) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 51) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 51) % 8)], Vals[hook(21, (133 - 51) % 8)], Vals[hook(21, (132 - 51) % 8)])));
    Vals[hook(21, (135 - 51) % 8)] = (K[hook(23, 51 % 64)] + Vals[hook(21, (135 - 51) % 8)] + W[hook(22, 51)] + (rotate(Vals[hook(21, (132 - 51) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 51) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 51) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 51) % 8)], Vals[hook(21, (133 - 51) % 8)], Vals[hook(21, (132 - 51) % 8)]))) + (rotate(Vals[hook(21, (128 - 51) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 51) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 51) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 51) % 8)], Vals[hook(21, (130 - 51) % 8)], (Vals[hook(21, (128 - 51) % 8)] ^ Vals[hook(21, (129 - 51) % 8)])));
  };
  (W[hook(22, 52)] = W[hook(22, 52 - 16)] + W[hook(22, 52 - 7)] + (rotate(W[hook(22, 52 - 15)], (u)25) ^ rotate(W[hook(22, 52 - 15)], (u)14) ^ (W[hook(22, 52 - 15)] >> 3U)) + (rotate(W[hook(22, 52 - 2)], (u)15) ^ rotate(W[hook(22, 52 - 2)], (u)13) ^ (W[hook(22, 52 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 52) % 8)] += (K[hook(23, 52 % 64)] + Vals[hook(21, (135 - 52) % 8)] + W[hook(22, 52)] + (rotate(Vals[hook(21, (132 - 52) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 52) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 52) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 52) % 8)], Vals[hook(21, (133 - 52) % 8)], Vals[hook(21, (132 - 52) % 8)])));
    Vals[hook(21, (135 - 52) % 8)] = (K[hook(23, 52 % 64)] + Vals[hook(21, (135 - 52) % 8)] + W[hook(22, 52)] + (rotate(Vals[hook(21, (132 - 52) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 52) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 52) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 52) % 8)], Vals[hook(21, (133 - 52) % 8)], Vals[hook(21, (132 - 52) % 8)]))) + (rotate(Vals[hook(21, (128 - 52) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 52) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 52) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 52) % 8)], Vals[hook(21, (130 - 52) % 8)], (Vals[hook(21, (128 - 52) % 8)] ^ Vals[hook(21, (129 - 52) % 8)])));
  };
  (W[hook(22, 53)] = W[hook(22, 53 - 16)] + W[hook(22, 53 - 7)] + (rotate(W[hook(22, 53 - 15)], (u)25) ^ rotate(W[hook(22, 53 - 15)], (u)14) ^ (W[hook(22, 53 - 15)] >> 3U)) + (rotate(W[hook(22, 53 - 2)], (u)15) ^ rotate(W[hook(22, 53 - 2)], (u)13) ^ (W[hook(22, 53 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 53) % 8)] += (K[hook(23, 53 % 64)] + Vals[hook(21, (135 - 53) % 8)] + W[hook(22, 53)] + (rotate(Vals[hook(21, (132 - 53) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 53) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 53) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 53) % 8)], Vals[hook(21, (133 - 53) % 8)], Vals[hook(21, (132 - 53) % 8)])));
    Vals[hook(21, (135 - 53) % 8)] = (K[hook(23, 53 % 64)] + Vals[hook(21, (135 - 53) % 8)] + W[hook(22, 53)] + (rotate(Vals[hook(21, (132 - 53) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 53) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 53) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 53) % 8)], Vals[hook(21, (133 - 53) % 8)], Vals[hook(21, (132 - 53) % 8)]))) + (rotate(Vals[hook(21, (128 - 53) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 53) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 53) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 53) % 8)], Vals[hook(21, (130 - 53) % 8)], (Vals[hook(21, (128 - 53) % 8)] ^ Vals[hook(21, (129 - 53) % 8)])));
  };
  (W[hook(22, 54)] = W[hook(22, 54 - 16)] + W[hook(22, 54 - 7)] + (rotate(W[hook(22, 54 - 15)], (u)25) ^ rotate(W[hook(22, 54 - 15)], (u)14) ^ (W[hook(22, 54 - 15)] >> 3U)) + (rotate(W[hook(22, 54 - 2)], (u)15) ^ rotate(W[hook(22, 54 - 2)], (u)13) ^ (W[hook(22, 54 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 54) % 8)] += (K[hook(23, 54 % 64)] + Vals[hook(21, (135 - 54) % 8)] + W[hook(22, 54)] + (rotate(Vals[hook(21, (132 - 54) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 54) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 54) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 54) % 8)], Vals[hook(21, (133 - 54) % 8)], Vals[hook(21, (132 - 54) % 8)])));
    Vals[hook(21, (135 - 54) % 8)] = (K[hook(23, 54 % 64)] + Vals[hook(21, (135 - 54) % 8)] + W[hook(22, 54)] + (rotate(Vals[hook(21, (132 - 54) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 54) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 54) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 54) % 8)], Vals[hook(21, (133 - 54) % 8)], Vals[hook(21, (132 - 54) % 8)]))) + (rotate(Vals[hook(21, (128 - 54) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 54) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 54) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 54) % 8)], Vals[hook(21, (130 - 54) % 8)], (Vals[hook(21, (128 - 54) % 8)] ^ Vals[hook(21, (129 - 54) % 8)])));
  };
  (W[hook(22, 55)] = W[hook(22, 55 - 16)] + W[hook(22, 55 - 7)] + (rotate(W[hook(22, 55 - 15)], (u)25) ^ rotate(W[hook(22, 55 - 15)], (u)14) ^ (W[hook(22, 55 - 15)] >> 3U)) + (rotate(W[hook(22, 55 - 2)], (u)15) ^ rotate(W[hook(22, 55 - 2)], (u)13) ^ (W[hook(22, 55 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 55) % 8)] += (K[hook(23, 55 % 64)] + Vals[hook(21, (135 - 55) % 8)] + W[hook(22, 55)] + (rotate(Vals[hook(21, (132 - 55) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 55) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 55) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 55) % 8)], Vals[hook(21, (133 - 55) % 8)], Vals[hook(21, (132 - 55) % 8)])));
    Vals[hook(21, (135 - 55) % 8)] = (K[hook(23, 55 % 64)] + Vals[hook(21, (135 - 55) % 8)] + W[hook(22, 55)] + (rotate(Vals[hook(21, (132 - 55) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 55) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 55) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 55) % 8)], Vals[hook(21, (133 - 55) % 8)], Vals[hook(21, (132 - 55) % 8)]))) + (rotate(Vals[hook(21, (128 - 55) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 55) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 55) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 55) % 8)], Vals[hook(21, (130 - 55) % 8)], (Vals[hook(21, (128 - 55) % 8)] ^ Vals[hook(21, (129 - 55) % 8)])));
  };
  (W[hook(22, 56)] = W[hook(22, 56 - 16)] + W[hook(22, 56 - 7)] + (rotate(W[hook(22, 56 - 15)], (u)25) ^ rotate(W[hook(22, 56 - 15)], (u)14) ^ (W[hook(22, 56 - 15)] >> 3U)) + (rotate(W[hook(22, 56 - 2)], (u)15) ^ rotate(W[hook(22, 56 - 2)], (u)13) ^ (W[hook(22, 56 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 56) % 8)] += (K[hook(23, 56 % 64)] + Vals[hook(21, (135 - 56) % 8)] + W[hook(22, 56)] + (rotate(Vals[hook(21, (132 - 56) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 56) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 56) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 56) % 8)], Vals[hook(21, (133 - 56) % 8)], Vals[hook(21, (132 - 56) % 8)])));
    Vals[hook(21, (135 - 56) % 8)] = (K[hook(23, 56 % 64)] + Vals[hook(21, (135 - 56) % 8)] + W[hook(22, 56)] + (rotate(Vals[hook(21, (132 - 56) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 56) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 56) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 56) % 8)], Vals[hook(21, (133 - 56) % 8)], Vals[hook(21, (132 - 56) % 8)]))) + (rotate(Vals[hook(21, (128 - 56) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 56) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 56) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 56) % 8)], Vals[hook(21, (130 - 56) % 8)], (Vals[hook(21, (128 - 56) % 8)] ^ Vals[hook(21, (129 - 56) % 8)])));
  };
  (W[hook(22, 57)] = W[hook(22, 57 - 16)] + W[hook(22, 57 - 7)] + (rotate(W[hook(22, 57 - 15)], (u)25) ^ rotate(W[hook(22, 57 - 15)], (u)14) ^ (W[hook(22, 57 - 15)] >> 3U)) + (rotate(W[hook(22, 57 - 2)], (u)15) ^ rotate(W[hook(22, 57 - 2)], (u)13) ^ (W[hook(22, 57 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 57) % 8)] += (K[hook(23, 57 % 64)] + Vals[hook(21, (135 - 57) % 8)] + W[hook(22, 57)] + (rotate(Vals[hook(21, (132 - 57) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 57) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 57) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 57) % 8)], Vals[hook(21, (133 - 57) % 8)], Vals[hook(21, (132 - 57) % 8)])));
    Vals[hook(21, (135 - 57) % 8)] = (K[hook(23, 57 % 64)] + Vals[hook(21, (135 - 57) % 8)] + W[hook(22, 57)] + (rotate(Vals[hook(21, (132 - 57) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 57) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 57) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 57) % 8)], Vals[hook(21, (133 - 57) % 8)], Vals[hook(21, (132 - 57) % 8)]))) + (rotate(Vals[hook(21, (128 - 57) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 57) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 57) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 57) % 8)], Vals[hook(21, (130 - 57) % 8)], (Vals[hook(21, (128 - 57) % 8)] ^ Vals[hook(21, (129 - 57) % 8)])));
  };
  (W[hook(22, 58)] = W[hook(22, 58 - 16)] + W[hook(22, 58 - 7)] + (rotate(W[hook(22, 58 - 15)], (u)25) ^ rotate(W[hook(22, 58 - 15)], (u)14) ^ (W[hook(22, 58 - 15)] >> 3U)) + (rotate(W[hook(22, 58 - 2)], (u)15) ^ rotate(W[hook(22, 58 - 2)], (u)13) ^ (W[hook(22, 58 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 58) % 8)] += (K[hook(23, 58 % 64)] + Vals[hook(21, (135 - 58) % 8)] + W[hook(22, 58)] + (rotate(Vals[hook(21, (132 - 58) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 58) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 58) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 58) % 8)], Vals[hook(21, (133 - 58) % 8)], Vals[hook(21, (132 - 58) % 8)])));
    Vals[hook(21, (135 - 58) % 8)] = (K[hook(23, 58 % 64)] + Vals[hook(21, (135 - 58) % 8)] + W[hook(22, 58)] + (rotate(Vals[hook(21, (132 - 58) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 58) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 58) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 58) % 8)], Vals[hook(21, (133 - 58) % 8)], Vals[hook(21, (132 - 58) % 8)]))) + (rotate(Vals[hook(21, (128 - 58) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 58) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 58) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 58) % 8)], Vals[hook(21, (130 - 58) % 8)], (Vals[hook(21, (128 - 58) % 8)] ^ Vals[hook(21, (129 - 58) % 8)])));
  };
  (W[hook(22, 59)] = W[hook(22, 59 - 16)] + W[hook(22, 59 - 7)] + (rotate(W[hook(22, 59 - 15)], (u)25) ^ rotate(W[hook(22, 59 - 15)], (u)14) ^ (W[hook(22, 59 - 15)] >> 3U)) + (rotate(W[hook(22, 59 - 2)], (u)15) ^ rotate(W[hook(22, 59 - 2)], (u)13) ^ (W[hook(22, 59 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 59) % 8)] += (K[hook(23, 59 % 64)] + Vals[hook(21, (135 - 59) % 8)] + W[hook(22, 59)] + (rotate(Vals[hook(21, (132 - 59) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 59) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 59) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 59) % 8)], Vals[hook(21, (133 - 59) % 8)], Vals[hook(21, (132 - 59) % 8)])));
    Vals[hook(21, (135 - 59) % 8)] = (K[hook(23, 59 % 64)] + Vals[hook(21, (135 - 59) % 8)] + W[hook(22, 59)] + (rotate(Vals[hook(21, (132 - 59) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 59) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 59) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 59) % 8)], Vals[hook(21, (133 - 59) % 8)], Vals[hook(21, (132 - 59) % 8)]))) + (rotate(Vals[hook(21, (128 - 59) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 59) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 59) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 59) % 8)], Vals[hook(21, (130 - 59) % 8)], (Vals[hook(21, (128 - 59) % 8)] ^ Vals[hook(21, (129 - 59) % 8)])));
  };
  (W[hook(22, 60)] = W[hook(22, 60 - 16)] + W[hook(22, 60 - 7)] + (rotate(W[hook(22, 60 - 15)], (u)25) ^ rotate(W[hook(22, 60 - 15)], (u)14) ^ (W[hook(22, 60 - 15)] >> 3U)) + (rotate(W[hook(22, 60 - 2)], (u)15) ^ rotate(W[hook(22, 60 - 2)], (u)13) ^ (W[hook(22, 60 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 60) % 8)] += (K[hook(23, 60 % 64)] + Vals[hook(21, (135 - 60) % 8)] + W[hook(22, 60)] + (rotate(Vals[hook(21, (132 - 60) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 60) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 60) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 60) % 8)], Vals[hook(21, (133 - 60) % 8)], Vals[hook(21, (132 - 60) % 8)])));
    Vals[hook(21, (135 - 60) % 8)] = (K[hook(23, 60 % 64)] + Vals[hook(21, (135 - 60) % 8)] + W[hook(22, 60)] + (rotate(Vals[hook(21, (132 - 60) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 60) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 60) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 60) % 8)], Vals[hook(21, (133 - 60) % 8)], Vals[hook(21, (132 - 60) % 8)]))) + (rotate(Vals[hook(21, (128 - 60) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 60) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 60) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 60) % 8)], Vals[hook(21, (130 - 60) % 8)], (Vals[hook(21, (128 - 60) % 8)] ^ Vals[hook(21, (129 - 60) % 8)])));
  };
  (W[hook(22, 61)] = W[hook(22, 61 - 16)] + W[hook(22, 61 - 7)] + (rotate(W[hook(22, 61 - 15)], (u)25) ^ rotate(W[hook(22, 61 - 15)], (u)14) ^ (W[hook(22, 61 - 15)] >> 3U)) + (rotate(W[hook(22, 61 - 2)], (u)15) ^ rotate(W[hook(22, 61 - 2)], (u)13) ^ (W[hook(22, 61 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 61) % 8)] += (K[hook(23, 61 % 64)] + Vals[hook(21, (135 - 61) % 8)] + W[hook(22, 61)] + (rotate(Vals[hook(21, (132 - 61) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 61) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 61) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 61) % 8)], Vals[hook(21, (133 - 61) % 8)], Vals[hook(21, (132 - 61) % 8)])));
    Vals[hook(21, (135 - 61) % 8)] = (K[hook(23, 61 % 64)] + Vals[hook(21, (135 - 61) % 8)] + W[hook(22, 61)] + (rotate(Vals[hook(21, (132 - 61) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 61) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 61) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 61) % 8)], Vals[hook(21, (133 - 61) % 8)], Vals[hook(21, (132 - 61) % 8)]))) + (rotate(Vals[hook(21, (128 - 61) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 61) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 61) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 61) % 8)], Vals[hook(21, (130 - 61) % 8)], (Vals[hook(21, (128 - 61) % 8)] ^ Vals[hook(21, (129 - 61) % 8)])));
  };
  (W[hook(22, 62)] = W[hook(22, 62 - 16)] + W[hook(22, 62 - 7)] + (rotate(W[hook(22, 62 - 15)], (u)25) ^ rotate(W[hook(22, 62 - 15)], (u)14) ^ (W[hook(22, 62 - 15)] >> 3U)) + (rotate(W[hook(22, 62 - 2)], (u)15) ^ rotate(W[hook(22, 62 - 2)], (u)13) ^ (W[hook(22, 62 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 62) % 8)] += (K[hook(23, 62 % 64)] + Vals[hook(21, (135 - 62) % 8)] + W[hook(22, 62)] + (rotate(Vals[hook(21, (132 - 62) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 62) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 62) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 62) % 8)], Vals[hook(21, (133 - 62) % 8)], Vals[hook(21, (132 - 62) % 8)])));
    Vals[hook(21, (135 - 62) % 8)] = (K[hook(23, 62 % 64)] + Vals[hook(21, (135 - 62) % 8)] + W[hook(22, 62)] + (rotate(Vals[hook(21, (132 - 62) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 62) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 62) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 62) % 8)], Vals[hook(21, (133 - 62) % 8)], Vals[hook(21, (132 - 62) % 8)]))) + (rotate(Vals[hook(21, (128 - 62) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 62) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 62) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 62) % 8)], Vals[hook(21, (130 - 62) % 8)], (Vals[hook(21, (128 - 62) % 8)] ^ Vals[hook(21, (129 - 62) % 8)])));
  };
  (W[hook(22, 63)] = W[hook(22, 63 - 16)] + W[hook(22, 63 - 7)] + (rotate(W[hook(22, 63 - 15)], (u)25) ^ rotate(W[hook(22, 63 - 15)], (u)14) ^ (W[hook(22, 63 - 15)] >> 3U)) + (rotate(W[hook(22, 63 - 2)], (u)15) ^ rotate(W[hook(22, 63 - 2)], (u)13) ^ (W[hook(22, 63 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 63) % 8)] += (K[hook(23, 63 % 64)] + Vals[hook(21, (135 - 63) % 8)] + W[hook(22, 63)] + (rotate(Vals[hook(21, (132 - 63) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 63) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 63) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 63) % 8)], Vals[hook(21, (133 - 63) % 8)], Vals[hook(21, (132 - 63) % 8)])));
    Vals[hook(21, (135 - 63) % 8)] = (K[hook(23, 63 % 64)] + Vals[hook(21, (135 - 63) % 8)] + W[hook(22, 63)] + (rotate(Vals[hook(21, (132 - 63) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 63) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 63) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 63) % 8)], Vals[hook(21, (133 - 63) % 8)], Vals[hook(21, (132 - 63) % 8)]))) + (rotate(Vals[hook(21, (128 - 63) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 63) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 63) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 63) % 8)], Vals[hook(21, (130 - 63) % 8)], (Vals[hook(21, (128 - 63) % 8)] ^ Vals[hook(21, (129 - 63) % 8)])));
  };

  W[hook(22, 64)] = state0 + Vals[hook(21, 0)];
  W[hook(22, 65)] = state1 + Vals[hook(21, 1)];
  W[hook(22, 66)] = state2 + Vals[hook(21, 2)];
  W[hook(22, 67)] = state3 + Vals[hook(21, 3)];
  W[hook(22, 68)] = state4 + Vals[hook(21, 4)];
  W[hook(22, 69)] = state5 + Vals[hook(21, 5)];
  W[hook(22, 70)] = state6 + Vals[hook(21, 6)];
  W[hook(22, 71)] = state7 + Vals[hook(21, 7)];

  W[hook(22, 72)] = 0x80000000U;

  W[hook(22, 78)] = W[hook(22, 77)] = W[hook(22, 76)] = W[hook(22, 75)] = W[hook(22, 74)] = W[hook(22, 73)] = 0x00000000U;

  W[hook(22, 79)] = 0x00000100U;

  Vals[hook(21, 0)] = H[hook(24, 0)];
  Vals[hook(21, 1)] = H[hook(24, 1)];
  Vals[hook(21, 2)] = H[hook(24, 2)];
  Vals[hook(21, 3)] = L[hook(25, 0)] + W[hook(22, 64)];
  Vals[hook(21, 4)] = H[hook(24, 3)];
  Vals[hook(21, 5)] = H[hook(24, 4)];
  Vals[hook(21, 6)] = H[hook(24, 5)];
  Vals[hook(21, 7)] = H[hook(24, 6)] + W[hook(22, 64)];

  {
    Vals[hook(21, (131 - 65) % 8)] += (K[hook(23, 65 % 64)] + Vals[hook(21, (135 - 65) % 8)] + W[hook(22, 65)] + (rotate(Vals[hook(21, (132 - 65) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 65) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 65) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 65) % 8)], Vals[hook(21, (133 - 65) % 8)], Vals[hook(21, (132 - 65) % 8)])));
    Vals[hook(21, (135 - 65) % 8)] = (K[hook(23, 65 % 64)] + Vals[hook(21, (135 - 65) % 8)] + W[hook(22, 65)] + (rotate(Vals[hook(21, (132 - 65) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 65) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 65) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 65) % 8)], Vals[hook(21, (133 - 65) % 8)], Vals[hook(21, (132 - 65) % 8)]))) + (rotate(Vals[hook(21, (128 - 65) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 65) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 65) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 65) % 8)], Vals[hook(21, (130 - 65) % 8)], (Vals[hook(21, (128 - 65) % 8)] ^ Vals[hook(21, (129 - 65) % 8)])));
  };
  {
    Vals[hook(21, (131 - 66) % 8)] += (K[hook(23, 66 % 64)] + Vals[hook(21, (135 - 66) % 8)] + W[hook(22, 66)] + (rotate(Vals[hook(21, (132 - 66) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 66) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 66) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 66) % 8)], Vals[hook(21, (133 - 66) % 8)], Vals[hook(21, (132 - 66) % 8)])));
    Vals[hook(21, (135 - 66) % 8)] = (K[hook(23, 66 % 64)] + Vals[hook(21, (135 - 66) % 8)] + W[hook(22, 66)] + (rotate(Vals[hook(21, (132 - 66) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 66) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 66) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 66) % 8)], Vals[hook(21, (133 - 66) % 8)], Vals[hook(21, (132 - 66) % 8)]))) + (rotate(Vals[hook(21, (128 - 66) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 66) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 66) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 66) % 8)], Vals[hook(21, (130 - 66) % 8)], (Vals[hook(21, (128 - 66) % 8)] ^ Vals[hook(21, (129 - 66) % 8)])));
  };
  {
    Vals[hook(21, (131 - 67) % 8)] += (K[hook(23, 67 % 64)] + Vals[hook(21, (135 - 67) % 8)] + W[hook(22, 67)] + (rotate(Vals[hook(21, (132 - 67) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 67) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 67) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 67) % 8)], Vals[hook(21, (133 - 67) % 8)], Vals[hook(21, (132 - 67) % 8)])));
    Vals[hook(21, (135 - 67) % 8)] = (K[hook(23, 67 % 64)] + Vals[hook(21, (135 - 67) % 8)] + W[hook(22, 67)] + (rotate(Vals[hook(21, (132 - 67) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 67) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 67) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 67) % 8)], Vals[hook(21, (133 - 67) % 8)], Vals[hook(21, (132 - 67) % 8)]))) + (rotate(Vals[hook(21, (128 - 67) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 67) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 67) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 67) % 8)], Vals[hook(21, (130 - 67) % 8)], (Vals[hook(21, (128 - 67) % 8)] ^ Vals[hook(21, (129 - 67) % 8)])));
  };
  {
    Vals[hook(21, (131 - 68) % 8)] += (K[hook(23, 68 % 64)] + Vals[hook(21, (135 - 68) % 8)] + W[hook(22, 68)] + (rotate(Vals[hook(21, (132 - 68) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 68) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 68) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 68) % 8)], Vals[hook(21, (133 - 68) % 8)], Vals[hook(21, (132 - 68) % 8)])));
    Vals[hook(21, (135 - 68) % 8)] = (K[hook(23, 68 % 64)] + Vals[hook(21, (135 - 68) % 8)] + W[hook(22, 68)] + (rotate(Vals[hook(21, (132 - 68) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 68) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 68) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 68) % 8)], Vals[hook(21, (133 - 68) % 8)], Vals[hook(21, (132 - 68) % 8)]))) + (rotate(Vals[hook(21, (128 - 68) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 68) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 68) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 68) % 8)], Vals[hook(21, (130 - 68) % 8)], (Vals[hook(21, (128 - 68) % 8)] ^ Vals[hook(21, (129 - 68) % 8)])));
  };
  {
    Vals[hook(21, (131 - 69) % 8)] += (K[hook(23, 69 % 64)] + Vals[hook(21, (135 - 69) % 8)] + W[hook(22, 69)] + (rotate(Vals[hook(21, (132 - 69) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 69) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 69) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 69) % 8)], Vals[hook(21, (133 - 69) % 8)], Vals[hook(21, (132 - 69) % 8)])));
    Vals[hook(21, (135 - 69) % 8)] = (K[hook(23, 69 % 64)] + Vals[hook(21, (135 - 69) % 8)] + W[hook(22, 69)] + (rotate(Vals[hook(21, (132 - 69) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 69) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 69) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 69) % 8)], Vals[hook(21, (133 - 69) % 8)], Vals[hook(21, (132 - 69) % 8)]))) + (rotate(Vals[hook(21, (128 - 69) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 69) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 69) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 69) % 8)], Vals[hook(21, (130 - 69) % 8)], (Vals[hook(21, (128 - 69) % 8)] ^ Vals[hook(21, (129 - 69) % 8)])));
  };
  {
    Vals[hook(21, (131 - 70) % 8)] += (K[hook(23, 70 % 64)] + Vals[hook(21, (135 - 70) % 8)] + W[hook(22, 70)] + (rotate(Vals[hook(21, (132 - 70) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 70) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 70) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 70) % 8)], Vals[hook(21, (133 - 70) % 8)], Vals[hook(21, (132 - 70) % 8)])));
    Vals[hook(21, (135 - 70) % 8)] = (K[hook(23, 70 % 64)] + Vals[hook(21, (135 - 70) % 8)] + W[hook(22, 70)] + (rotate(Vals[hook(21, (132 - 70) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 70) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 70) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 70) % 8)], Vals[hook(21, (133 - 70) % 8)], Vals[hook(21, (132 - 70) % 8)]))) + (rotate(Vals[hook(21, (128 - 70) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 70) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 70) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 70) % 8)], Vals[hook(21, (130 - 70) % 8)], (Vals[hook(21, (128 - 70) % 8)] ^ Vals[hook(21, (129 - 70) % 8)])));
  };
  {
    Vals[hook(21, (131 - 71) % 8)] += (K[hook(23, 71 % 64)] + Vals[hook(21, (135 - 71) % 8)] + W[hook(22, 71)] + (rotate(Vals[hook(21, (132 - 71) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 71) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 71) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 71) % 8)], Vals[hook(21, (133 - 71) % 8)], Vals[hook(21, (132 - 71) % 8)])));
    Vals[hook(21, (135 - 71) % 8)] = (K[hook(23, 71 % 64)] + Vals[hook(21, (135 - 71) % 8)] + W[hook(22, 71)] + (rotate(Vals[hook(21, (132 - 71) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 71) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 71) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 71) % 8)], Vals[hook(21, (133 - 71) % 8)], Vals[hook(21, (132 - 71) % 8)]))) + (rotate(Vals[hook(21, (128 - 71) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 71) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 71) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 71) % 8)], Vals[hook(21, (130 - 71) % 8)], (Vals[hook(21, (128 - 71) % 8)] ^ Vals[hook(21, (129 - 71) % 8)])));
  };
  {
    Vals[hook(21, (131 - 72) % 8)] += (K[hook(23, 72 % 64)] + Vals[hook(21, (135 - 72) % 8)] + W[hook(22, 72)] + (rotate(Vals[hook(21, (132 - 72) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 72) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 72) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 72) % 8)], Vals[hook(21, (133 - 72) % 8)], Vals[hook(21, (132 - 72) % 8)])));
    Vals[hook(21, (135 - 72) % 8)] = (K[hook(23, 72 % 64)] + Vals[hook(21, (135 - 72) % 8)] + W[hook(22, 72)] + (rotate(Vals[hook(21, (132 - 72) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 72) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 72) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 72) % 8)], Vals[hook(21, (133 - 72) % 8)], Vals[hook(21, (132 - 72) % 8)]))) + (rotate(Vals[hook(21, (128 - 72) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 72) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 72) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 72) % 8)], Vals[hook(21, (130 - 72) % 8)], (Vals[hook(21, (128 - 72) % 8)] ^ Vals[hook(21, (129 - 72) % 8)])));
  };
  {
    Vals[hook(21, (131 - 73) % 8)] += (K[hook(23, 73 % 64)] + Vals[hook(21, (135 - 73) % 8)] + W[hook(22, 73)] + (rotate(Vals[hook(21, (132 - 73) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 73) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 73) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 73) % 8)], Vals[hook(21, (133 - 73) % 8)], Vals[hook(21, (132 - 73) % 8)])));
    Vals[hook(21, (135 - 73) % 8)] = (K[hook(23, 73 % 64)] + Vals[hook(21, (135 - 73) % 8)] + W[hook(22, 73)] + (rotate(Vals[hook(21, (132 - 73) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 73) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 73) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 73) % 8)], Vals[hook(21, (133 - 73) % 8)], Vals[hook(21, (132 - 73) % 8)]))) + (rotate(Vals[hook(21, (128 - 73) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 73) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 73) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 73) % 8)], Vals[hook(21, (130 - 73) % 8)], (Vals[hook(21, (128 - 73) % 8)] ^ Vals[hook(21, (129 - 73) % 8)])));
  };
  {
    Vals[hook(21, (131 - 74) % 8)] += (K[hook(23, 74 % 64)] + Vals[hook(21, (135 - 74) % 8)] + W[hook(22, 74)] + (rotate(Vals[hook(21, (132 - 74) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 74) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 74) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 74) % 8)], Vals[hook(21, (133 - 74) % 8)], Vals[hook(21, (132 - 74) % 8)])));
    Vals[hook(21, (135 - 74) % 8)] = (K[hook(23, 74 % 64)] + Vals[hook(21, (135 - 74) % 8)] + W[hook(22, 74)] + (rotate(Vals[hook(21, (132 - 74) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 74) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 74) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 74) % 8)], Vals[hook(21, (133 - 74) % 8)], Vals[hook(21, (132 - 74) % 8)]))) + (rotate(Vals[hook(21, (128 - 74) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 74) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 74) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 74) % 8)], Vals[hook(21, (130 - 74) % 8)], (Vals[hook(21, (128 - 74) % 8)] ^ Vals[hook(21, (129 - 74) % 8)])));
  };
  {
    Vals[hook(21, (131 - 75) % 8)] += (K[hook(23, 75 % 64)] + Vals[hook(21, (135 - 75) % 8)] + W[hook(22, 75)] + (rotate(Vals[hook(21, (132 - 75) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 75) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 75) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 75) % 8)], Vals[hook(21, (133 - 75) % 8)], Vals[hook(21, (132 - 75) % 8)])));
    Vals[hook(21, (135 - 75) % 8)] = (K[hook(23, 75 % 64)] + Vals[hook(21, (135 - 75) % 8)] + W[hook(22, 75)] + (rotate(Vals[hook(21, (132 - 75) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 75) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 75) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 75) % 8)], Vals[hook(21, (133 - 75) % 8)], Vals[hook(21, (132 - 75) % 8)]))) + (rotate(Vals[hook(21, (128 - 75) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 75) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 75) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 75) % 8)], Vals[hook(21, (130 - 75) % 8)], (Vals[hook(21, (128 - 75) % 8)] ^ Vals[hook(21, (129 - 75) % 8)])));
  };
  {
    Vals[hook(21, (131 - 76) % 8)] += (K[hook(23, 76 % 64)] + Vals[hook(21, (135 - 76) % 8)] + W[hook(22, 76)] + (rotate(Vals[hook(21, (132 - 76) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 76) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 76) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 76) % 8)], Vals[hook(21, (133 - 76) % 8)], Vals[hook(21, (132 - 76) % 8)])));
    Vals[hook(21, (135 - 76) % 8)] = (K[hook(23, 76 % 64)] + Vals[hook(21, (135 - 76) % 8)] + W[hook(22, 76)] + (rotate(Vals[hook(21, (132 - 76) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 76) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 76) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 76) % 8)], Vals[hook(21, (133 - 76) % 8)], Vals[hook(21, (132 - 76) % 8)]))) + (rotate(Vals[hook(21, (128 - 76) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 76) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 76) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 76) % 8)], Vals[hook(21, (130 - 76) % 8)], (Vals[hook(21, (128 - 76) % 8)] ^ Vals[hook(21, (129 - 76) % 8)])));
  };
  {
    Vals[hook(21, (131 - 77) % 8)] += (K[hook(23, 77 % 64)] + Vals[hook(21, (135 - 77) % 8)] + W[hook(22, 77)] + (rotate(Vals[hook(21, (132 - 77) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 77) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 77) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 77) % 8)], Vals[hook(21, (133 - 77) % 8)], Vals[hook(21, (132 - 77) % 8)])));
    Vals[hook(21, (135 - 77) % 8)] = (K[hook(23, 77 % 64)] + Vals[hook(21, (135 - 77) % 8)] + W[hook(22, 77)] + (rotate(Vals[hook(21, (132 - 77) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 77) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 77) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 77) % 8)], Vals[hook(21, (133 - 77) % 8)], Vals[hook(21, (132 - 77) % 8)]))) + (rotate(Vals[hook(21, (128 - 77) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 77) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 77) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 77) % 8)], Vals[hook(21, (130 - 77) % 8)], (Vals[hook(21, (128 - 77) % 8)] ^ Vals[hook(21, (129 - 77) % 8)])));
  };
  {
    Vals[hook(21, (131 - 78) % 8)] += (K[hook(23, 78 % 64)] + Vals[hook(21, (135 - 78) % 8)] + W[hook(22, 78)] + (rotate(Vals[hook(21, (132 - 78) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 78) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 78) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 78) % 8)], Vals[hook(21, (133 - 78) % 8)], Vals[hook(21, (132 - 78) % 8)])));
    Vals[hook(21, (135 - 78) % 8)] = (K[hook(23, 78 % 64)] + Vals[hook(21, (135 - 78) % 8)] + W[hook(22, 78)] + (rotate(Vals[hook(21, (132 - 78) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 78) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 78) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 78) % 8)], Vals[hook(21, (133 - 78) % 8)], Vals[hook(21, (132 - 78) % 8)]))) + (rotate(Vals[hook(21, (128 - 78) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 78) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 78) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 78) % 8)], Vals[hook(21, (130 - 78) % 8)], (Vals[hook(21, (128 - 78) % 8)] ^ Vals[hook(21, (129 - 78) % 8)])));
  };
  {
    Vals[hook(21, (131 - 79) % 8)] += (K[hook(23, 79 % 64)] + Vals[hook(21, (135 - 79) % 8)] + W[hook(22, 79)] + (rotate(Vals[hook(21, (132 - 79) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 79) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 79) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 79) % 8)], Vals[hook(21, (133 - 79) % 8)], Vals[hook(21, (132 - 79) % 8)])));
    Vals[hook(21, (135 - 79) % 8)] = (K[hook(23, 79 % 64)] + Vals[hook(21, (135 - 79) % 8)] + W[hook(22, 79)] + (rotate(Vals[hook(21, (132 - 79) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 79) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 79) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 79) % 8)], Vals[hook(21, (133 - 79) % 8)], Vals[hook(21, (132 - 79) % 8)]))) + (rotate(Vals[hook(21, (128 - 79) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 79) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 79) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 79) % 8)], Vals[hook(21, (130 - 79) % 8)], (Vals[hook(21, (128 - 79) % 8)] ^ Vals[hook(21, (129 - 79) % 8)])));
  };

  W[hook(22, 80)] = (rotate(W[hook(22, 80 - 15)], (u)25) ^ rotate(W[hook(22, 80 - 15)], (u)14) ^ (W[hook(22, 80 - 15)] >> 3U)) + W[hook(22, 80 - 16)];
  W[hook(22, 81)] = (u)0xA00000 + W[hook(22, 81 - 16)] + (rotate(W[hook(22, 81 - 15)], (u)25) ^ rotate(W[hook(22, 81 - 15)], (u)14) ^ (W[hook(22, 81 - 15)] >> 3U));
  W[hook(22, 82)] = W[hook(22, 82 - 16)] + (rotate(W[hook(22, 82 - 15)], (u)25) ^ rotate(W[hook(22, 82 - 15)], (u)14) ^ (W[hook(22, 82 - 15)] >> 3U)) + (rotate(W[hook(22, 82 - 2)], (u)15) ^ rotate(W[hook(22, 82 - 2)], (u)13) ^ (W[hook(22, 82 - 2)] >> 10U));
  W[hook(22, 83)] = W[hook(22, 83 - 16)] + (rotate(W[hook(22, 83 - 15)], (u)25) ^ rotate(W[hook(22, 83 - 15)], (u)14) ^ (W[hook(22, 83 - 15)] >> 3U)) + (rotate(W[hook(22, 83 - 2)], (u)15) ^ rotate(W[hook(22, 83 - 2)], (u)13) ^ (W[hook(22, 83 - 2)] >> 10U));
  W[hook(22, 84)] = W[hook(22, 84 - 16)] + (rotate(W[hook(22, 84 - 15)], (u)25) ^ rotate(W[hook(22, 84 - 15)], (u)14) ^ (W[hook(22, 84 - 15)] >> 3U)) + (rotate(W[hook(22, 84 - 2)], (u)15) ^ rotate(W[hook(22, 84 - 2)], (u)13) ^ (W[hook(22, 84 - 2)] >> 10U));
  W[hook(22, 85)] = W[hook(22, 85 - 16)] + (rotate(W[hook(22, 85 - 15)], (u)25) ^ rotate(W[hook(22, 85 - 15)], (u)14) ^ (W[hook(22, 85 - 15)] >> 3U)) + (rotate(W[hook(22, 85 - 2)], (u)15) ^ rotate(W[hook(22, 85 - 2)], (u)13) ^ (W[hook(22, 85 - 2)] >> 10U));
  (W[hook(22, 86)] = W[hook(22, 86 - 16)] + W[hook(22, 86 - 7)] + (rotate(W[hook(22, 86 - 15)], (u)25) ^ rotate(W[hook(22, 86 - 15)], (u)14) ^ (W[hook(22, 86 - 15)] >> 3U)) + (rotate(W[hook(22, 86 - 2)], (u)15) ^ rotate(W[hook(22, 86 - 2)], (u)13) ^ (W[hook(22, 86 - 2)] >> 10U)));

  {
    Vals[hook(21, (131 - 80) % 8)] += (K[hook(23, 80 % 64)] + Vals[hook(21, (135 - 80) % 8)] + W[hook(22, 80)] + (rotate(Vals[hook(21, (132 - 80) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 80) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 80) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 80) % 8)], Vals[hook(21, (133 - 80) % 8)], Vals[hook(21, (132 - 80) % 8)])));
    Vals[hook(21, (135 - 80) % 8)] = (K[hook(23, 80 % 64)] + Vals[hook(21, (135 - 80) % 8)] + W[hook(22, 80)] + (rotate(Vals[hook(21, (132 - 80) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 80) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 80) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 80) % 8)], Vals[hook(21, (133 - 80) % 8)], Vals[hook(21, (132 - 80) % 8)]))) + (rotate(Vals[hook(21, (128 - 80) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 80) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 80) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 80) % 8)], Vals[hook(21, (130 - 80) % 8)], (Vals[hook(21, (128 - 80) % 8)] ^ Vals[hook(21, (129 - 80) % 8)])));
  };
  {
    Vals[hook(21, (131 - 81) % 8)] += (K[hook(23, 81 % 64)] + Vals[hook(21, (135 - 81) % 8)] + W[hook(22, 81)] + (rotate(Vals[hook(21, (132 - 81) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 81) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 81) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 81) % 8)], Vals[hook(21, (133 - 81) % 8)], Vals[hook(21, (132 - 81) % 8)])));
    Vals[hook(21, (135 - 81) % 8)] = (K[hook(23, 81 % 64)] + Vals[hook(21, (135 - 81) % 8)] + W[hook(22, 81)] + (rotate(Vals[hook(21, (132 - 81) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 81) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 81) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 81) % 8)], Vals[hook(21, (133 - 81) % 8)], Vals[hook(21, (132 - 81) % 8)]))) + (rotate(Vals[hook(21, (128 - 81) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 81) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 81) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 81) % 8)], Vals[hook(21, (130 - 81) % 8)], (Vals[hook(21, (128 - 81) % 8)] ^ Vals[hook(21, (129 - 81) % 8)])));
  };
  {
    Vals[hook(21, (131 - 82) % 8)] += (K[hook(23, 82 % 64)] + Vals[hook(21, (135 - 82) % 8)] + W[hook(22, 82)] + (rotate(Vals[hook(21, (132 - 82) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 82) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 82) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 82) % 8)], Vals[hook(21, (133 - 82) % 8)], Vals[hook(21, (132 - 82) % 8)])));
    Vals[hook(21, (135 - 82) % 8)] = (K[hook(23, 82 % 64)] + Vals[hook(21, (135 - 82) % 8)] + W[hook(22, 82)] + (rotate(Vals[hook(21, (132 - 82) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 82) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 82) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 82) % 8)], Vals[hook(21, (133 - 82) % 8)], Vals[hook(21, (132 - 82) % 8)]))) + (rotate(Vals[hook(21, (128 - 82) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 82) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 82) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 82) % 8)], Vals[hook(21, (130 - 82) % 8)], (Vals[hook(21, (128 - 82) % 8)] ^ Vals[hook(21, (129 - 82) % 8)])));
  };
  {
    Vals[hook(21, (131 - 83) % 8)] += (K[hook(23, 83 % 64)] + Vals[hook(21, (135 - 83) % 8)] + W[hook(22, 83)] + (rotate(Vals[hook(21, (132 - 83) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 83) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 83) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 83) % 8)], Vals[hook(21, (133 - 83) % 8)], Vals[hook(21, (132 - 83) % 8)])));
    Vals[hook(21, (135 - 83) % 8)] = (K[hook(23, 83 % 64)] + Vals[hook(21, (135 - 83) % 8)] + W[hook(22, 83)] + (rotate(Vals[hook(21, (132 - 83) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 83) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 83) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 83) % 8)], Vals[hook(21, (133 - 83) % 8)], Vals[hook(21, (132 - 83) % 8)]))) + (rotate(Vals[hook(21, (128 - 83) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 83) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 83) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 83) % 8)], Vals[hook(21, (130 - 83) % 8)], (Vals[hook(21, (128 - 83) % 8)] ^ Vals[hook(21, (129 - 83) % 8)])));
  };
  {
    Vals[hook(21, (131 - 84) % 8)] += (K[hook(23, 84 % 64)] + Vals[hook(21, (135 - 84) % 8)] + W[hook(22, 84)] + (rotate(Vals[hook(21, (132 - 84) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 84) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 84) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 84) % 8)], Vals[hook(21, (133 - 84) % 8)], Vals[hook(21, (132 - 84) % 8)])));
    Vals[hook(21, (135 - 84) % 8)] = (K[hook(23, 84 % 64)] + Vals[hook(21, (135 - 84) % 8)] + W[hook(22, 84)] + (rotate(Vals[hook(21, (132 - 84) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 84) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 84) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 84) % 8)], Vals[hook(21, (133 - 84) % 8)], Vals[hook(21, (132 - 84) % 8)]))) + (rotate(Vals[hook(21, (128 - 84) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 84) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 84) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 84) % 8)], Vals[hook(21, (130 - 84) % 8)], (Vals[hook(21, (128 - 84) % 8)] ^ Vals[hook(21, (129 - 84) % 8)])));
  };
  {
    Vals[hook(21, (131 - 85) % 8)] += (K[hook(23, 85 % 64)] + Vals[hook(21, (135 - 85) % 8)] + W[hook(22, 85)] + (rotate(Vals[hook(21, (132 - 85) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 85) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 85) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 85) % 8)], Vals[hook(21, (133 - 85) % 8)], Vals[hook(21, (132 - 85) % 8)])));
    Vals[hook(21, (135 - 85) % 8)] = (K[hook(23, 85 % 64)] + Vals[hook(21, (135 - 85) % 8)] + W[hook(22, 85)] + (rotate(Vals[hook(21, (132 - 85) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 85) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 85) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 85) % 8)], Vals[hook(21, (133 - 85) % 8)], Vals[hook(21, (132 - 85) % 8)]))) + (rotate(Vals[hook(21, (128 - 85) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 85) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 85) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 85) % 8)], Vals[hook(21, (130 - 85) % 8)], (Vals[hook(21, (128 - 85) % 8)] ^ Vals[hook(21, (129 - 85) % 8)])));
  };
  {
    Vals[hook(21, (131 - 86) % 8)] += (K[hook(23, 86 % 64)] + Vals[hook(21, (135 - 86) % 8)] + W[hook(22, 86)] + (rotate(Vals[hook(21, (132 - 86) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 86) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 86) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 86) % 8)], Vals[hook(21, (133 - 86) % 8)], Vals[hook(21, (132 - 86) % 8)])));
    Vals[hook(21, (135 - 86) % 8)] = (K[hook(23, 86 % 64)] + Vals[hook(21, (135 - 86) % 8)] + W[hook(22, 86)] + (rotate(Vals[hook(21, (132 - 86) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 86) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 86) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 86) % 8)], Vals[hook(21, (133 - 86) % 8)], Vals[hook(21, (132 - 86) % 8)]))) + (rotate(Vals[hook(21, (128 - 86) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 86) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 86) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 86) % 8)], Vals[hook(21, (130 - 86) % 8)], (Vals[hook(21, (128 - 86) % 8)] ^ Vals[hook(21, (129 - 86) % 8)])));
  };

  W[hook(22, 87)] = (u)0x11002000 + W[hook(22, 87 - 16)] + W[hook(22, 87 - 7)] + (rotate(W[hook(22, 87 - 2)], (u)15) ^ rotate(W[hook(22, 87 - 2)], (u)13) ^ (W[hook(22, 87 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 87) % 8)] += (K[hook(23, 87 % 64)] + Vals[hook(21, (135 - 87) % 8)] + W[hook(22, 87)] + (rotate(Vals[hook(21, (132 - 87) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 87) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 87) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 87) % 8)], Vals[hook(21, (133 - 87) % 8)], Vals[hook(21, (132 - 87) % 8)])));
    Vals[hook(21, (135 - 87) % 8)] = (K[hook(23, 87 % 64)] + Vals[hook(21, (135 - 87) % 8)] + W[hook(22, 87)] + (rotate(Vals[hook(21, (132 - 87) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 87) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 87) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 87) % 8)], Vals[hook(21, (133 - 87) % 8)], Vals[hook(21, (132 - 87) % 8)]))) + (rotate(Vals[hook(21, (128 - 87) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 87) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 87) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 87) % 8)], Vals[hook(21, (130 - 87) % 8)], (Vals[hook(21, (128 - 87) % 8)] ^ Vals[hook(21, (129 - 87) % 8)])));
  };
  W[hook(22, 88)] = W[hook(22, 88 - 16)] + W[hook(22, 88 - 7)] + (rotate(W[hook(22, 88 - 2)], (u)15) ^ rotate(W[hook(22, 88 - 2)], (u)13) ^ (W[hook(22, 88 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 88) % 8)] += (K[hook(23, 88 % 64)] + Vals[hook(21, (135 - 88) % 8)] + W[hook(22, 88)] + (rotate(Vals[hook(21, (132 - 88) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 88) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 88) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 88) % 8)], Vals[hook(21, (133 - 88) % 8)], Vals[hook(21, (132 - 88) % 8)])));
    Vals[hook(21, (135 - 88) % 8)] = (K[hook(23, 88 % 64)] + Vals[hook(21, (135 - 88) % 8)] + W[hook(22, 88)] + (rotate(Vals[hook(21, (132 - 88) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 88) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 88) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 88) % 8)], Vals[hook(21, (133 - 88) % 8)], Vals[hook(21, (132 - 88) % 8)]))) + (rotate(Vals[hook(21, (128 - 88) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 88) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 88) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 88) % 8)], Vals[hook(21, (130 - 88) % 8)], (Vals[hook(21, (128 - 88) % 8)] ^ Vals[hook(21, (129 - 88) % 8)])));
  };
  W[hook(22, 89)] = W[hook(22, 89 - 7)] + (rotate(W[hook(22, 89 - 2)], (u)15) ^ rotate(W[hook(22, 89 - 2)], (u)13) ^ (W[hook(22, 89 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 89) % 8)] += (K[hook(23, 89 % 64)] + Vals[hook(21, (135 - 89) % 8)] + W[hook(22, 89)] + (rotate(Vals[hook(21, (132 - 89) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 89) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 89) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 89) % 8)], Vals[hook(21, (133 - 89) % 8)], Vals[hook(21, (132 - 89) % 8)])));
    Vals[hook(21, (135 - 89) % 8)] = (K[hook(23, 89 % 64)] + Vals[hook(21, (135 - 89) % 8)] + W[hook(22, 89)] + (rotate(Vals[hook(21, (132 - 89) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 89) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 89) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 89) % 8)], Vals[hook(21, (133 - 89) % 8)], Vals[hook(21, (132 - 89) % 8)]))) + (rotate(Vals[hook(21, (128 - 89) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 89) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 89) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 89) % 8)], Vals[hook(21, (130 - 89) % 8)], (Vals[hook(21, (128 - 89) % 8)] ^ Vals[hook(21, (129 - 89) % 8)])));
  };
  W[hook(22, 90)] = W[hook(22, 90 - 7)] + (rotate(W[hook(22, 90 - 2)], (u)15) ^ rotate(W[hook(22, 90 - 2)], (u)13) ^ (W[hook(22, 90 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 90) % 8)] += (K[hook(23, 90 % 64)] + Vals[hook(21, (135 - 90) % 8)] + W[hook(22, 90)] + (rotate(Vals[hook(21, (132 - 90) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 90) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 90) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 90) % 8)], Vals[hook(21, (133 - 90) % 8)], Vals[hook(21, (132 - 90) % 8)])));
    Vals[hook(21, (135 - 90) % 8)] = (K[hook(23, 90 % 64)] + Vals[hook(21, (135 - 90) % 8)] + W[hook(22, 90)] + (rotate(Vals[hook(21, (132 - 90) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 90) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 90) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 90) % 8)], Vals[hook(21, (133 - 90) % 8)], Vals[hook(21, (132 - 90) % 8)]))) + (rotate(Vals[hook(21, (128 - 90) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 90) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 90) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 90) % 8)], Vals[hook(21, (130 - 90) % 8)], (Vals[hook(21, (128 - 90) % 8)] ^ Vals[hook(21, (129 - 90) % 8)])));
  };
  W[hook(22, 91)] = W[hook(22, 91 - 7)] + (rotate(W[hook(22, 91 - 2)], (u)15) ^ rotate(W[hook(22, 91 - 2)], (u)13) ^ (W[hook(22, 91 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 91) % 8)] += (K[hook(23, 91 % 64)] + Vals[hook(21, (135 - 91) % 8)] + W[hook(22, 91)] + (rotate(Vals[hook(21, (132 - 91) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 91) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 91) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 91) % 8)], Vals[hook(21, (133 - 91) % 8)], Vals[hook(21, (132 - 91) % 8)])));
    Vals[hook(21, (135 - 91) % 8)] = (K[hook(23, 91 % 64)] + Vals[hook(21, (135 - 91) % 8)] + W[hook(22, 91)] + (rotate(Vals[hook(21, (132 - 91) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 91) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 91) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 91) % 8)], Vals[hook(21, (133 - 91) % 8)], Vals[hook(21, (132 - 91) % 8)]))) + (rotate(Vals[hook(21, (128 - 91) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 91) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 91) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 91) % 8)], Vals[hook(21, (130 - 91) % 8)], (Vals[hook(21, (128 - 91) % 8)] ^ Vals[hook(21, (129 - 91) % 8)])));
  };
  W[hook(22, 92)] = W[hook(22, 92 - 7)] + (rotate(W[hook(22, 92 - 2)], (u)15) ^ rotate(W[hook(22, 92 - 2)], (u)13) ^ (W[hook(22, 92 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 92) % 8)] += (K[hook(23, 92 % 64)] + Vals[hook(21, (135 - 92) % 8)] + W[hook(22, 92)] + (rotate(Vals[hook(21, (132 - 92) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 92) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 92) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 92) % 8)], Vals[hook(21, (133 - 92) % 8)], Vals[hook(21, (132 - 92) % 8)])));
    Vals[hook(21, (135 - 92) % 8)] = (K[hook(23, 92 % 64)] + Vals[hook(21, (135 - 92) % 8)] + W[hook(22, 92)] + (rotate(Vals[hook(21, (132 - 92) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 92) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 92) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 92) % 8)], Vals[hook(21, (133 - 92) % 8)], Vals[hook(21, (132 - 92) % 8)]))) + (rotate(Vals[hook(21, (128 - 92) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 92) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 92) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 92) % 8)], Vals[hook(21, (130 - 92) % 8)], (Vals[hook(21, (128 - 92) % 8)] ^ Vals[hook(21, (129 - 92) % 8)])));
  };

  W[hook(22, 93)] = W[hook(22, 93 - 7)] + (rotate(W[hook(22, 93 - 2)], (u)15) ^ rotate(W[hook(22, 93 - 2)], (u)13) ^ (W[hook(22, 93 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 93) % 8)] += (K[hook(23, 93 % 64)] + Vals[hook(21, (135 - 93) % 8)] + W[hook(22, 93)] + (rotate(Vals[hook(21, (132 - 93) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 93) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 93) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 93) % 8)], Vals[hook(21, (133 - 93) % 8)], Vals[hook(21, (132 - 93) % 8)])));
    Vals[hook(21, (135 - 93) % 8)] = (K[hook(23, 93 % 64)] + Vals[hook(21, (135 - 93) % 8)] + W[hook(22, 93)] + (rotate(Vals[hook(21, (132 - 93) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 93) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 93) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 93) % 8)], Vals[hook(21, (133 - 93) % 8)], Vals[hook(21, (132 - 93) % 8)]))) + (rotate(Vals[hook(21, (128 - 93) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 93) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 93) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 93) % 8)], Vals[hook(21, (130 - 93) % 8)], (Vals[hook(21, (128 - 93) % 8)] ^ Vals[hook(21, (129 - 93) % 8)])));
  };

  W[hook(22, 94)] = (u)0x400022 + W[hook(22, 94 - 7)] + (rotate(W[hook(22, 94 - 2)], (u)15) ^ rotate(W[hook(22, 94 - 2)], (u)13) ^ (W[hook(22, 94 - 2)] >> 10U));
  {
    Vals[hook(21, (131 - 94) % 8)] += (K[hook(23, 94 % 64)] + Vals[hook(21, (135 - 94) % 8)] + W[hook(22, 94)] + (rotate(Vals[hook(21, (132 - 94) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 94) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 94) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 94) % 8)], Vals[hook(21, (133 - 94) % 8)], Vals[hook(21, (132 - 94) % 8)])));
    Vals[hook(21, (135 - 94) % 8)] = (K[hook(23, 94 % 64)] + Vals[hook(21, (135 - 94) % 8)] + W[hook(22, 94)] + (rotate(Vals[hook(21, (132 - 94) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 94) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 94) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 94) % 8)], Vals[hook(21, (133 - 94) % 8)], Vals[hook(21, (132 - 94) % 8)]))) + (rotate(Vals[hook(21, (128 - 94) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 94) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 94) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 94) % 8)], Vals[hook(21, (130 - 94) % 8)], (Vals[hook(21, (128 - 94) % 8)] ^ Vals[hook(21, (129 - 94) % 8)])));
  };

  (W[hook(22, 95)] = W[hook(22, 95 - 16)] + W[hook(22, 95 - 7)] + (rotate(W[hook(22, 95 - 15)], (u)25) ^ rotate(W[hook(22, 95 - 15)], (u)14) ^ (W[hook(22, 95 - 15)] >> 3U)) + (rotate(W[hook(22, 95 - 2)], (u)15) ^ rotate(W[hook(22, 95 - 2)], (u)13) ^ (W[hook(22, 95 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 95) % 8)] += (K[hook(23, 95 % 64)] + Vals[hook(21, (135 - 95) % 8)] + W[hook(22, 95)] + (rotate(Vals[hook(21, (132 - 95) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 95) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 95) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 95) % 8)], Vals[hook(21, (133 - 95) % 8)], Vals[hook(21, (132 - 95) % 8)])));
    Vals[hook(21, (135 - 95) % 8)] = (K[hook(23, 95 % 64)] + Vals[hook(21, (135 - 95) % 8)] + W[hook(22, 95)] + (rotate(Vals[hook(21, (132 - 95) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 95) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 95) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 95) % 8)], Vals[hook(21, (133 - 95) % 8)], Vals[hook(21, (132 - 95) % 8)]))) + (rotate(Vals[hook(21, (128 - 95) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 95) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 95) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 95) % 8)], Vals[hook(21, (130 - 95) % 8)], (Vals[hook(21, (128 - 95) % 8)] ^ Vals[hook(21, (129 - 95) % 8)])));
  };
  (W[hook(22, 96)] = W[hook(22, 96 - 16)] + W[hook(22, 96 - 7)] + (rotate(W[hook(22, 96 - 15)], (u)25) ^ rotate(W[hook(22, 96 - 15)], (u)14) ^ (W[hook(22, 96 - 15)] >> 3U)) + (rotate(W[hook(22, 96 - 2)], (u)15) ^ rotate(W[hook(22, 96 - 2)], (u)13) ^ (W[hook(22, 96 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 96) % 8)] += (K[hook(23, 96 % 64)] + Vals[hook(21, (135 - 96) % 8)] + W[hook(22, 96)] + (rotate(Vals[hook(21, (132 - 96) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 96) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 96) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 96) % 8)], Vals[hook(21, (133 - 96) % 8)], Vals[hook(21, (132 - 96) % 8)])));
    Vals[hook(21, (135 - 96) % 8)] = (K[hook(23, 96 % 64)] + Vals[hook(21, (135 - 96) % 8)] + W[hook(22, 96)] + (rotate(Vals[hook(21, (132 - 96) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 96) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 96) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 96) % 8)], Vals[hook(21, (133 - 96) % 8)], Vals[hook(21, (132 - 96) % 8)]))) + (rotate(Vals[hook(21, (128 - 96) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 96) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 96) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 96) % 8)], Vals[hook(21, (130 - 96) % 8)], (Vals[hook(21, (128 - 96) % 8)] ^ Vals[hook(21, (129 - 96) % 8)])));
  };
  (W[hook(22, 97)] = W[hook(22, 97 - 16)] + W[hook(22, 97 - 7)] + (rotate(W[hook(22, 97 - 15)], (u)25) ^ rotate(W[hook(22, 97 - 15)], (u)14) ^ (W[hook(22, 97 - 15)] >> 3U)) + (rotate(W[hook(22, 97 - 2)], (u)15) ^ rotate(W[hook(22, 97 - 2)], (u)13) ^ (W[hook(22, 97 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 97) % 8)] += (K[hook(23, 97 % 64)] + Vals[hook(21, (135 - 97) % 8)] + W[hook(22, 97)] + (rotate(Vals[hook(21, (132 - 97) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 97) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 97) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 97) % 8)], Vals[hook(21, (133 - 97) % 8)], Vals[hook(21, (132 - 97) % 8)])));
    Vals[hook(21, (135 - 97) % 8)] = (K[hook(23, 97 % 64)] + Vals[hook(21, (135 - 97) % 8)] + W[hook(22, 97)] + (rotate(Vals[hook(21, (132 - 97) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 97) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 97) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 97) % 8)], Vals[hook(21, (133 - 97) % 8)], Vals[hook(21, (132 - 97) % 8)]))) + (rotate(Vals[hook(21, (128 - 97) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 97) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 97) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 97) % 8)], Vals[hook(21, (130 - 97) % 8)], (Vals[hook(21, (128 - 97) % 8)] ^ Vals[hook(21, (129 - 97) % 8)])));
  };
  (W[hook(22, 98)] = W[hook(22, 98 - 16)] + W[hook(22, 98 - 7)] + (rotate(W[hook(22, 98 - 15)], (u)25) ^ rotate(W[hook(22, 98 - 15)], (u)14) ^ (W[hook(22, 98 - 15)] >> 3U)) + (rotate(W[hook(22, 98 - 2)], (u)15) ^ rotate(W[hook(22, 98 - 2)], (u)13) ^ (W[hook(22, 98 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 98) % 8)] += (K[hook(23, 98 % 64)] + Vals[hook(21, (135 - 98) % 8)] + W[hook(22, 98)] + (rotate(Vals[hook(21, (132 - 98) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 98) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 98) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 98) % 8)], Vals[hook(21, (133 - 98) % 8)], Vals[hook(21, (132 - 98) % 8)])));
    Vals[hook(21, (135 - 98) % 8)] = (K[hook(23, 98 % 64)] + Vals[hook(21, (135 - 98) % 8)] + W[hook(22, 98)] + (rotate(Vals[hook(21, (132 - 98) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 98) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 98) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 98) % 8)], Vals[hook(21, (133 - 98) % 8)], Vals[hook(21, (132 - 98) % 8)]))) + (rotate(Vals[hook(21, (128 - 98) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 98) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 98) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 98) % 8)], Vals[hook(21, (130 - 98) % 8)], (Vals[hook(21, (128 - 98) % 8)] ^ Vals[hook(21, (129 - 98) % 8)])));
  };
  (W[hook(22, 99)] = W[hook(22, 99 - 16)] + W[hook(22, 99 - 7)] + (rotate(W[hook(22, 99 - 15)], (u)25) ^ rotate(W[hook(22, 99 - 15)], (u)14) ^ (W[hook(22, 99 - 15)] >> 3U)) + (rotate(W[hook(22, 99 - 2)], (u)15) ^ rotate(W[hook(22, 99 - 2)], (u)13) ^ (W[hook(22, 99 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 99) % 8)] += (K[hook(23, 99 % 64)] + Vals[hook(21, (135 - 99) % 8)] + W[hook(22, 99)] + (rotate(Vals[hook(21, (132 - 99) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 99) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 99) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 99) % 8)], Vals[hook(21, (133 - 99) % 8)], Vals[hook(21, (132 - 99) % 8)])));
    Vals[hook(21, (135 - 99) % 8)] = (K[hook(23, 99 % 64)] + Vals[hook(21, (135 - 99) % 8)] + W[hook(22, 99)] + (rotate(Vals[hook(21, (132 - 99) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 99) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 99) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 99) % 8)], Vals[hook(21, (133 - 99) % 8)], Vals[hook(21, (132 - 99) % 8)]))) + (rotate(Vals[hook(21, (128 - 99) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 99) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 99) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 99) % 8)], Vals[hook(21, (130 - 99) % 8)], (Vals[hook(21, (128 - 99) % 8)] ^ Vals[hook(21, (129 - 99) % 8)])));
  };
  (W[hook(22, 100)] = W[hook(22, 100 - 16)] + W[hook(22, 100 - 7)] + (rotate(W[hook(22, 100 - 15)], (u)25) ^ rotate(W[hook(22, 100 - 15)], (u)14) ^ (W[hook(22, 100 - 15)] >> 3U)) + (rotate(W[hook(22, 100 - 2)], (u)15) ^ rotate(W[hook(22, 100 - 2)], (u)13) ^ (W[hook(22, 100 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 100) % 8)] += (K[hook(23, 100 % 64)] + Vals[hook(21, (135 - 100) % 8)] + W[hook(22, 100)] + (rotate(Vals[hook(21, (132 - 100) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 100) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 100) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 100) % 8)], Vals[hook(21, (133 - 100) % 8)], Vals[hook(21, (132 - 100) % 8)])));
    Vals[hook(21, (135 - 100) % 8)] = (K[hook(23, 100 % 64)] + Vals[hook(21, (135 - 100) % 8)] + W[hook(22, 100)] + (rotate(Vals[hook(21, (132 - 100) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 100) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 100) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 100) % 8)], Vals[hook(21, (133 - 100) % 8)], Vals[hook(21, (132 - 100) % 8)]))) + (rotate(Vals[hook(21, (128 - 100) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 100) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 100) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 100) % 8)], Vals[hook(21, (130 - 100) % 8)], (Vals[hook(21, (128 - 100) % 8)] ^ Vals[hook(21, (129 - 100) % 8)])));
  };
  (W[hook(22, 101)] = W[hook(22, 101 - 16)] + W[hook(22, 101 - 7)] + (rotate(W[hook(22, 101 - 15)], (u)25) ^ rotate(W[hook(22, 101 - 15)], (u)14) ^ (W[hook(22, 101 - 15)] >> 3U)) + (rotate(W[hook(22, 101 - 2)], (u)15) ^ rotate(W[hook(22, 101 - 2)], (u)13) ^ (W[hook(22, 101 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 101) % 8)] += (K[hook(23, 101 % 64)] + Vals[hook(21, (135 - 101) % 8)] + W[hook(22, 101)] + (rotate(Vals[hook(21, (132 - 101) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 101) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 101) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 101) % 8)], Vals[hook(21, (133 - 101) % 8)], Vals[hook(21, (132 - 101) % 8)])));
    Vals[hook(21, (135 - 101) % 8)] = (K[hook(23, 101 % 64)] + Vals[hook(21, (135 - 101) % 8)] + W[hook(22, 101)] + (rotate(Vals[hook(21, (132 - 101) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 101) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 101) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 101) % 8)], Vals[hook(21, (133 - 101) % 8)], Vals[hook(21, (132 - 101) % 8)]))) + (rotate(Vals[hook(21, (128 - 101) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 101) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 101) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 101) % 8)], Vals[hook(21, (130 - 101) % 8)], (Vals[hook(21, (128 - 101) % 8)] ^ Vals[hook(21, (129 - 101) % 8)])));
  };
  (W[hook(22, 102)] = W[hook(22, 102 - 16)] + W[hook(22, 102 - 7)] + (rotate(W[hook(22, 102 - 15)], (u)25) ^ rotate(W[hook(22, 102 - 15)], (u)14) ^ (W[hook(22, 102 - 15)] >> 3U)) + (rotate(W[hook(22, 102 - 2)], (u)15) ^ rotate(W[hook(22, 102 - 2)], (u)13) ^ (W[hook(22, 102 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 102) % 8)] += (K[hook(23, 102 % 64)] + Vals[hook(21, (135 - 102) % 8)] + W[hook(22, 102)] + (rotate(Vals[hook(21, (132 - 102) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 102) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 102) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 102) % 8)], Vals[hook(21, (133 - 102) % 8)], Vals[hook(21, (132 - 102) % 8)])));
    Vals[hook(21, (135 - 102) % 8)] = (K[hook(23, 102 % 64)] + Vals[hook(21, (135 - 102) % 8)] + W[hook(22, 102)] + (rotate(Vals[hook(21, (132 - 102) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 102) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 102) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 102) % 8)], Vals[hook(21, (133 - 102) % 8)], Vals[hook(21, (132 - 102) % 8)]))) + (rotate(Vals[hook(21, (128 - 102) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 102) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 102) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 102) % 8)], Vals[hook(21, (130 - 102) % 8)], (Vals[hook(21, (128 - 102) % 8)] ^ Vals[hook(21, (129 - 102) % 8)])));
  };
  (W[hook(22, 103)] = W[hook(22, 103 - 16)] + W[hook(22, 103 - 7)] + (rotate(W[hook(22, 103 - 15)], (u)25) ^ rotate(W[hook(22, 103 - 15)], (u)14) ^ (W[hook(22, 103 - 15)] >> 3U)) + (rotate(W[hook(22, 103 - 2)], (u)15) ^ rotate(W[hook(22, 103 - 2)], (u)13) ^ (W[hook(22, 103 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 103) % 8)] += (K[hook(23, 103 % 64)] + Vals[hook(21, (135 - 103) % 8)] + W[hook(22, 103)] + (rotate(Vals[hook(21, (132 - 103) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 103) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 103) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 103) % 8)], Vals[hook(21, (133 - 103) % 8)], Vals[hook(21, (132 - 103) % 8)])));
    Vals[hook(21, (135 - 103) % 8)] = (K[hook(23, 103 % 64)] + Vals[hook(21, (135 - 103) % 8)] + W[hook(22, 103)] + (rotate(Vals[hook(21, (132 - 103) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 103) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 103) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 103) % 8)], Vals[hook(21, (133 - 103) % 8)], Vals[hook(21, (132 - 103) % 8)]))) + (rotate(Vals[hook(21, (128 - 103) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 103) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 103) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 103) % 8)], Vals[hook(21, (130 - 103) % 8)], (Vals[hook(21, (128 - 103) % 8)] ^ Vals[hook(21, (129 - 103) % 8)])));
  };
  (W[hook(22, 104)] = W[hook(22, 104 - 16)] + W[hook(22, 104 - 7)] + (rotate(W[hook(22, 104 - 15)], (u)25) ^ rotate(W[hook(22, 104 - 15)], (u)14) ^ (W[hook(22, 104 - 15)] >> 3U)) + (rotate(W[hook(22, 104 - 2)], (u)15) ^ rotate(W[hook(22, 104 - 2)], (u)13) ^ (W[hook(22, 104 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 104) % 8)] += (K[hook(23, 104 % 64)] + Vals[hook(21, (135 - 104) % 8)] + W[hook(22, 104)] + (rotate(Vals[hook(21, (132 - 104) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 104) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 104) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 104) % 8)], Vals[hook(21, (133 - 104) % 8)], Vals[hook(21, (132 - 104) % 8)])));
    Vals[hook(21, (135 - 104) % 8)] = (K[hook(23, 104 % 64)] + Vals[hook(21, (135 - 104) % 8)] + W[hook(22, 104)] + (rotate(Vals[hook(21, (132 - 104) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 104) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 104) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 104) % 8)], Vals[hook(21, (133 - 104) % 8)], Vals[hook(21, (132 - 104) % 8)]))) + (rotate(Vals[hook(21, (128 - 104) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 104) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 104) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 104) % 8)], Vals[hook(21, (130 - 104) % 8)], (Vals[hook(21, (128 - 104) % 8)] ^ Vals[hook(21, (129 - 104) % 8)])));
  };
  (W[hook(22, 105)] = W[hook(22, 105 - 16)] + W[hook(22, 105 - 7)] + (rotate(W[hook(22, 105 - 15)], (u)25) ^ rotate(W[hook(22, 105 - 15)], (u)14) ^ (W[hook(22, 105 - 15)] >> 3U)) + (rotate(W[hook(22, 105 - 2)], (u)15) ^ rotate(W[hook(22, 105 - 2)], (u)13) ^ (W[hook(22, 105 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 105) % 8)] += (K[hook(23, 105 % 64)] + Vals[hook(21, (135 - 105) % 8)] + W[hook(22, 105)] + (rotate(Vals[hook(21, (132 - 105) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 105) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 105) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 105) % 8)], Vals[hook(21, (133 - 105) % 8)], Vals[hook(21, (132 - 105) % 8)])));
    Vals[hook(21, (135 - 105) % 8)] = (K[hook(23, 105 % 64)] + Vals[hook(21, (135 - 105) % 8)] + W[hook(22, 105)] + (rotate(Vals[hook(21, (132 - 105) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 105) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 105) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 105) % 8)], Vals[hook(21, (133 - 105) % 8)], Vals[hook(21, (132 - 105) % 8)]))) + (rotate(Vals[hook(21, (128 - 105) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 105) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 105) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 105) % 8)], Vals[hook(21, (130 - 105) % 8)], (Vals[hook(21, (128 - 105) % 8)] ^ Vals[hook(21, (129 - 105) % 8)])));
  };
  (W[hook(22, 106)] = W[hook(22, 106 - 16)] + W[hook(22, 106 - 7)] + (rotate(W[hook(22, 106 - 15)], (u)25) ^ rotate(W[hook(22, 106 - 15)], (u)14) ^ (W[hook(22, 106 - 15)] >> 3U)) + (rotate(W[hook(22, 106 - 2)], (u)15) ^ rotate(W[hook(22, 106 - 2)], (u)13) ^ (W[hook(22, 106 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 106) % 8)] += (K[hook(23, 106 % 64)] + Vals[hook(21, (135 - 106) % 8)] + W[hook(22, 106)] + (rotate(Vals[hook(21, (132 - 106) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 106) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 106) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 106) % 8)], Vals[hook(21, (133 - 106) % 8)], Vals[hook(21, (132 - 106) % 8)])));
    Vals[hook(21, (135 - 106) % 8)] = (K[hook(23, 106 % 64)] + Vals[hook(21, (135 - 106) % 8)] + W[hook(22, 106)] + (rotate(Vals[hook(21, (132 - 106) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 106) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 106) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 106) % 8)], Vals[hook(21, (133 - 106) % 8)], Vals[hook(21, (132 - 106) % 8)]))) + (rotate(Vals[hook(21, (128 - 106) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 106) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 106) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 106) % 8)], Vals[hook(21, (130 - 106) % 8)], (Vals[hook(21, (128 - 106) % 8)] ^ Vals[hook(21, (129 - 106) % 8)])));
  };
  (W[hook(22, 107)] = W[hook(22, 107 - 16)] + W[hook(22, 107 - 7)] + (rotate(W[hook(22, 107 - 15)], (u)25) ^ rotate(W[hook(22, 107 - 15)], (u)14) ^ (W[hook(22, 107 - 15)] >> 3U)) + (rotate(W[hook(22, 107 - 2)], (u)15) ^ rotate(W[hook(22, 107 - 2)], (u)13) ^ (W[hook(22, 107 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 107) % 8)] += (K[hook(23, 107 % 64)] + Vals[hook(21, (135 - 107) % 8)] + W[hook(22, 107)] + (rotate(Vals[hook(21, (132 - 107) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 107) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 107) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 107) % 8)], Vals[hook(21, (133 - 107) % 8)], Vals[hook(21, (132 - 107) % 8)])));
    Vals[hook(21, (135 - 107) % 8)] = (K[hook(23, 107 % 64)] + Vals[hook(21, (135 - 107) % 8)] + W[hook(22, 107)] + (rotate(Vals[hook(21, (132 - 107) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 107) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 107) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 107) % 8)], Vals[hook(21, (133 - 107) % 8)], Vals[hook(21, (132 - 107) % 8)]))) + (rotate(Vals[hook(21, (128 - 107) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 107) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 107) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 107) % 8)], Vals[hook(21, (130 - 107) % 8)], (Vals[hook(21, (128 - 107) % 8)] ^ Vals[hook(21, (129 - 107) % 8)])));
  };
  (W[hook(22, 108)] = W[hook(22, 108 - 16)] + W[hook(22, 108 - 7)] + (rotate(W[hook(22, 108 - 15)], (u)25) ^ rotate(W[hook(22, 108 - 15)], (u)14) ^ (W[hook(22, 108 - 15)] >> 3U)) + (rotate(W[hook(22, 108 - 2)], (u)15) ^ rotate(W[hook(22, 108 - 2)], (u)13) ^ (W[hook(22, 108 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 108) % 8)] += (K[hook(23, 108 % 64)] + Vals[hook(21, (135 - 108) % 8)] + W[hook(22, 108)] + (rotate(Vals[hook(21, (132 - 108) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 108) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 108) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 108) % 8)], Vals[hook(21, (133 - 108) % 8)], Vals[hook(21, (132 - 108) % 8)])));
    Vals[hook(21, (135 - 108) % 8)] = (K[hook(23, 108 % 64)] + Vals[hook(21, (135 - 108) % 8)] + W[hook(22, 108)] + (rotate(Vals[hook(21, (132 - 108) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 108) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 108) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 108) % 8)], Vals[hook(21, (133 - 108) % 8)], Vals[hook(21, (132 - 108) % 8)]))) + (rotate(Vals[hook(21, (128 - 108) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 108) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 108) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 108) % 8)], Vals[hook(21, (130 - 108) % 8)], (Vals[hook(21, (128 - 108) % 8)] ^ Vals[hook(21, (129 - 108) % 8)])));
  };
  (W[hook(22, 109)] = W[hook(22, 109 - 16)] + W[hook(22, 109 - 7)] + (rotate(W[hook(22, 109 - 15)], (u)25) ^ rotate(W[hook(22, 109 - 15)], (u)14) ^ (W[hook(22, 109 - 15)] >> 3U)) + (rotate(W[hook(22, 109 - 2)], (u)15) ^ rotate(W[hook(22, 109 - 2)], (u)13) ^ (W[hook(22, 109 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 109) % 8)] += (K[hook(23, 109 % 64)] + Vals[hook(21, (135 - 109) % 8)] + W[hook(22, 109)] + (rotate(Vals[hook(21, (132 - 109) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 109) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 109) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 109) % 8)], Vals[hook(21, (133 - 109) % 8)], Vals[hook(21, (132 - 109) % 8)])));
    Vals[hook(21, (135 - 109) % 8)] = (K[hook(23, 109 % 64)] + Vals[hook(21, (135 - 109) % 8)] + W[hook(22, 109)] + (rotate(Vals[hook(21, (132 - 109) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 109) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 109) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 109) % 8)], Vals[hook(21, (133 - 109) % 8)], Vals[hook(21, (132 - 109) % 8)]))) + (rotate(Vals[hook(21, (128 - 109) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 109) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 109) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 109) % 8)], Vals[hook(21, (130 - 109) % 8)], (Vals[hook(21, (128 - 109) % 8)] ^ Vals[hook(21, (129 - 109) % 8)])));
  };
  (W[hook(22, 110)] = W[hook(22, 110 - 16)] + W[hook(22, 110 - 7)] + (rotate(W[hook(22, 110 - 15)], (u)25) ^ rotate(W[hook(22, 110 - 15)], (u)14) ^ (W[hook(22, 110 - 15)] >> 3U)) + (rotate(W[hook(22, 110 - 2)], (u)15) ^ rotate(W[hook(22, 110 - 2)], (u)13) ^ (W[hook(22, 110 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 110) % 8)] += (K[hook(23, 110 % 64)] + Vals[hook(21, (135 - 110) % 8)] + W[hook(22, 110)] + (rotate(Vals[hook(21, (132 - 110) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 110) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 110) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 110) % 8)], Vals[hook(21, (133 - 110) % 8)], Vals[hook(21, (132 - 110) % 8)])));
    Vals[hook(21, (135 - 110) % 8)] = (K[hook(23, 110 % 64)] + Vals[hook(21, (135 - 110) % 8)] + W[hook(22, 110)] + (rotate(Vals[hook(21, (132 - 110) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 110) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 110) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 110) % 8)], Vals[hook(21, (133 - 110) % 8)], Vals[hook(21, (132 - 110) % 8)]))) + (rotate(Vals[hook(21, (128 - 110) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 110) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 110) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 110) % 8)], Vals[hook(21, (130 - 110) % 8)], (Vals[hook(21, (128 - 110) % 8)] ^ Vals[hook(21, (129 - 110) % 8)])));
  };
  (W[hook(22, 111)] = W[hook(22, 111 - 16)] + W[hook(22, 111 - 7)] + (rotate(W[hook(22, 111 - 15)], (u)25) ^ rotate(W[hook(22, 111 - 15)], (u)14) ^ (W[hook(22, 111 - 15)] >> 3U)) + (rotate(W[hook(22, 111 - 2)], (u)15) ^ rotate(W[hook(22, 111 - 2)], (u)13) ^ (W[hook(22, 111 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 111) % 8)] += (K[hook(23, 111 % 64)] + Vals[hook(21, (135 - 111) % 8)] + W[hook(22, 111)] + (rotate(Vals[hook(21, (132 - 111) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 111) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 111) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 111) % 8)], Vals[hook(21, (133 - 111) % 8)], Vals[hook(21, (132 - 111) % 8)])));
    Vals[hook(21, (135 - 111) % 8)] = (K[hook(23, 111 % 64)] + Vals[hook(21, (135 - 111) % 8)] + W[hook(22, 111)] + (rotate(Vals[hook(21, (132 - 111) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 111) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 111) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 111) % 8)], Vals[hook(21, (133 - 111) % 8)], Vals[hook(21, (132 - 111) % 8)]))) + (rotate(Vals[hook(21, (128 - 111) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 111) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 111) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 111) % 8)], Vals[hook(21, (130 - 111) % 8)], (Vals[hook(21, (128 - 111) % 8)] ^ Vals[hook(21, (129 - 111) % 8)])));
  };
  (W[hook(22, 112)] = W[hook(22, 112 - 16)] + W[hook(22, 112 - 7)] + (rotate(W[hook(22, 112 - 15)], (u)25) ^ rotate(W[hook(22, 112 - 15)], (u)14) ^ (W[hook(22, 112 - 15)] >> 3U)) + (rotate(W[hook(22, 112 - 2)], (u)15) ^ rotate(W[hook(22, 112 - 2)], (u)13) ^ (W[hook(22, 112 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 112) % 8)] += (K[hook(23, 112 % 64)] + Vals[hook(21, (135 - 112) % 8)] + W[hook(22, 112)] + (rotate(Vals[hook(21, (132 - 112) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 112) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 112) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 112) % 8)], Vals[hook(21, (133 - 112) % 8)], Vals[hook(21, (132 - 112) % 8)])));
    Vals[hook(21, (135 - 112) % 8)] = (K[hook(23, 112 % 64)] + Vals[hook(21, (135 - 112) % 8)] + W[hook(22, 112)] + (rotate(Vals[hook(21, (132 - 112) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 112) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 112) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 112) % 8)], Vals[hook(21, (133 - 112) % 8)], Vals[hook(21, (132 - 112) % 8)]))) + (rotate(Vals[hook(21, (128 - 112) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 112) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 112) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 112) % 8)], Vals[hook(21, (130 - 112) % 8)], (Vals[hook(21, (128 - 112) % 8)] ^ Vals[hook(21, (129 - 112) % 8)])));
  };
  (W[hook(22, 113)] = W[hook(22, 113 - 16)] + W[hook(22, 113 - 7)] + (rotate(W[hook(22, 113 - 15)], (u)25) ^ rotate(W[hook(22, 113 - 15)], (u)14) ^ (W[hook(22, 113 - 15)] >> 3U)) + (rotate(W[hook(22, 113 - 2)], (u)15) ^ rotate(W[hook(22, 113 - 2)], (u)13) ^ (W[hook(22, 113 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 113) % 8)] += (K[hook(23, 113 % 64)] + Vals[hook(21, (135 - 113) % 8)] + W[hook(22, 113)] + (rotate(Vals[hook(21, (132 - 113) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 113) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 113) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 113) % 8)], Vals[hook(21, (133 - 113) % 8)], Vals[hook(21, (132 - 113) % 8)])));
    Vals[hook(21, (135 - 113) % 8)] = (K[hook(23, 113 % 64)] + Vals[hook(21, (135 - 113) % 8)] + W[hook(22, 113)] + (rotate(Vals[hook(21, (132 - 113) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 113) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 113) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 113) % 8)], Vals[hook(21, (133 - 113) % 8)], Vals[hook(21, (132 - 113) % 8)]))) + (rotate(Vals[hook(21, (128 - 113) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 113) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 113) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 113) % 8)], Vals[hook(21, (130 - 113) % 8)], (Vals[hook(21, (128 - 113) % 8)] ^ Vals[hook(21, (129 - 113) % 8)])));
  };
  (W[hook(22, 114)] = W[hook(22, 114 - 16)] + W[hook(22, 114 - 7)] + (rotate(W[hook(22, 114 - 15)], (u)25) ^ rotate(W[hook(22, 114 - 15)], (u)14) ^ (W[hook(22, 114 - 15)] >> 3U)) + (rotate(W[hook(22, 114 - 2)], (u)15) ^ rotate(W[hook(22, 114 - 2)], (u)13) ^ (W[hook(22, 114 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 114) % 8)] += (K[hook(23, 114 % 64)] + Vals[hook(21, (135 - 114) % 8)] + W[hook(22, 114)] + (rotate(Vals[hook(21, (132 - 114) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 114) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 114) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 114) % 8)], Vals[hook(21, (133 - 114) % 8)], Vals[hook(21, (132 - 114) % 8)])));
    Vals[hook(21, (135 - 114) % 8)] = (K[hook(23, 114 % 64)] + Vals[hook(21, (135 - 114) % 8)] + W[hook(22, 114)] + (rotate(Vals[hook(21, (132 - 114) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 114) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 114) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 114) % 8)], Vals[hook(21, (133 - 114) % 8)], Vals[hook(21, (132 - 114) % 8)]))) + (rotate(Vals[hook(21, (128 - 114) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 114) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 114) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 114) % 8)], Vals[hook(21, (130 - 114) % 8)], (Vals[hook(21, (128 - 114) % 8)] ^ Vals[hook(21, (129 - 114) % 8)])));
  };
  (W[hook(22, 115)] = W[hook(22, 115 - 16)] + W[hook(22, 115 - 7)] + (rotate(W[hook(22, 115 - 15)], (u)25) ^ rotate(W[hook(22, 115 - 15)], (u)14) ^ (W[hook(22, 115 - 15)] >> 3U)) + (rotate(W[hook(22, 115 - 2)], (u)15) ^ rotate(W[hook(22, 115 - 2)], (u)13) ^ (W[hook(22, 115 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 115) % 8)] += (K[hook(23, 115 % 64)] + Vals[hook(21, (135 - 115) % 8)] + W[hook(22, 115)] + (rotate(Vals[hook(21, (132 - 115) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 115) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 115) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 115) % 8)], Vals[hook(21, (133 - 115) % 8)], Vals[hook(21, (132 - 115) % 8)])));
    Vals[hook(21, (135 - 115) % 8)] = (K[hook(23, 115 % 64)] + Vals[hook(21, (135 - 115) % 8)] + W[hook(22, 115)] + (rotate(Vals[hook(21, (132 - 115) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 115) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 115) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 115) % 8)], Vals[hook(21, (133 - 115) % 8)], Vals[hook(21, (132 - 115) % 8)]))) + (rotate(Vals[hook(21, (128 - 115) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 115) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 115) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 115) % 8)], Vals[hook(21, (130 - 115) % 8)], (Vals[hook(21, (128 - 115) % 8)] ^ Vals[hook(21, (129 - 115) % 8)])));
  };
  (W[hook(22, 116)] = W[hook(22, 116 - 16)] + W[hook(22, 116 - 7)] + (rotate(W[hook(22, 116 - 15)], (u)25) ^ rotate(W[hook(22, 116 - 15)], (u)14) ^ (W[hook(22, 116 - 15)] >> 3U)) + (rotate(W[hook(22, 116 - 2)], (u)15) ^ rotate(W[hook(22, 116 - 2)], (u)13) ^ (W[hook(22, 116 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 116) % 8)] += (K[hook(23, 116 % 64)] + Vals[hook(21, (135 - 116) % 8)] + W[hook(22, 116)] + (rotate(Vals[hook(21, (132 - 116) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 116) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 116) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 116) % 8)], Vals[hook(21, (133 - 116) % 8)], Vals[hook(21, (132 - 116) % 8)])));
    Vals[hook(21, (135 - 116) % 8)] = (K[hook(23, 116 % 64)] + Vals[hook(21, (135 - 116) % 8)] + W[hook(22, 116)] + (rotate(Vals[hook(21, (132 - 116) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 116) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 116) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 116) % 8)], Vals[hook(21, (133 - 116) % 8)], Vals[hook(21, (132 - 116) % 8)]))) + (rotate(Vals[hook(21, (128 - 116) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 116) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 116) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 116) % 8)], Vals[hook(21, (130 - 116) % 8)], (Vals[hook(21, (128 - 116) % 8)] ^ Vals[hook(21, (129 - 116) % 8)])));
  };
  (W[hook(22, 117)] = W[hook(22, 117 - 16)] + W[hook(22, 117 - 7)] + (rotate(W[hook(22, 117 - 15)], (u)25) ^ rotate(W[hook(22, 117 - 15)], (u)14) ^ (W[hook(22, 117 - 15)] >> 3U)) + (rotate(W[hook(22, 117 - 2)], (u)15) ^ rotate(W[hook(22, 117 - 2)], (u)13) ^ (W[hook(22, 117 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 117) % 8)] += (K[hook(23, 117 % 64)] + Vals[hook(21, (135 - 117) % 8)] + W[hook(22, 117)] + (rotate(Vals[hook(21, (132 - 117) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 117) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 117) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 117) % 8)], Vals[hook(21, (133 - 117) % 8)], Vals[hook(21, (132 - 117) % 8)])));
    Vals[hook(21, (135 - 117) % 8)] = (K[hook(23, 117 % 64)] + Vals[hook(21, (135 - 117) % 8)] + W[hook(22, 117)] + (rotate(Vals[hook(21, (132 - 117) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 117) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 117) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 117) % 8)], Vals[hook(21, (133 - 117) % 8)], Vals[hook(21, (132 - 117) % 8)]))) + (rotate(Vals[hook(21, (128 - 117) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 117) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 117) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 117) % 8)], Vals[hook(21, (130 - 117) % 8)], (Vals[hook(21, (128 - 117) % 8)] ^ Vals[hook(21, (129 - 117) % 8)])));
  };
  (W[hook(22, 118)] = W[hook(22, 118 - 16)] + W[hook(22, 118 - 7)] + (rotate(W[hook(22, 118 - 15)], (u)25) ^ rotate(W[hook(22, 118 - 15)], (u)14) ^ (W[hook(22, 118 - 15)] >> 3U)) + (rotate(W[hook(22, 118 - 2)], (u)15) ^ rotate(W[hook(22, 118 - 2)], (u)13) ^ (W[hook(22, 118 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 118) % 8)] += (K[hook(23, 118 % 64)] + Vals[hook(21, (135 - 118) % 8)] + W[hook(22, 118)] + (rotate(Vals[hook(21, (132 - 118) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 118) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 118) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 118) % 8)], Vals[hook(21, (133 - 118) % 8)], Vals[hook(21, (132 - 118) % 8)])));
    Vals[hook(21, (135 - 118) % 8)] = (K[hook(23, 118 % 64)] + Vals[hook(21, (135 - 118) % 8)] + W[hook(22, 118)] + (rotate(Vals[hook(21, (132 - 118) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 118) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 118) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 118) % 8)], Vals[hook(21, (133 - 118) % 8)], Vals[hook(21, (132 - 118) % 8)]))) + (rotate(Vals[hook(21, (128 - 118) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 118) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 118) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 118) % 8)], Vals[hook(21, (130 - 118) % 8)], (Vals[hook(21, (128 - 118) % 8)] ^ Vals[hook(21, (129 - 118) % 8)])));
  };
  (W[hook(22, 119)] = W[hook(22, 119 - 16)] + W[hook(22, 119 - 7)] + (rotate(W[hook(22, 119 - 15)], (u)25) ^ rotate(W[hook(22, 119 - 15)], (u)14) ^ (W[hook(22, 119 - 15)] >> 3U)) + (rotate(W[hook(22, 119 - 2)], (u)15) ^ rotate(W[hook(22, 119 - 2)], (u)13) ^ (W[hook(22, 119 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 119) % 8)] += (K[hook(23, 119 % 64)] + Vals[hook(21, (135 - 119) % 8)] + W[hook(22, 119)] + (rotate(Vals[hook(21, (132 - 119) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 119) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 119) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 119) % 8)], Vals[hook(21, (133 - 119) % 8)], Vals[hook(21, (132 - 119) % 8)])));
    Vals[hook(21, (135 - 119) % 8)] = (K[hook(23, 119 % 64)] + Vals[hook(21, (135 - 119) % 8)] + W[hook(22, 119)] + (rotate(Vals[hook(21, (132 - 119) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 119) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 119) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 119) % 8)], Vals[hook(21, (133 - 119) % 8)], Vals[hook(21, (132 - 119) % 8)]))) + (rotate(Vals[hook(21, (128 - 119) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 119) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 119) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 119) % 8)], Vals[hook(21, (130 - 119) % 8)], (Vals[hook(21, (128 - 119) % 8)] ^ Vals[hook(21, (129 - 119) % 8)])));
  };
  (W[hook(22, 120)] = W[hook(22, 120 - 16)] + W[hook(22, 120 - 7)] + (rotate(W[hook(22, 120 - 15)], (u)25) ^ rotate(W[hook(22, 120 - 15)], (u)14) ^ (W[hook(22, 120 - 15)] >> 3U)) + (rotate(W[hook(22, 120 - 2)], (u)15) ^ rotate(W[hook(22, 120 - 2)], (u)13) ^ (W[hook(22, 120 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 120) % 8)] += (K[hook(23, 120 % 64)] + Vals[hook(21, (135 - 120) % 8)] + W[hook(22, 120)] + (rotate(Vals[hook(21, (132 - 120) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 120) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 120) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 120) % 8)], Vals[hook(21, (133 - 120) % 8)], Vals[hook(21, (132 - 120) % 8)])));
    Vals[hook(21, (135 - 120) % 8)] = (K[hook(23, 120 % 64)] + Vals[hook(21, (135 - 120) % 8)] + W[hook(22, 120)] + (rotate(Vals[hook(21, (132 - 120) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 120) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 120) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 120) % 8)], Vals[hook(21, (133 - 120) % 8)], Vals[hook(21, (132 - 120) % 8)]))) + (rotate(Vals[hook(21, (128 - 120) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 120) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 120) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 120) % 8)], Vals[hook(21, (130 - 120) % 8)], (Vals[hook(21, (128 - 120) % 8)] ^ Vals[hook(21, (129 - 120) % 8)])));
  };
  (W[hook(22, 121)] = W[hook(22, 121 - 16)] + W[hook(22, 121 - 7)] + (rotate(W[hook(22, 121 - 15)], (u)25) ^ rotate(W[hook(22, 121 - 15)], (u)14) ^ (W[hook(22, 121 - 15)] >> 3U)) + (rotate(W[hook(22, 121 - 2)], (u)15) ^ rotate(W[hook(22, 121 - 2)], (u)13) ^ (W[hook(22, 121 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 121) % 8)] += (K[hook(23, 121 % 64)] + Vals[hook(21, (135 - 121) % 8)] + W[hook(22, 121)] + (rotate(Vals[hook(21, (132 - 121) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 121) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 121) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 121) % 8)], Vals[hook(21, (133 - 121) % 8)], Vals[hook(21, (132 - 121) % 8)])));
    Vals[hook(21, (135 - 121) % 8)] = (K[hook(23, 121 % 64)] + Vals[hook(21, (135 - 121) % 8)] + W[hook(22, 121)] + (rotate(Vals[hook(21, (132 - 121) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 121) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 121) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 121) % 8)], Vals[hook(21, (133 - 121) % 8)], Vals[hook(21, (132 - 121) % 8)]))) + (rotate(Vals[hook(21, (128 - 121) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 121) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 121) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 121) % 8)], Vals[hook(21, (130 - 121) % 8)], (Vals[hook(21, (128 - 121) % 8)] ^ Vals[hook(21, (129 - 121) % 8)])));
  };
  (W[hook(22, 122)] = W[hook(22, 122 - 16)] + W[hook(22, 122 - 7)] + (rotate(W[hook(22, 122 - 15)], (u)25) ^ rotate(W[hook(22, 122 - 15)], (u)14) ^ (W[hook(22, 122 - 15)] >> 3U)) + (rotate(W[hook(22, 122 - 2)], (u)15) ^ rotate(W[hook(22, 122 - 2)], (u)13) ^ (W[hook(22, 122 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 122) % 8)] += (K[hook(23, 122 % 64)] + Vals[hook(21, (135 - 122) % 8)] + W[hook(22, 122)] + (rotate(Vals[hook(21, (132 - 122) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 122) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 122) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 122) % 8)], Vals[hook(21, (133 - 122) % 8)], Vals[hook(21, (132 - 122) % 8)])));
    Vals[hook(21, (135 - 122) % 8)] = (K[hook(23, 122 % 64)] + Vals[hook(21, (135 - 122) % 8)] + W[hook(22, 122)] + (rotate(Vals[hook(21, (132 - 122) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 122) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 122) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 122) % 8)], Vals[hook(21, (133 - 122) % 8)], Vals[hook(21, (132 - 122) % 8)]))) + (rotate(Vals[hook(21, (128 - 122) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 122) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 122) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 122) % 8)], Vals[hook(21, (130 - 122) % 8)], (Vals[hook(21, (128 - 122) % 8)] ^ Vals[hook(21, (129 - 122) % 8)])));
  };
  (W[hook(22, 123)] = W[hook(22, 123 - 16)] + W[hook(22, 123 - 7)] + (rotate(W[hook(22, 123 - 15)], (u)25) ^ rotate(W[hook(22, 123 - 15)], (u)14) ^ (W[hook(22, 123 - 15)] >> 3U)) + (rotate(W[hook(22, 123 - 2)], (u)15) ^ rotate(W[hook(22, 123 - 2)], (u)13) ^ (W[hook(22, 123 - 2)] >> 10U)));
  {
    Vals[hook(21, (131 - 123) % 8)] += (K[hook(23, 123 % 64)] + Vals[hook(21, (135 - 123) % 8)] + W[hook(22, 123)] + (rotate(Vals[hook(21, (132 - 123) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 123) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 123) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 123) % 8)], Vals[hook(21, (133 - 123) % 8)], Vals[hook(21, (132 - 123) % 8)])));
    Vals[hook(21, (135 - 123) % 8)] = (K[hook(23, 123 % 64)] + Vals[hook(21, (135 - 123) % 8)] + W[hook(22, 123)] + (rotate(Vals[hook(21, (132 - 123) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 123) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 123) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 123) % 8)], Vals[hook(21, (133 - 123) % 8)], Vals[hook(21, (132 - 123) % 8)]))) + (rotate(Vals[hook(21, (128 - 123) % 8)], (u)30) ^ rotate(Vals[hook(21, (128 - 123) % 8)], (u)19) ^ rotate(Vals[hook(21, (128 - 123) % 8)], (u)10)) + (bitselect(Vals[hook(21, (129 - 123) % 8)], Vals[hook(21, (130 - 123) % 8)], (Vals[hook(21, (128 - 123) % 8)] ^ Vals[hook(21, (129 - 123) % 8)])));
  };

  Vals[hook(21, 7)] += Vals[hook(21, 3)] + W[hook(22, 124 - 16)] + W[hook(22, 124 - 7)] + (rotate(W[hook(22, 124 - 15)], (u)25) ^ rotate(W[hook(22, 124 - 15)], (u)14) ^ (W[hook(22, 124 - 15)] >> 3U)) + (rotate(W[hook(22, 124 - 2)], (u)15) ^ rotate(W[hook(22, 124 - 2)], (u)13) ^ (W[hook(22, 124 - 2)] >> 10U)) + (rotate(Vals[hook(21, (132 - 124) % 8)], (u)26) ^ rotate(Vals[hook(21, (132 - 124) % 8)], (u)21) ^ rotate(Vals[hook(21, (132 - 124) % 8)], (u)7)) + (bitselect(Vals[hook(21, (134 - 124) % 8)], Vals[hook(21, (133 - 124) % 8)], Vals[hook(21, (132 - 124) % 8)]));
  if (Vals[hook(21, 7)] == -H[hook(24, 7)]) {
    output[hook(20, 256)] = output[hook(20, (W[3hook(22, 3) >> 2) & 255)] = W[hook(22, 3)];
  }
}
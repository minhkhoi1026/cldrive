//{"result":1,"src":0}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
kernel void test_vector_creation8(global uchar* src, global uchar8* result) {
  result[hook(1, 0)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 1)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 2)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 3)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 4)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 5)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 6)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 7)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], src[hook(0, 3)], vload4(0, src + 4));
  result[hook(1, 8)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], vload2(0, src + 3), src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 9)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], vload2(0, src + 3), src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 10)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], vload2(0, src + 3), vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 11)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], vload2(0, src + 3), vload3(0, src + 5));
  result[hook(1, 12)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], vload3(0, src + 3), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 13)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], vload3(0, src + 3), vload2(0, src + 6));
  result[hook(1, 14)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], src[hook(0, 2)], vload4(0, src + 3), src[hook(0, 7)]);
  result[hook(1, 15)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 16)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 17)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 18)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 19)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 20)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 21)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 22)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload2(0, src + 2), vload4(0, src + 4));
  result[hook(1, 23)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload3(0, src + 2), src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 24)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload3(0, src + 2), src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 25)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload3(0, src + 2), vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 26)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload3(0, src + 2), vload3(0, src + 5));
  result[hook(1, 27)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload4(0, src + 2), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 28)] = (uchar8)(src[hook(0, 0)], src[hook(0, 1)], vload4(0, src + 2), vload2(0, src + 6));
  result[hook(1, 29)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 30)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 31)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 32)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 33)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 34)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 35)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 36)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), src[hook(0, 3)], vload4(0, src + 4));
  result[hook(1, 37)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), vload2(0, src + 3), src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 38)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), vload2(0, src + 3), src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 39)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), vload2(0, src + 3), vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 40)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), vload2(0, src + 3), vload3(0, src + 5));
  result[hook(1, 41)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), vload3(0, src + 3), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 42)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), vload3(0, src + 3), vload2(0, src + 6));
  result[hook(1, 43)] = (uchar8)(src[hook(0, 0)], vload2(0, src + 1), vload4(0, src + 3), src[hook(0, 7)]);
  result[hook(1, 44)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 45)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 46)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 47)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 48)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 49)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 50)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 51)] = (uchar8)(src[hook(0, 0)], vload3(0, src + 1), vload4(0, src + 4));
  result[hook(1, 52)] = (uchar8)(src[hook(0, 0)], vload4(0, src + 1), src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 53)] = (uchar8)(src[hook(0, 0)], vload4(0, src + 1), src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 54)] = (uchar8)(src[hook(0, 0)], vload4(0, src + 1), vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 55)] = (uchar8)(src[hook(0, 0)], vload4(0, src + 1), vload3(0, src + 5));
  result[hook(1, 56)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 57)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 58)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 59)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 60)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 61)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 62)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 63)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], src[hook(0, 3)], vload4(0, src + 4));
  result[hook(1, 64)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], vload2(0, src + 3), src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 65)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], vload2(0, src + 3), src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 66)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], vload2(0, src + 3), vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 67)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], vload2(0, src + 3), vload3(0, src + 5));
  result[hook(1, 68)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], vload3(0, src + 3), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 69)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], vload3(0, src + 3), vload2(0, src + 6));
  result[hook(1, 70)] = (uchar8)(vload2(0, src + 0), src[hook(0, 2)], vload4(0, src + 3), src[hook(0, 7)]);
  result[hook(1, 71)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 72)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 73)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 74)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 75)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 76)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 77)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 78)] = (uchar8)(vload2(0, src + 0), vload2(0, src + 2), vload4(0, src + 4));
  result[hook(1, 79)] = (uchar8)(vload2(0, src + 0), vload3(0, src + 2), src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 80)] = (uchar8)(vload2(0, src + 0), vload3(0, src + 2), src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 81)] = (uchar8)(vload2(0, src + 0), vload3(0, src + 2), vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 82)] = (uchar8)(vload2(0, src + 0), vload3(0, src + 2), vload3(0, src + 5));
  result[hook(1, 83)] = (uchar8)(vload2(0, src + 0), vload4(0, src + 2), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 84)] = (uchar8)(vload2(0, src + 0), vload4(0, src + 2), vload2(0, src + 6));
  result[hook(1, 85)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 86)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 87)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 88)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 89)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 90)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 91)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 92)] = (uchar8)(vload3(0, src + 0), src[hook(0, 3)], vload4(0, src + 4));
  result[hook(1, 93)] = (uchar8)(vload3(0, src + 0), vload2(0, src + 3), src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 94)] = (uchar8)(vload3(0, src + 0), vload2(0, src + 3), src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 95)] = (uchar8)(vload3(0, src + 0), vload2(0, src + 3), vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 96)] = (uchar8)(vload3(0, src + 0), vload2(0, src + 3), vload3(0, src + 5));
  result[hook(1, 97)] = (uchar8)(vload3(0, src + 0), vload3(0, src + 3), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 98)] = (uchar8)(vload3(0, src + 0), vload3(0, src + 3), vload2(0, src + 6));
  result[hook(1, 99)] = (uchar8)(vload3(0, src + 0), vload4(0, src + 3), src[hook(0, 7)]);
  result[hook(1, 100)] = (uchar8)(vload4(0, src + 0), src[hook(0, 4)], src[hook(0, 5)], src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 101)] = (uchar8)(vload4(0, src + 0), src[hook(0, 4)], src[hook(0, 5)], vload2(0, src + 6));
  result[hook(1, 102)] = (uchar8)(vload4(0, src + 0), src[hook(0, 4)], vload2(0, src + 5), src[hook(0, 7)]);
  result[hook(1, 103)] = (uchar8)(vload4(0, src + 0), src[hook(0, 4)], vload3(0, src + 5));
  result[hook(1, 104)] = (uchar8)(vload4(0, src + 0), vload2(0, src + 4), src[hook(0, 6)], src[hook(0, 7)]);
  result[hook(1, 105)] = (uchar8)(vload4(0, src + 0), vload2(0, src + 4), vload2(0, src + 6));
  result[hook(1, 106)] = (uchar8)(vload4(0, src + 0), vload3(0, src + 4), src[hook(0, 7)]);
  result[hook(1, 107)] = (uchar8)(vload4(0, src + 0), vload4(0, src + 4));
  result[hook(1, 108)] = (uchar8)(vload8(0, src + 0));
}
//{"output":1,"sharedMemory":0}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
kernel void LDSBandwidth_single_verify(local float* sharedMemory, global float* output) {
  float val1 = (float)(0);
  float val2 = val1;
  unsigned int gid = get_global_id(0);
  unsigned int lid = get_local_id(0);
  for (int i = 0; i < 256; i++)
    sharedMemory[hook(0, i)] = 0;
  barrier(0x01);
  val1 = val1 + sharedMemory[hook(0, 0)];
  val2 = val2 + sharedMemory[hook(0, 1)];
  val1 = val1 + sharedMemory[hook(0, 2)];
  val2 = val2 + sharedMemory[hook(0, 3)];
  val1 = val1 + sharedMemory[hook(0, 4)];
  val2 = val2 + sharedMemory[hook(0, 5)];
  val1 = val1 + sharedMemory[hook(0, 6)];
  val2 = val2 + sharedMemory[hook(0, 7)];
  val1 = val1 + sharedMemory[hook(0, 8)];
  val2 = val2 + sharedMemory[hook(0, 9)];
  val1 = val1 + sharedMemory[hook(0, 10)];
  val2 = val2 + sharedMemory[hook(0, 11)];
  val1 = val1 + sharedMemory[hook(0, 12)];
  val2 = val2 + sharedMemory[hook(0, 13)];
  val1 = val1 + sharedMemory[hook(0, 14)];
  val2 = val2 + sharedMemory[hook(0, 15)];
  val1 = val1 + sharedMemory[hook(0, 16)];
  val2 = val2 + sharedMemory[hook(0, 17)];
  val1 = val1 + sharedMemory[hook(0, 18)];
  val2 = val2 + sharedMemory[hook(0, 19)];
  val1 = val1 + sharedMemory[hook(0, 20)];
  val2 = val2 + sharedMemory[hook(0, 21)];
  val1 = val1 + sharedMemory[hook(0, 22)];
  val2 = val2 + sharedMemory[hook(0, 23)];
  val1 = val1 + sharedMemory[hook(0, 24)];
  val2 = val2 + sharedMemory[hook(0, 25)];
  val1 = val1 + sharedMemory[hook(0, 26)];
  val2 = val2 + sharedMemory[hook(0, 27)];
  val1 = val1 + sharedMemory[hook(0, 28)];
  val2 = val2 + sharedMemory[hook(0, 29)];
  val1 = val1 + sharedMemory[hook(0, 30)];
  val2 = val2 + sharedMemory[hook(0, 31)];
  val1 = val1 + sharedMemory[hook(0, 32)];
  val2 = val2 + sharedMemory[hook(0, 33)];
  val1 = val1 + sharedMemory[hook(0, 34)];
  val2 = val2 + sharedMemory[hook(0, 35)];
  val1 = val1 + sharedMemory[hook(0, 36)];
  val2 = val2 + sharedMemory[hook(0, 37)];
  val1 = val1 + sharedMemory[hook(0, 38)];
  val2 = val2 + sharedMemory[hook(0, 39)];
  val1 = val1 + sharedMemory[hook(0, 40)];
  val2 = val2 + sharedMemory[hook(0, 41)];
  val1 = val1 + sharedMemory[hook(0, 42)];
  val2 = val2 + sharedMemory[hook(0, 43)];
  val1 = val1 + sharedMemory[hook(0, 44)];
  val2 = val2 + sharedMemory[hook(0, 45)];
  val1 = val1 + sharedMemory[hook(0, 46)];
  val2 = val2 + sharedMemory[hook(0, 47)];
  val1 = val1 + sharedMemory[hook(0, 48)];
  val2 = val2 + sharedMemory[hook(0, 49)];
  val1 = val1 + sharedMemory[hook(0, 50)];
  val2 = val2 + sharedMemory[hook(0, 51)];
  val1 = val1 + sharedMemory[hook(0, 52)];
  val2 = val2 + sharedMemory[hook(0, 53)];
  val1 = val1 + sharedMemory[hook(0, 54)];
  val2 = val2 + sharedMemory[hook(0, 55)];
  val1 = val1 + sharedMemory[hook(0, 56)];
  val2 = val2 + sharedMemory[hook(0, 57)];
  val1 = val1 + sharedMemory[hook(0, 58)];
  val2 = val2 + sharedMemory[hook(0, 59)];
  val1 = val1 + sharedMemory[hook(0, 60)];
  val2 = val2 + sharedMemory[hook(0, 61)];
  val1 = val1 + sharedMemory[hook(0, 62)];
  val2 = val2 + sharedMemory[hook(0, 63)];
  val1 = val1 + sharedMemory[hook(0, 64)];
  val2 = val2 + sharedMemory[hook(0, 65)];
  val1 = val1 + sharedMemory[hook(0, 66)];
  val2 = val2 + sharedMemory[hook(0, 67)];
  val1 = val1 + sharedMemory[hook(0, 68)];
  val2 = val2 + sharedMemory[hook(0, 69)];
  val1 = val1 + sharedMemory[hook(0, 70)];
  val2 = val2 + sharedMemory[hook(0, 71)];
  val1 = val1 + sharedMemory[hook(0, 72)];
  val2 = val2 + sharedMemory[hook(0, 73)];
  val1 = val1 + sharedMemory[hook(0, 74)];
  val2 = val2 + sharedMemory[hook(0, 75)];
  val1 = val1 + sharedMemory[hook(0, 76)];
  val2 = val2 + sharedMemory[hook(0, 77)];
  val1 = val1 + sharedMemory[hook(0, 78)];
  val2 = val2 + sharedMemory[hook(0, 79)];
  val1 = val1 + sharedMemory[hook(0, 80)];
  val2 = val2 + sharedMemory[hook(0, 81)];
  val1 = val1 + sharedMemory[hook(0, 82)];
  val2 = val2 + sharedMemory[hook(0, 83)];
  val1 = val1 + sharedMemory[hook(0, 84)];
  val2 = val2 + sharedMemory[hook(0, 85)];
  val1 = val1 + sharedMemory[hook(0, 86)];
  val2 = val2 + sharedMemory[hook(0, 87)];
  val1 = val1 + sharedMemory[hook(0, 88)];
  val2 = val2 + sharedMemory[hook(0, 89)];
  val1 = val1 + sharedMemory[hook(0, 90)];
  val2 = val2 + sharedMemory[hook(0, 91)];
  val1 = val1 + sharedMemory[hook(0, 92)];
  val2 = val2 + sharedMemory[hook(0, 93)];
  val1 = val1 + sharedMemory[hook(0, 94)];
  val2 = val2 + sharedMemory[hook(0, 95)];
  val1 = val1 + sharedMemory[hook(0, 96)];
  val2 = val2 + sharedMemory[hook(0, 97)];
  val1 = val1 + sharedMemory[hook(0, 98)];
  val2 = val2 + sharedMemory[hook(0, 99)];
  val1 = val1 + sharedMemory[hook(0, 100)];
  val2 = val2 + sharedMemory[hook(0, 101)];
  val1 = val1 + sharedMemory[hook(0, 102)];
  val2 = val2 + sharedMemory[hook(0, 103)];
  val1 = val1 + sharedMemory[hook(0, 104)];
  val2 = val2 + sharedMemory[hook(0, 105)];
  val1 = val1 + sharedMemory[hook(0, 106)];
  val2 = val2 + sharedMemory[hook(0, 107)];
  val1 = val1 + sharedMemory[hook(0, 108)];
  val2 = val2 + sharedMemory[hook(0, 109)];
  val1 = val1 + sharedMemory[hook(0, 110)];
  val2 = val2 + sharedMemory[hook(0, 111)];
  val1 = val1 + sharedMemory[hook(0, 112)];
  val2 = val2 + sharedMemory[hook(0, 113)];
  val1 = val1 + sharedMemory[hook(0, 114)];
  val2 = val2 + sharedMemory[hook(0, 115)];
  val1 = val1 + sharedMemory[hook(0, 116)];
  val2 = val2 + sharedMemory[hook(0, 117)];
  val1 = val1 + sharedMemory[hook(0, 118)];
  val2 = val2 + sharedMemory[hook(0, 119)];
  val1 = val1 + sharedMemory[hook(0, 120)];
  val2 = val2 + sharedMemory[hook(0, 121)];
  val1 = val1 + sharedMemory[hook(0, 122)];
  val2 = val2 + sharedMemory[hook(0, 123)];
  val1 = val1 + sharedMemory[hook(0, 124)];
  val2 = val2 + sharedMemory[hook(0, 125)];
  val1 = val1 + sharedMemory[hook(0, 126)];
  val2 = val2 + sharedMemory[hook(0, 127)];
  val1 = val1 + sharedMemory[hook(0, 128)];
  val2 = val2 + sharedMemory[hook(0, 129)];
  val1 = val1 + sharedMemory[hook(0, 130)];
  val2 = val2 + sharedMemory[hook(0, 131)];
  val1 = val1 + sharedMemory[hook(0, 132)];
  val2 = val2 + sharedMemory[hook(0, 133)];
  val1 = val1 + sharedMemory[hook(0, 134)];
  val2 = val2 + sharedMemory[hook(0, 135)];
  val1 = val1 + sharedMemory[hook(0, 136)];
  val2 = val2 + sharedMemory[hook(0, 137)];
  val1 = val1 + sharedMemory[hook(0, 138)];
  val2 = val2 + sharedMemory[hook(0, 139)];
  val1 = val1 + sharedMemory[hook(0, 140)];
  val2 = val2 + sharedMemory[hook(0, 141)];
  val1 = val1 + sharedMemory[hook(0, 142)];
  val2 = val2 + sharedMemory[hook(0, 143)];
  val1 = val1 + sharedMemory[hook(0, 144)];
  val2 = val2 + sharedMemory[hook(0, 145)];
  val1 = val1 + sharedMemory[hook(0, 146)];
  val2 = val2 + sharedMemory[hook(0, 147)];
  val1 = val1 + sharedMemory[hook(0, 148)];
  val2 = val2 + sharedMemory[hook(0, 149)];
  val1 = val1 + sharedMemory[hook(0, 150)];
  val2 = val2 + sharedMemory[hook(0, 151)];
  val1 = val1 + sharedMemory[hook(0, 152)];
  val2 = val2 + sharedMemory[hook(0, 153)];
  val1 = val1 + sharedMemory[hook(0, 154)];
  val2 = val2 + sharedMemory[hook(0, 155)];
  val1 = val1 + sharedMemory[hook(0, 156)];
  val2 = val2 + sharedMemory[hook(0, 157)];
  val1 = val1 + sharedMemory[hook(0, 158)];
  val2 = val2 + sharedMemory[hook(0, 159)];
  val1 = val1 + sharedMemory[hook(0, 160)];
  val2 = val2 + sharedMemory[hook(0, 161)];
  val1 = val1 + sharedMemory[hook(0, 162)];
  val2 = val2 + sharedMemory[hook(0, 163)];
  val1 = val1 + sharedMemory[hook(0, 164)];
  val2 = val2 + sharedMemory[hook(0, 165)];
  val1 = val1 + sharedMemory[hook(0, 166)];
  val2 = val2 + sharedMemory[hook(0, 167)];
  val1 = val1 + sharedMemory[hook(0, 168)];
  val2 = val2 + sharedMemory[hook(0, 169)];
  val1 = val1 + sharedMemory[hook(0, 170)];
  val2 = val2 + sharedMemory[hook(0, 171)];
  val1 = val1 + sharedMemory[hook(0, 172)];
  val2 = val2 + sharedMemory[hook(0, 173)];
  val1 = val1 + sharedMemory[hook(0, 174)];
  val2 = val2 + sharedMemory[hook(0, 175)];
  val1 = val1 + sharedMemory[hook(0, 176)];
  val2 = val2 + sharedMemory[hook(0, 177)];
  val1 = val1 + sharedMemory[hook(0, 178)];
  val2 = val2 + sharedMemory[hook(0, 179)];
  val1 = val1 + sharedMemory[hook(0, 180)];
  val2 = val2 + sharedMemory[hook(0, 181)];
  val1 = val1 + sharedMemory[hook(0, 182)];
  val2 = val2 + sharedMemory[hook(0, 183)];
  val1 = val1 + sharedMemory[hook(0, 184)];
  val2 = val2 + sharedMemory[hook(0, 185)];
  val1 = val1 + sharedMemory[hook(0, 186)];
  val2 = val2 + sharedMemory[hook(0, 187)];
  val1 = val1 + sharedMemory[hook(0, 188)];
  val2 = val2 + sharedMemory[hook(0, 189)];
  val1 = val1 + sharedMemory[hook(0, 190)];
  val2 = val2 + sharedMemory[hook(0, 191)];
  val1 = val1 + sharedMemory[hook(0, 192)];
  val2 = val2 + sharedMemory[hook(0, 193)];
  val1 = val1 + sharedMemory[hook(0, 194)];
  val2 = val2 + sharedMemory[hook(0, 195)];
  val1 = val1 + sharedMemory[hook(0, 196)];
  val2 = val2 + sharedMemory[hook(0, 197)];
  val1 = val1 + sharedMemory[hook(0, 198)];
  val2 = val2 + sharedMemory[hook(0, 199)];
  val1 = val1 + sharedMemory[hook(0, 200)];
  val2 = val2 + sharedMemory[hook(0, 201)];
  val1 = val1 + sharedMemory[hook(0, 202)];
  val2 = val2 + sharedMemory[hook(0, 203)];
  val1 = val1 + sharedMemory[hook(0, 204)];
  val2 = val2 + sharedMemory[hook(0, 205)];
  val1 = val1 + sharedMemory[hook(0, 206)];
  val2 = val2 + sharedMemory[hook(0, 207)];
  val1 = val1 + sharedMemory[hook(0, 208)];
  val2 = val2 + sharedMemory[hook(0, 209)];
  val1 = val1 + sharedMemory[hook(0, 210)];
  val2 = val2 + sharedMemory[hook(0, 211)];
  val1 = val1 + sharedMemory[hook(0, 212)];
  val2 = val2 + sharedMemory[hook(0, 213)];
  val1 = val1 + sharedMemory[hook(0, 214)];
  val2 = val2 + sharedMemory[hook(0, 215)];
  val1 = val1 + sharedMemory[hook(0, 216)];
  val2 = val2 + sharedMemory[hook(0, 217)];
  val1 = val1 + sharedMemory[hook(0, 218)];
  val2 = val2 + sharedMemory[hook(0, 219)];
  val1 = val1 + sharedMemory[hook(0, 220)];
  val2 = val2 + sharedMemory[hook(0, 221)];
  val1 = val1 + sharedMemory[hook(0, 222)];
  val2 = val2 + sharedMemory[hook(0, 223)];
  val1 = val1 + sharedMemory[hook(0, 224)];
  val2 = val2 + sharedMemory[hook(0, 225)];
  val1 = val1 + sharedMemory[hook(0, 226)];
  val2 = val2 + sharedMemory[hook(0, 227)];
  val1 = val1 + sharedMemory[hook(0, 228)];
  val2 = val2 + sharedMemory[hook(0, 229)];
  val1 = val1 + sharedMemory[hook(0, 230)];
  val2 = val2 + sharedMemory[hook(0, 231)];
  val1 = val1 + sharedMemory[hook(0, 232)];
  val2 = val2 + sharedMemory[hook(0, 233)];
  val1 = val1 + sharedMemory[hook(0, 234)];
  val2 = val2 + sharedMemory[hook(0, 235)];
  val1 = val1 + sharedMemory[hook(0, 236)];
  val2 = val2 + sharedMemory[hook(0, 237)];
  val1 = val1 + sharedMemory[hook(0, 238)];
  val2 = val2 + sharedMemory[hook(0, 239)];
  val1 = val1 + sharedMemory[hook(0, 240)];
  val2 = val2 + sharedMemory[hook(0, 241)];
  val1 = val1 + sharedMemory[hook(0, 242)];
  val2 = val2 + sharedMemory[hook(0, 243)];
  val1 = val1 + sharedMemory[hook(0, 244)];
  val2 = val2 + sharedMemory[hook(0, 245)];
  val1 = val1 + sharedMemory[hook(0, 246)];
  val2 = val2 + sharedMemory[hook(0, 247)];
  val1 = val1 + sharedMemory[hook(0, 248)];
  val2 = val2 + sharedMemory[hook(0, 249)];
  val1 = val1 + sharedMemory[hook(0, 250)];
  val2 = val2 + sharedMemory[hook(0, 251)];
  val1 = val1 + sharedMemory[hook(0, 252)];
  val2 = val2 + sharedMemory[hook(0, 253)];
  val1 = val1 + sharedMemory[hook(0, 254)];
  val2 = val2 + sharedMemory[hook(0, 255)];
  output[hook(1, gid)] = val1 + val2;
}
//{"((__private uint2 *)&v[0])":9,"((__private uint2 *)&v[10])":19,"((__private uint2 *)&v[11])":23,"((__private uint2 *)&v[12])":8,"((__private uint2 *)&v[13])":12,"((__private uint2 *)&v[14])":16,"((__private uint2 *)&v[15])":20,"((__private uint2 *)&v[1])":13,"((__private uint2 *)&v[2])":17,"((__private uint2 *)&v[3])":21,"((__private uint2 *)&v[4])":10,"((__private uint2 *)&v[5])":14,"((__private uint2 *)&v[6])":18,"((__private uint2 *)&v[7])":22,"((__private uint2 *)&v[8])":11,"((__private uint2 *)&v[9])":15,"blake_iv":5,"blockHeader":3,"counters":2,"dataShare":24,"m":6,"nonce":4,"outputHi":1,"outputLo":0,"v":7,"v2":25}
int hook(int argId, int id) {
	int gID = get_global_id(0);
	printf("%d,%d,%d\n", gID, argId, id);
	return id;
}
inline unsigned int swapBitOrder(unsigned int input) {
  unsigned int tmp0 = input & 0x0F0F0F0F;
  unsigned int tmp1 = input & 0xF0F0F0F0;

  tmp0 = tmp0 << 4;
  tmp1 = tmp1 >> 4;

  unsigned int tmpIn = tmp0 | tmp1;

  tmp0 = tmpIn & 0x33333333;
  tmp1 = tmpIn & 0xCCCCCCCC;

  tmp0 = tmp0 << 2;
  tmp1 = tmp1 >> 2;

  tmpIn = tmp0 | tmp1;

  tmp0 = tmpIn & 0x55555555;
  tmp1 = tmpIn & 0xAAAAAAAA;

  tmp0 = tmp0 << 1;
  tmp1 = tmp1 >> 1;

  return tmp0 | tmp1;
}

constant ulong blake_iv[] = {
    0x6a09e667f3bcc908, 0xbb67ae8584caa73b, 0x3c6ef372fe94f82b, 0xa54ff53a5f1d36f1, 0x510e527fade682d1, 0x9b05688c2b3e6c1f, 0x1f83d9abfb41bd6b, 0x5be0cd19137e2179,
};

uint8 shr_5(uint8 input, unsigned int sh) {
  uint8 tmp = (input >> sh);
  uint8 tmp2 = (input << 32 - sh);

  tmp.s0123 |= tmp2.s1234;

  tmp.s5 = input.s5;
  tmp.s67 = input.s67;
  return tmp;
}

uint4 shr_4(uint4 input, unsigned int sh) {
  uint4 tmp = (input >> sh);
  uint4 tmp2 = (input << 32 - sh);

  tmp.s01 |= tmp2.s12;
  tmp.s2 |= tmp2.s3;

  return tmp;
}

inline uint2 ror64(const uint2 x, const unsigned int y) {
  return (uint2)(((x).x >> y) ^ ((x).y << (32 - y)), ((x).y >> y) ^ ((x).x << (32 - y)));
}
inline uint2 ror64_2(const uint2 x, const unsigned int y) {
  return (uint2)(((x).y >> (y - 32)) ^ ((x).x << (64 - y)), ((x).x >> (y - 32)) ^ ((x).y << (64 - y)));
}
ulong8 initBlake() {
  ulong8 result;

  result.s0 = blake_iv[hook(5, 0)] ^ (0x01010000 | 57);

  result.s1 = blake_iv[hook(5, 1)];
  result.s2 = blake_iv[hook(5, 2)];
  result.s3 = blake_iv[hook(5, 3)];
  result.s4 = blake_iv[hook(5, 4)];
  result.s5 = blake_iv[hook(5, 5)];

  result.s6 = blake_iv[hook(5, 6)] ^ 0x576F502D6D616542;

  ulong value = 5;
  value = value << 32;
  value |= 150;

  result.s7 = blake_iv[hook(5, 7)] ^ value;

  return result;
}
kernel void round0_BH2(global uint4* outputLo, global uint2* outputHi, global unsigned int* counters, ulong4 blockHeader, ulong nonce) {
  unsigned int tId = get_global_id(0);

  ulong v[16];
  ulong m[16];
  m[hook(6, 0)] = blockHeader.s0;
  m[hook(6, 1)] = blockHeader.s1;
  m[hook(6, 2)] = blockHeader.s2;
  m[hook(6, 3)] = blockHeader.s3;

  m[hook(6, 4)] = nonce;
  m[hook(6, 5)] = (ulong)tId;
  m[hook(6, 6)] = 0;
  m[hook(6, 7)] = 0;

  m[hook(6, 8)] = 0;
  m[hook(6, 9)] = 0;
  m[hook(6, 10)] = 0;
  m[hook(6, 11)] = 0;

  m[hook(6, 12)] = 0;
  m[hook(6, 13)] = 0;
  m[hook(6, 14)] = 0;
  m[hook(6, 15)] = 0;

  ulong8 blake_state = initBlake();

  v[hook(7, 0)] = blake_state.s0;
  v[hook(7, 1)] = blake_state.s1;
  v[hook(7, 2)] = blake_state.s2;
  v[hook(7, 3)] = blake_state.s3;
  v[hook(7, 4)] = blake_state.s4;
  v[hook(7, 5)] = blake_state.s5;
  v[hook(7, 6)] = blake_state.s6;
  v[hook(7, 7)] = blake_state.s7;
  v[hook(7, 8)] = blake_iv[hook(5, 0)];
  v[hook(7, 9)] = blake_iv[hook(5, 1)];
  v[hook(7, 10)] = blake_iv[hook(5, 2)];
  v[hook(7, 11)] = blake_iv[hook(5, 3)];
  v[hook(7, 12)] = blake_iv[hook(5, 4)];
  v[hook(7, 13)] = blake_iv[hook(5, 5)];
  v[hook(7, 14)] = blake_iv[hook(5, 6)];
  v[hook(7, 15)] = blake_iv[hook(5, 7)];

  v[hook(7, 12)] ^= 44;
  v[hook(7, 14)] ^= (ulong)-1;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 14)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 4)] + m[hook(6, 10)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 4)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 5)] + m[hook(6, 8)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 9)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 6)] + m[hook(6, 15)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 13)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 7)] + m[hook(6, 6)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 1)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ((uint2*)&v[hook(7, 15)])[hook(20, 0)].yx ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)].yx;
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 24U);
  v[hook(7, 0)] = (v[hook(7, 0)] + v[hook(7, 5)] + m[hook(6, 12)]);
  ((uint2*)&v[hook(7, 15)])[hook(20, 0)] = ror64(((uint2*)&v[hook(7, 15)])[hook(20, 0)] ^ ((uint2*)&v[hook(7, 0)])[hook(9, 0)], 16U);
  v[hook(7, 10)] = (v[hook(7, 10)] + v[hook(7, 15)]);
  ((uint2*)&v[hook(7, 5)])[hook(14, 0)] = ror64_2(((uint2*)&v[hook(7, 5)])[hook(14, 0)] ^ ((uint2*)&v[hook(7, 10)])[hook(19, 0)], 63U);
  ;
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 0)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ((uint2*)&v[hook(7, 12)])[hook(8, 0)].yx ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)].yx;
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 24U);
  v[hook(7, 1)] = (v[hook(7, 1)] + v[hook(7, 6)] + m[hook(6, 2)]);
  ((uint2*)&v[hook(7, 12)])[hook(8, 0)] = ror64(((uint2*)&v[hook(7, 12)])[hook(8, 0)] ^ ((uint2*)&v[hook(7, 1)])[hook(13, 0)], 16U);
  v[hook(7, 11)] = (v[hook(7, 11)] + v[hook(7, 12)]);
  ((uint2*)&v[hook(7, 6)])[hook(18, 0)] = ror64_2(((uint2*)&v[hook(7, 6)])[hook(18, 0)] ^ ((uint2*)&v[hook(7, 11)])[hook(23, 0)], 63U);
  ;
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 11)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ((uint2*)&v[hook(7, 13)])[hook(12, 0)].yx ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)].yx;
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 24U);
  v[hook(7, 2)] = (v[hook(7, 2)] + v[hook(7, 7)] + m[hook(6, 7)]);
  ((uint2*)&v[hook(7, 13)])[hook(12, 0)] = ror64(((uint2*)&v[hook(7, 13)])[hook(12, 0)] ^ ((uint2*)&v[hook(7, 2)])[hook(17, 0)], 16U);
  v[hook(7, 8)] = (v[hook(7, 8)] + v[hook(7, 13)]);
  ((uint2*)&v[hook(7, 7)])[hook(22, 0)] = ror64_2(((uint2*)&v[hook(7, 7)])[hook(22, 0)] ^ ((uint2*)&v[hook(7, 8)])[hook(11, 0)], 63U);
  ;
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 5)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ((uint2*)&v[hook(7, 14)])[hook(16, 0)].yx ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)].yx;
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 24U);
  v[hook(7, 3)] = (v[hook(7, 3)] + v[hook(7, 4)] + m[hook(6, 3)]);
  ((uint2*)&v[hook(7, 14)])[hook(16, 0)] = ror64(((uint2*)&v[hook(7, 14)])[hook(16, 0)] ^ ((uint2*)&v[hook(7, 3)])[hook(21, 0)], 16U);
  v[hook(7, 9)] = (v[hook(7, 9)] + v[hook(7, 14)]);
  ((uint2*)&v[hook(7, 4)])[hook(10, 0)] = ror64_2(((uint2*)&v[hook(7, 4)])[hook(10, 0)] ^ ((uint2*)&v[hook(7, 9)])[hook(15, 0)], 63U);
  ;

  v[hook(7, 0)] = v[hook(7, 0)] ^ blake_state.s0 ^ v[hook(7, 8)];
  v[hook(7, 1)] = v[hook(7, 1)] ^ blake_state.s1 ^ v[hook(7, 9)];
  v[hook(7, 2)] = v[hook(7, 2)] ^ blake_state.s2 ^ v[hook(7, 10)];
  v[hook(7, 3)] = v[hook(7, 3)] ^ blake_state.s3 ^ v[hook(7, 11)];
  v[hook(7, 4)] = v[hook(7, 4)] ^ blake_state.s4 ^ v[hook(7, 12)];
  v[hook(7, 5)] = v[hook(7, 5)] ^ blake_state.s5 ^ v[hook(7, 13)];
  v[hook(7, 6)] = v[hook(7, 6)] ^ blake_state.s6 ^ v[hook(7, 14)];
  v[hook(7, 7)] = v[hook(7, 7)] ^ blake_state.s7 ^ v[hook(7, 15)];

  uint8 output;
  unsigned int pos;
  unsigned int bucket;

  local unsigned int dataShare[4096];

  unsigned int lId = get_local_id(0);

  for (unsigned int i = 0; i < 8; i++) {
    dataShare[hook(24, 16 * lId + 2 * i + 0)] = v[hook(7, i)];
    dataShare[hook(24, 16 * lId + 2 * i + 1)] = v[hook(7, i)] >> 32;
  }

  barrier(0x01);

  unsigned int v2[15];
  unsigned int start = lId & 0xF0;

  for (unsigned int i = 0; i < 15; i++) {
    v2[hook(25, i)] = 0;
    for (unsigned int j = start; j <= lId; j++)
      v2[hook(25, i)] += dataShare[hook(24, 16 * j + i)];
    v2[hook(25, i)] = swapBitOrder(v2[hook(25, i)]);
  }

  output.s0 = v2[hook(25, 0)];
  output.s1 = v2[hook(25, 1)];
  output.s2 = v2[hook(25, 2)];
  output.s3 = v2[hook(25, 3)];
  output.s4 = v2[hook(25, 4)] & 0x3FFFFF;
  output.s5 = (tId << 1) + tId;

  bucket = (output.s0 >> 6) & 0x3FF;

  pos = atomic_inc(&counters[hook(2, bucket)]);
  output = shr_5(output, 16);

  if (pos < 8672) {
    outputLo[hook(0, bucket * 8672 + pos)] = output.lo;
    outputHi[hook(1, bucket * 8672 + pos)] = output.s45;
  }

  output.s0 = (v2[hook(25, 4)] >> 24) | (v2[hook(25, 5)] << 8);
  output.s1 = (v2[hook(25, 5)] >> 24) | (v2[hook(25, 6)] << 8);
  output.s2 = (v2[hook(25, 6)] >> 24) | (v2[hook(25, 7)] << 8);
  output.s3 = (v2[hook(25, 7)] >> 24) | (v2[hook(25, 8)] << 8);
  output.s4 = ((v2[hook(25, 8)] >> 24) | (v2[hook(25, 9)] << 8)) & 0x3FFFFF;
  output.s5++;

  bucket = (output.s0 >> 6) & 0x3FF;

  pos = atomic_inc(&counters[hook(2, bucket)]);
  output = shr_5(output, 16);

  if (pos < 8672) {
    outputLo[hook(0, bucket * 8672 + pos)] = output.lo;
    outputHi[hook(1, bucket * 8672 + pos)] = output.s45;
  }

  output.s0 = (v2[hook(25, 9)] >> 16) | (v2[hook(25, 10)] << 16);
  output.s1 = (v2[hook(25, 10)] >> 16) | (v2[hook(25, 11)] << 16);
  output.s2 = (v2[hook(25, 11)] >> 16) | (v2[hook(25, 12)] << 16);
  output.s3 = (v2[hook(25, 12)] >> 16) | (v2[hook(25, 13)] << 16);
  output.s4 = ((v2[hook(25, 13)] >> 16) | (v2[hook(25, 14)] << 16)) & 0x3FFFFF;
  output.s5++;

  bucket = (output.s0 >> 6) & 0x3FF;

  pos = atomic_inc(&counters[hook(2, bucket)]);
  output = shr_5(output, 16);

  if (pos < 8672) {
    outputLo[hook(0, bucket * 8672 + pos)] = output.lo;
    outputHi[hook(1, bucket * 8672 + pos)] = output.s45;
  }
}